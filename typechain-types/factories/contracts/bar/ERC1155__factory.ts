/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ERC1155, ERC1155Interface } from "../../../contracts/bar/ERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610eaf806100206000396000f3fe608060405234801561001057600080fd5b50600436106100825760003560e01c8062fdd58e1461008757806301ffc9a7146100c55780630e89341c146100e85780632eb2c2d6146101165780634e1273f41461012b578063a22cb4651461014b578063bd85b0391461015e578063e985e9c51461017e578063f242432a146101a9575b600080fd5b6100b2610095366004610845565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6100d86100d3366004610885565b6101bc565b60405190151581526020016100bc565b6101096100f63660046108a9565b5060408051602081019091526000815290565b6040516100bc91906108c2565b6101296101243660046109a5565b61020e565b005b61013e610139366004610a60565b61030d565b6040516100bc9190610acc565b610129610159366004610b10565b61042d565b6100b261016c3660046108a9565b60026020526000908152604090205481565b6100d861018c366004610b4c565b600060208181529281526040808220909352908152205460ff1681565b6101296101b7366004610b7f565b610497565b60006001600160e01b031982166301ffc9a760e01b14806101ed5750636cdb3d1360e11b6001600160e01b03198316145b8061020857506303a24d0760e21b6001600160e01b03198316145b92915050565b8483146102365760405162461bcd60e51b815260040161022d90610bf7565b60405180910390fd5b61023f88610566565b61024d8888888888886105e9565b6001600160a01b0387163b156103035760405163bc197c8160e01b808252906001600160a01b0389169063bc197c81906102999033908d908c908c908c908c908c908c90600401610c88565b6020604051808303816000875af11580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc9190610cec565b6001600160e01b031916146103035760405162461bcd60e51b815260040161022d90610d09565b5050505050505050565b60608382811461032f5760405162461bcd60e51b815260040161022d90610bf7565b8067ffffffffffffffff81111561034857610348610d35565b604051908082528060200260200182016040528015610371578160200160208202803683370190505b50915060005b81811015610423576001600088888481811061039557610395610d4b565b90506020020160208101906103aa9190610d61565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008686848181106103de576103de610d4b565b9050602002013581526020019081526020016000205483828151811061040657610406610d4b565b60209081029190910101528061041b81610d92565b915050610377565b5050949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6104a086610566565b6104ac86868686610742565b6001600160a01b0385163b1561055e5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906104f49033908b908a908a908a908a90600401610dab565b6020604051808303816000875af1158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190610cec565b6001600160e01b0319161461055e5760405162461bcd60e51b815260040161022d90610d09565b505050505050565b6001600160a01b0381163314806105a357506001600160a01b03811660009081526020818152604080832033845290915290205460ff1615156001145b6105e65760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b604482015260640161022d565b50565b6001600160a01b03851661060f5760405162461bcd60e51b815260040161022d90610df2565b60005b838110156106de57600085858381811061062e5761062e610d4b565b905060200201359050600084848481811061064b5761064b610d4b565b6001600160a01b038c1660009081526001602090815260408083208884528252822080549390910294909401359450849392509061068a908490610e18565b90915550506001600160a01b0388166000908152600160209081526040808320858452909152812080548392906106c2908490610e2f565b92505081905550505080806106d690610d92565b915050610612565b50846001600160a01b0316866001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878787876040516107329493929190610e47565b60405180910390a4505050505050565b6001600160a01b0383166107685760405162461bcd60e51b815260040161022d90610df2565b6001600160a01b03841660009081526001602090815260408083208584529091528120805483929061079b908490610e18565b90915550506001600160a01b0383166000908152600160209081526040808320858452909152812080548392906107d3908490610e2f565b909155505060408051838152602081018390526001600160a01b03808616929087169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b80356001600160a01b038116811461084057600080fd5b919050565b6000806040838503121561085857600080fd5b61086183610829565b946020939093013593505050565b6001600160e01b0319811681146105e657600080fd5b60006020828403121561089757600080fd5b81356108a28161086f565b9392505050565b6000602082840312156108bb57600080fd5b5035919050565b600060208083528351808285015260005b818110156108ef578581018301518582016040015282016108d3565b81811115610901576000604083870101525b50601f01601f1916929092016040019392505050565b60008083601f84011261092957600080fd5b50813567ffffffffffffffff81111561094157600080fd5b6020830191508360208260051b850101111561095c57600080fd5b9250929050565b60008083601f84011261097557600080fd5b50813567ffffffffffffffff81111561098d57600080fd5b60208301915083602082850101111561095c57600080fd5b60008060008060008060008060a0898b0312156109c157600080fd5b6109ca89610829565b97506109d860208a01610829565b9650604089013567ffffffffffffffff808211156109f557600080fd5b610a018c838d01610917565b909850965060608b0135915080821115610a1a57600080fd5b610a268c838d01610917565b909650945060808b0135915080821115610a3f57600080fd5b50610a4c8b828c01610963565b999c989b5096995094979396929594505050565b60008060008060408587031215610a7657600080fd5b843567ffffffffffffffff80821115610a8e57600080fd5b610a9a88838901610917565b90965094506020870135915080821115610ab357600080fd5b50610ac087828801610917565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b81811015610b0457835183529284019291840191600101610ae8565b50909695505050505050565b60008060408385031215610b2357600080fd5b610b2c83610829565b915060208301358015158114610b4157600080fd5b809150509250929050565b60008060408385031215610b5f57600080fd5b610b6883610829565b9150610b7660208401610829565b90509250929050565b60008060008060008060a08789031215610b9857600080fd5b610ba187610829565b9550610baf60208801610829565b94506040870135935060608701359250608087013567ffffffffffffffff811115610bd957600080fd5b610be589828a01610963565b979a9699509497509295939492505050565b60208082526018908201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b604082015260600190565b81835260006001600160fb1b03831115610c4257600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090610cb5908301888a610c29565b8281036060840152610cc8818789610c29565b90508281036080840152610cdd818587610c5f565b9b9a5050505050505050505050565b600060208284031215610cfe57600080fd5b81516108a28161086f565b60208082526012908201527157726f6e672072657475726e2076616c756560701b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215610d7357600080fd5b6108a282610829565b634e487b7160e01b600052601160045260246000fd5b600060018201610da457610da4610d7c565b5060010190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a060808201819052600090610de69083018486610c5f565b98975050505050505050565b6020808252600c908201526b4e6f2030206164647265737360a01b604082015260600190565b600082821015610e2a57610e2a610d7c565b500390565b60008219821115610e4257610e42610d7c565b500190565b604081526000610e5b604083018688610c29565b8281036020840152610e6e818587610c29565b97965050505050505056fea2646970667358221220357de4597153493f11fe1cfa0d0833d39528d77b18b2e748a068935c7934782a64736f6c634300080f0033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
