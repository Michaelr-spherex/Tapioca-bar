/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  AssetRegister,
  AssetRegisterInterface,
} from "../../../contracts/bar/AssetRegister";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "AssetRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "assetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040805160808101825260038082526000602083018190529282018390526060820183905260048054600180820183559190945282519382027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018054939490939092849260ff199092169190849081111561008f5761008f6100e5565b021790555060208201518154610100600160a81b0319166101006001600160a01b039283160217825560408301516001830180546001600160a01b031916919092161790556060909101516002909101556100fb565b634e487b7160e01b600052602160045260246000fd5b6116548061010a6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063a22cb4651161007c578063a22cb465146101c1578063b061db94146101d4578063bd85b039146101e7578063cf35bdd014610207578063e985e9c51461022a578063eafe7a7414610255578063f242432a1461025d57600080fd5b8062fdd58e146100c357806301ffc9a7146101015780630e89341c146101245780632d4e1d52146101525780632eb2c2d61461018c5780634e1273f4146101a1575b600080fd5b6100ee6100d1366004610ed5565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61011461010f366004610f17565b610270565b60405190151581526020016100f8565b610145610132366004610f3b565b5060408051602081019091526000815290565b6040516100f89190610f54565b6100ee610160366004610fb6565b600360209081526000948552604080862082529385528385208152918452828420909152825290205481565b61019f61019a366004611095565b6102c2565b005b6101b46101af366004611154565b6103c1565b6040516100f891906111c0565b61019f6101cf366004611204565b6104e1565b6100ee6101e2366004610fb6565b61054b565b6100ee6101f5366004610f3b565b60026020526000908152604090205481565b61021a610215366004610f3b565b6105df565b6040516100f89493929190611258565b61011461023836600461129d565b600060208181529281526040808220909352908152205460ff1681565b6004546100ee565b61019f61026b3660046112cb565b610629565b60006001600160e01b031982166301ffc9a760e01b14806102a15750636cdb3d1360e11b6001600160e01b03198316145b806102bc57506303a24d0760e21b6001600160e01b03198316145b92915050565b8483146102ea5760405162461bcd60e51b81526004016102e190611347565b60405180910390fd5b6102f3886106f8565b61030188888888888861077b565b6001600160a01b0387163b156103b75760405163bc197c8160e01b808252906001600160a01b0389169063bc197c819061034d9033908d908c908c908c908c908c908c906004016113d8565b6020604051808303816000875af115801561036c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610390919061143c565b6001600160e01b031916146103b75760405162461bcd60e51b81526004016102e190611459565b5050505050505050565b6060838281146103e35760405162461bcd60e51b81526004016102e190611347565b8067ffffffffffffffff8111156103fc576103fc611485565b604051908082528060200260200182016040528015610425578160200160208202803683370190505b50915060005b818110156104d757600160008888848181106104495761044961149b565b905060200201602081019061045e91906114b1565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008686848181106104925761049261149b565b905060200201358152602001908152602001600020548382815181106104ba576104ba61149b565b6020908102919091010152806104cf816114e4565b91505061042b565b5050949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6000600185600381111561056157610561611242565b148061057e5750600285600381111561057c5761057c611242565b145b6105ca5760405162461bcd60e51b815260206004820152601f60248201527f41737365744d616e616765723a2063616e6e6f7420616464204e61746976650060448201526064016102e1565b6105d6858585856108d4565b95945050505050565b600481815481106105ef57600080fd5b600091825260209091206003909102018054600182015460029092015460ff821693506101009091046001600160a01b0390811692169084565b610632866106f8565b61063e86868686610dd9565b6001600160a01b0385163b156106f05760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906106869033908b908a908a908a908a906004016114fd565b6020604051808303816000875af11580156106a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c9919061143c565b6001600160e01b031916146106f05760405162461bcd60e51b81526004016102e190611459565b505050505050565b6001600160a01b03811633148061073557506001600160a01b03811660009081526020818152604080832033845290915290205460ff1615156001145b6107785760405162461bcd60e51b8152602060048201526014602482015273151c985b9cd9995c881b9bdd08185b1b1bddd95960621b60448201526064016102e1565b50565b6001600160a01b0385166107a15760405162461bcd60e51b81526004016102e190611544565b60005b838110156108705760008585838181106107c0576107c061149b565b90506020020135905060008484848181106107dd576107dd61149b565b6001600160a01b038c1660009081526001602090815260408083208884528252822080549390910294909401359450849392509061081c90849061156a565b90915550506001600160a01b038816600090815260016020908152604080832085845290915281208054839290610854908490611581565b9250508190555050508080610868906114e4565b9150506107a4565b50846001600160a01b0316866001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878787876040516108c49493929190611599565b60405180910390a4505050505050565b6000600360008660038111156108ec576108ec611242565b60038111156108fd576108fd611242565b8152602080820192909252604090810160009081206001600160a01b038089168352908452828220908716825283528181208582529092528120549150819003610dd1578115806109605750600185600381111561095d5761095d611242565b14155b6109ac5760405162461bcd60e51b815260206004820152601e60248201527f5969656c64426f783a204e6f20746f6b656e496420666f72204552433230000060448201526064016102e1565b6001600160a01b0383161580610b2d5750826001600160a01b03166330fa738c6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f91906115cb565b6003811115610a3057610a30611242565b856003811115610a4257610a42611242565b148015610ac15750826001600160a01b031663f6b4dfb46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aac91906115e8565b6001600160a01b0316846001600160a01b0316145b8015610b2d5750826001600160a01b03166317d70f7c6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190611605565b82145b610b795760405162461bcd60e51b815260206004820152601b60248201527f5969656c64426f783a205374726174656779206d69736d61746368000000000060448201526064016102e1565b6000856003811115610b8d57610b8d611242565b148015610ba157506001600160a01b038416155b80610bb557506001600160a01b0384163b15155b610bf95760405162461bcd60e51b81526020600482015260156024820152742cb4b2b6322137bc1d102737ba1030903a37b5b2b760591b60448201526064016102e1565b600480549050905060046040518060800160405280876003811115610c2057610c20611242565b81526001600160a01b0380881660208084019190915290871660408301526060909101859052825460018181018555600094855291909320825160039485029091018054939490939192849260ff1916918490811115610c8257610c82611242565b021790555060208201518154610100600160a81b0319166101006001600160a01b039283160217825560408301516001830180546001600160a01b0319169190921617905560609091015160029091015580600360008782811115610ce957610ce9611242565b6003811115610cfa57610cfa611242565b8152602080820192909252604090810160009081206001600160a01b0389811683529084528282209088168252835281812086825283528181209390935580518281529182019290925282917f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b910160405180910390a281846001600160a01b0316866003811115610d8e57610d8e611242565b604080516001600160a01b0388168152602081018690527f30605d4cd099421ed12ca1ba642a1ea2659f679b5cdd0ccd032586640eeaff43910160405180910390a45b949350505050565b6001600160a01b038316610dff5760405162461bcd60e51b81526004016102e190611544565b6001600160a01b038416600090815260016020908152604080832085845290915281208054839290610e3290849061156a565b90915550506001600160a01b038316600090815260016020908152604080832085845290915281208054839290610e6a908490611581565b909155505060408051838152602081018390526001600160a01b03808616929087169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a450505050565b6001600160a01b038116811461077857600080fd5b60008060408385031215610ee857600080fd5b8235610ef381610ec0565b946020939093013593505050565b6001600160e01b03198116811461077857600080fd5b600060208284031215610f2957600080fd5b8135610f3481610f01565b9392505050565b600060208284031215610f4d57600080fd5b5035919050565b600060208083528351808285015260005b81811015610f8157858101830151858201604001528201610f65565b81811115610f93576000604083870101525b50601f01601f1916929092016040019392505050565b6004811061077857600080fd5b60008060008060808587031215610fcc57600080fd5b8435610fd781610fa9565b93506020850135610fe781610ec0565b92506040850135610ff781610ec0565b9396929550929360600135925050565b60008083601f84011261101957600080fd5b50813567ffffffffffffffff81111561103157600080fd5b6020830191508360208260051b850101111561104c57600080fd5b9250929050565b60008083601f84011261106557600080fd5b50813567ffffffffffffffff81111561107d57600080fd5b60208301915083602082850101111561104c57600080fd5b60008060008060008060008060a0898b0312156110b157600080fd5b88356110bc81610ec0565b975060208901356110cc81610ec0565b9650604089013567ffffffffffffffff808211156110e957600080fd5b6110f58c838d01611007565b909850965060608b013591508082111561110e57600080fd5b61111a8c838d01611007565b909650945060808b013591508082111561113357600080fd5b506111408b828c01611053565b999c989b5096995094979396929594505050565b6000806000806040858703121561116a57600080fd5b843567ffffffffffffffff8082111561118257600080fd5b61118e88838901611007565b909650945060208701359150808211156111a757600080fd5b506111b487828801611007565b95989497509550505050565b6020808252825182820181905260009190848201906040850190845b818110156111f8578351835292840192918401916001016111dc565b50909695505050505050565b6000806040838503121561121757600080fd5b823561122281610ec0565b91506020830135801515811461123757600080fd5b809150509250929050565b634e487b7160e01b600052602160045260246000fd5b608081016004861061127a57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b600080604083850312156112b057600080fd5b82356112bb81610ec0565b9150602083013561123781610ec0565b60008060008060008060a087890312156112e457600080fd5b86356112ef81610ec0565b955060208701356112ff81610ec0565b94506040870135935060608701359250608087013567ffffffffffffffff81111561132957600080fd5b61133589828a01611053565b979a9699509497509295939492505050565b60208082526018908201527708aa48662626a6a744098cadccee8d040dad2e6dac2e8c6d60431b604082015260600190565b81835260006001600160fb1b0383111561139257600080fd5b8260051b8083602087013760009401602001938452509192915050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0389811682528816602082015260a060408201819052600090611405908301888a611379565b8281036060840152611418818789611379565b9050828103608084015261142d8185876113af565b9b9a5050505050505050505050565b60006020828403121561144e57600080fd5b8151610f3481610f01565b60208082526012908201527157726f6e672072657475726e2076616c756560701b604082015260600190565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b6000602082840312156114c357600080fd5b8135610f3481610ec0565b634e487b7160e01b600052601160045260246000fd5b6000600182016114f6576114f66114ce565b5060010190565b6001600160a01b03878116825286166020820152604081018590526060810184905260a06080820181905260009061153890830184866113af565b98975050505050505050565b6020808252600c908201526b4e6f2030206164647265737360a01b604082015260600190565b60008282101561157c5761157c6114ce565b500390565b60008219821115611594576115946114ce565b500190565b6040815260006115ad604083018688611379565b82810360208401526115c0818587611379565b979650505050505050565b6000602082840312156115dd57600080fd5b8151610f3481610fa9565b6000602082840312156115fa57600080fd5b8151610f3481610ec0565b60006020828403121561161757600080fd5b505191905056fea26469706673582212208c9fdcf027f28152fc3eb7052b3c279bcdd95fb10b2e8a25d16e71b30e0194a964736f6c634300080f0033";

type AssetRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetRegister__factory extends ContractFactory {
  constructor(...args: AssetRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetRegister> {
    return super.deploy(overrides || {}) as Promise<AssetRegister>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetRegister {
    return super.attach(address) as AssetRegister;
  }
  override connect(signer: Signer): AssetRegister__factory {
    return super.connect(signer) as AssetRegister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetRegisterInterface {
    return new utils.Interface(_abi) as AssetRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetRegister {
    return new Contract(address, _abi, signerOrProvider) as AssetRegister;
  }
}
