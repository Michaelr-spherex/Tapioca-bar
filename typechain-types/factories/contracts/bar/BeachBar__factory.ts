/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BeachBar,
  BeachBarInterface,
} from "../../../contracts/bar/BeachBar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract YieldBox",
        name: "_yieldBox",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tapToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeTo",
        type: "address",
      },
    ],
    name: "FeeToUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newFeeVeTap",
        type: "address",
      },
    ],
    name: "FeeVeTapUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ProtocolWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "location",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum ContractType",
        name: "risk",
        type: "uint8",
      },
    ],
    name: "RegisterMasterContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "location",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "masterContract",
        type: "address",
      },
    ],
    name: "RegisterMixologist",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "swapper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    name: "SwapperUpdate",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "mc",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "executeMixologistFn",
    outputs: [
      {
        internalType: "bool[]",
        name: "success",
        type: "bool[]",
      },
      {
        internalType: "bytes[]",
        name: "result",
        type: "bytes[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeVeTap",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterContractLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "masterContracts",
    outputs: [
      {
        internalType: "address",
        name: "location",
        type: "address",
      },
      {
        internalType: "enum ContractType",
        name: "risk",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mcAddress",
        type: "address",
      },
      {
        internalType: "enum ContractType",
        name: "contractType_",
        type: "uint8",
      },
    ],
    name: "registerMasterContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "mc",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "useCreate2",
        type: "bool",
      },
    ],
    name: "registerMixologist",
    outputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeTo_",
        type: "address",
      },
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeVeTap_",
        type: "address",
      },
    ],
    name: "setFeeVeTap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "swapper",
        type: "address",
      },
      {
        internalType: "bool",
        name: "enable",
        type: "bool",
      },
    ],
    name: "setSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper",
        name: "",
        type: "address",
      },
    ],
    name: "swappers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapAssetId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tapiocaMarkets",
    outputs: [
      {
        internalType: "address[]",
        name: "markets",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract MultiSwapper[]",
        name: "swappers_",
        type: "address[]",
      },
    ],
    name: "withdrawAllProtocolFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yieldBox",
    outputs: [
      {
        internalType: "contract YieldBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001afb38038062001afb833981016040819052620000349162000128565b600080546001600160a01b0319163390811782556040519091907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36001600160a01b03808316608081905290821660a052604051632c1876e560e21b815263b061db9490620000b4906001908590600090819060040162000167565b6020604051808303816000875af1158015620000d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fa9190620001ad565b6001600160601b031660c05250620001c79050565b6001600160a01b03811681146200012557600080fd5b50565b600080604083850312156200013c57600080fd5b825162000149816200010f565b60208401519092506200015c816200010f565b809150509250929050565b60808101600486106200018a57634e487b7160e01b600052602160045260246000fd5b9481526001600160a01b0393841660208201529190921660408201526060015290565b600060208284031215620001c057600080fd5b5051919050565b60805160a05160c0516118e16200021a600039600061018e0152600061030d0152600081816103bf015281816105ba01528181610c0e01528181610d6101528181610e0c0152610f9201526118e16000f3fe60806040526004361061011f5760003560e01c80638da5cb5b116100a0578063d164c24111610064578063d164c2411461035d578063dc2d27b71461037f578063de406577146103ad578063e30c3978146103e1578063f46901ed1461040157600080fd5b80638da5cb5b1461029b578063a76820de146102bb578063aedf4272146102db578063c7cee532146102fb578063cf7470fa1461032f57600080fd5b80633f2617cb116100e75780633f2617cb146101f15780634e71e0c8146102115780634eb51e2914610226578063515104a81461023b5780638cad7fbe1461025b57600080fd5b8063017e7e5814610124578063078dfbe71461015a5780630e7ee2271461017c5780630feb123d146101be578063226a414b146101de575b600080fd5b34801561013057600080fd5b50600454610144906001600160a01b031681565b60405161015191906111df565b60405180910390f35b34801561016657600080fd5b5061017a610175366004611220565b610421565b005b34801561018857600080fd5b506101b07f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610151565b3480156101ca57600080fd5b50600554610144906001600160a01b031681565b6101446101ec366004611265565b610539565b3480156101fd57600080fd5b5061017a61020c3660046112fa565b610687565b34801561021d57600080fd5b5061017a610714565b34801561023257600080fd5b506002546101b0565b34801561024757600080fd5b5061017a61025636600461132f565b6107d1565b34801561026757600080fd5b5061028b61027636600461136c565b60066020526000908152604090205460ff1681565b6040519015158152602001610151565b3480156102a757600080fd5b50600054610144906001600160a01b031681565b3480156102c757600080fd5b5061017a6102d63660046113db565b610992565b3480156102e757600080fd5b5061017a6102f636600461136c565b610b45565b34801561030757600080fd5b506101447f000000000000000000000000000000000000000000000000000000000000000081565b34801561033b57600080fd5b5061034f61034a36600461141c565b610bc5565b60405161015192919061144b565b34801561036957600080fd5b50610372610bfa565b60405161015191906114ca565b34801561038b57600080fd5b5061039f61039a366004611523565b610ebf565b604051610151929190611692565b3480156103b957600080fd5b506101447f000000000000000000000000000000000000000000000000000000000000000081565b3480156103ed57600080fd5b50600154610144906001600160a01b031681565b34801561040d57600080fd5b5061017a61041c36600461136c565b61116e565b6000546001600160a01b031633146104545760405162461bcd60e51b815260040161044b90611744565b60405180910390fd5b8115610517576001600160a01b03831615158061046e5750805b6104b25760405162461bcd60e51b81526020600482015260156024820152744f776e61626c653a207a65726f206164647265737360581b604482015260640161044b565b600080546040516001600160a01b03808716939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0385166001600160a01b031991821617909155600180549091169055505050565b600180546001600160a01b0385166001600160a01b0319909116179055505050565b600080546001600160a01b031633146105645760405162461bcd60e51b815260040161044b90611744565b6001600160a01b038516600090815260036020526040902054859060ff1615156001146105a35760405162461bcd60e51b815260040161044b90611779565b604051631f54245b60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631f54245b906105f59089908990899089906004016117b0565b6020604051808303816000875af1158015610614573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063891906117fa565b604080516001600160a01b038084168252891660208201529193507fd319b549895a1e94f537d0fca704a174ab4c6b5d804b0f5442a90e0817904f78910160405180910390a150949350505050565b6000546001600160a01b031633146106b15760405162461bcd60e51b815260040161044b90611744565b6001600160a01b038216600081815260066020908152604091829020805460ff19168515159081179091558251938452908301527fa893ff5e6c8549e5f4e3d6bb1d38cbf1ede3443ef5726c0477f01c296f7eaf02910160405180910390a15050565b6001546001600160a01b031633811461076f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e6572604482015260640161044b565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316179055600180549091169055565b6000546001600160a01b031633146107fb5760405162461bcd60e51b815260040161044b90611744565b6001600160a01b03821660009081526003602052604090205460ff161561085e5760405162461bcd60e51b815260206004820152601760248201527610995858da10985c8e881350c81c9959da5cdd195c9959604a1b604482015260640161044b565b604080518082019091526000602082019081526001600160a01b038416825282600281111561088f5761088f611435565b908160028111156108a2576108a2611435565b90525060028054600181018255600082905282517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b031981166001600160a01b039093169283178255602085015185949293909284926001600160a81b03191690911790600160a01b90849081111561092957610929611435565b021790555050506001600160a01b03831660009081526003602052604090819020805460ff19166001179055517f1b171ff9e281f7033f8c4d90b0d08fa61c8ad18aba517793d5b6619a21d4c04c90610985908590859061144b565b60405180910390a1505050565b6000828282816109a4576109a4611817565b90506020020160208101906109b9919061136c565b6001600160a01b031603610a085760405162461bcd60e51b815260206004820152601660248201527542656163684261723a207a65726f206164647265737360501b604482015260640161044b565b600254818114156000610a19610bfa565b805190915060005b81811015610b0357828181518110610a3b57610a3b611817565b60200260200101516001600160a01b03166350afeb8e85610a8257888884818110610a6857610a68611817565b9050602002016020810190610a7d919061136c565b610aaa565b88886000818110610a9557610a95611817565b9050602002016020810190610aaa919061136c565b6040518263ffffffff1660e01b8152600401610ac691906111df565b600060405180830381600087803b158015610ae057600080fd5b505af1158015610af4573d6000803e3d6000fd5b50505050806001019050610a21565b507fdc0aec64e01514853db7bc1f49a7321726ef185b59f680c9bc9edcf499722bc78242604051610b3592919061182d565b60405180910390a1505050505050565b6000546001600160a01b03163314610b6f5760405162461bcd60e51b815260040161044b90611744565b600580546001600160a01b0319166001600160a01b0383161790556040517fe8fb39e0250fa1bfc54b044703d7949c0630d364b2f315a8bb7b42f267faf34990610bba9083906111df565b60405180910390a150565b60028181548110610bd557600080fd5b6000918252602090912001546001600160a01b0381169150600160a01b900460ff1682565b6002546060906000805b82811015610cd1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663fba96be860028381548110610c4e57610c4e611817565b6000918252602090912001546040516001600160e01b031960e084901b168152610c84916001600160a01b0316906004016111df565b602060405180830381865afa158015610ca1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cc5919061184f565b90910190600101610c04565b50806001600160401b03811115610cea57610cea6114dd565b604051908082528060200260200182016040528015610d13578160200160208202803683370190505b50925060008060005b84811015610eb757600060028281548110610d3957610d39611817565b600091825260209091200154604051631f752d7d60e31b81526001600160a01b0391821692507f00000000000000000000000000000000000000000000000000000000000000009091169063fba96be890610d989084906004016111df565b602060405180830381865afa158015610db5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dd9919061184f565b925060005b83811015610ead576040516323f50d9560e21b81526001600160a01b038381166004830152602482018390527f00000000000000000000000000000000000000000000000000000000000000001690638fd4365490604401602060405180830381865afa158015610e53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e7791906117fa565b888681518110610e8957610e89611817565b6001600160a01b039092166020928302919091019091015260019485019401610dde565b5050600101610d1c565b505050505090565b60005460609081906001600160a01b03163314610eee5760405162461bcd60e51b815260040161044b90611744565b83806001600160401b03811115610f0757610f076114dd565b604051908082528060200260200182016040528015610f30578160200160208202803683370190505b509250806001600160401b03811115610f4b57610f4b6114dd565b604051908082528060200260200182016040528015610f7e57816020015b6060815260200190600190039081610f695790505b50915060005b8181101561116457600360007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bafe4f148a8a86818110610fd157610fd1611817565b9050602002016020810190610fe6919061136c565b6040518263ffffffff1660e01b815260040161100291906111df565b602060405180830381865afa15801561101f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104391906117fa565b6001600160a01b0316815260208101919091526040016000205460ff1661107c5760405162461bcd60e51b815260040161044b90611779565b86868281811061108e5761108e611817565b90506020020160208101906110a3919061136c565b6001600160a01b03168582815181106110be576110be611817565b60200260200101516040516110d39190611868565b6000604051808303816000865af19150503d8060008114611110576040519150601f19603f3d011682016040523d82523d6000602084013e611115565b606091505b5085838151811061112857611128611817565b6020026020010185848151811061114157611141611817565b6020908102919091010191909152901515905261115d81611884565b9050610f84565b5050935093915050565b6000546001600160a01b031633146111985760405162461bcd60e51b815260040161044b90611744565b600480546001600160a01b0319166001600160a01b0383161790556040517f68953050a837881c7c6f52c422b0f82e1fd474e6931654ea29f569d19fcc42c290610bba9083905b6001600160a01b0391909116815260200190565b6001600160a01b038116811461120857600080fd5b50565b8035801515811461121b57600080fd5b919050565b60008060006060848603121561123557600080fd5b8335611240816111f3565b925061124e6020850161120b565b915061125c6040850161120b565b90509250925092565b6000806000806060858703121561127b57600080fd5b8435611286816111f3565b935060208501356001600160401b03808211156112a257600080fd5b818701915087601f8301126112b657600080fd5b8135818111156112c557600080fd5b8860208285010111156112d757600080fd5b6020830195508094505050506112ef6040860161120b565b905092959194509250565b6000806040838503121561130d57600080fd5b8235611318816111f3565b91506113266020840161120b565b90509250929050565b6000806040838503121561134257600080fd5b823561134d816111f3565b915060208301356003811061136157600080fd5b809150509250929050565b60006020828403121561137e57600080fd5b8135611389816111f3565b9392505050565b60008083601f8401126113a257600080fd5b5081356001600160401b038111156113b957600080fd5b6020830191508360208260051b85010111156113d457600080fd5b9250929050565b600080602083850312156113ee57600080fd5b82356001600160401b0381111561140457600080fd5b61141085828601611390565b90969095509350505050565b60006020828403121561142e57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0383168152604081016003831061147957634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b600081518084526020808501945080840160005b838110156114bf5781516001600160a01b03168752958201959082019060010161149a565b509495945050505050565b6020815260006113896020830184611486565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171561151b5761151b6114dd565b604052919050565b6000806000604080858703121561153957600080fd5b84356001600160401b038082111561155057600080fd5b61155c88838901611390565b909650945060209150868201358181111561157657600080fd5b8701601f8101891361158757600080fd5b803582811115611599576115996114dd565b8060051b6115a88582016114f3565b918252828101850191858101908c8411156115c257600080fd5b86850192505b83831015611650578235868111156115e05760008081fd5b8501603f81018e136115f25760008081fd5b8781013587811115611606576116066114dd565b611618601f8201601f19168a016114f3565b8181528f8b83850101111561162d5760008081fd5b818b84018b83013760009181018a019190915283525091860191908601906115c8565b80985050505050505050509250925092565b60005b8381101561167d578181015183820152602001611665565b8381111561168c576000848401525b50505050565b604080825283519082018190526000906020906060840190828701845b828110156116cd5781511515845292840192908401906001016116af565b50505083810382850152845180825282820190600581901b8301840187850160005b8381101561173557601f198087850301865282518051808652611717818b88018c8501611662565b96890196601f019091169390930187019250908601906001016116ef565b50909998505050505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f42656163684261723a204d43206e6f7420726567697374657265640000000000604082015260600190565b6001600160a01b038516815260606020820181905281018390528284608083013760008184016080908101919091529115156040820152601f909201601f19169091010192915050565b60006020828403121561180c57600080fd5b8151611389816111f3565b634e487b7160e01b600052603260045260246000fd5b6040815260006118406040830185611486565b90508260208301529392505050565b60006020828403121561186157600080fd5b5051919050565b6000825161187a818460208701611662565b9190910192915050565b6000600182016118a457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220b75d2e0142823d4379460ad807ee0a64618fb16c2cb0f97d93f0639b947125e364736f6c634300080f0033";

type BeachBarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BeachBarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BeachBar__factory extends ContractFactory {
  constructor(...args: BeachBarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _yieldBox: PromiseOrValue<string>,
    tapToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BeachBar> {
    return super.deploy(
      _yieldBox,
      tapToken_,
      overrides || {}
    ) as Promise<BeachBar>;
  }
  override getDeployTransaction(
    _yieldBox: PromiseOrValue<string>,
    tapToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_yieldBox, tapToken_, overrides || {});
  }
  override attach(address: string): BeachBar {
    return super.attach(address) as BeachBar;
  }
  override connect(signer: Signer): BeachBar__factory {
    return super.connect(signer) as BeachBar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeachBarInterface {
    return new utils.Interface(_abi) as BeachBarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BeachBar {
    return new Contract(address, _abi, signerOrProvider) as BeachBar;
  }
}
