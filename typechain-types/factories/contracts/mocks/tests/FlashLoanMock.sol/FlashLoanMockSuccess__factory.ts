/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  FlashLoanMockSuccess,
  FlashLoanMockSuccessInterface,
} from "../../../../../contracts/mocks/tests/FlashLoanMock.sol/FlashLoanMockSuccess";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506103e8806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e36600461025f565b610045565b005b60003390506000816001600160a01b031663de4065776040518163ffffffff1660e01b8152600401602060405180830381865afa15801561008a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ae9190610309565b90506001600160a01b03871663095ea7b3826100ca888a61032d565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101399190610353565b50806001600160a01b0316639a9af97a836001600160a01b03166344de240a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab9190610375565b30336101b78a8c61032d565b6040516001600160e01b031960e087901b16815260048101949094526001600160a01b0392831660248501529116604483015260648201526000608482015260a40160408051808303816000875af1158015610217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023b919061038e565b50505050505050505050565b6001600160a01b038116811461025c57600080fd5b50565b60008060008060008060a0878903121561027857600080fd5b863561028381610247565b9550602087013561029381610247565b94506040870135935060608701359250608087013567ffffffffffffffff808211156102be57600080fd5b818901915089601f8301126102d257600080fd5b8135818111156102e157600080fd5b8a60208285010111156102f357600080fd5b6020830194508093505050509295509295509295565b60006020828403121561031b57600080fd5b815161032681610247565b9392505050565b6000821982111561034e57634e487b7160e01b600052601160045260246000fd5b500190565b60006020828403121561036557600080fd5b8151801515811461032657600080fd5b60006020828403121561038757600080fd5b5051919050565b600080604083850312156103a157600080fd5b50508051602090910151909290915056fea26469706673582212203408550cc11d57a5468f932ffd871e461e48ddbcaa33b5186b0f32185ef914c664736f6c634300080f0033";

type FlashLoanMockSuccessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashLoanMockSuccessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashLoanMockSuccess__factory extends ContractFactory {
  constructor(...args: FlashLoanMockSuccessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashLoanMockSuccess> {
    return super.deploy(overrides || {}) as Promise<FlashLoanMockSuccess>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FlashLoanMockSuccess {
    return super.attach(address) as FlashLoanMockSuccess;
  }
  override connect(signer: Signer): FlashLoanMockSuccess__factory {
    return super.connect(signer) as FlashLoanMockSuccess__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashLoanMockSuccessInterface {
    return new utils.Interface(_abi) as FlashLoanMockSuccessInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashLoanMockSuccess {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FlashLoanMockSuccess;
  }
}
