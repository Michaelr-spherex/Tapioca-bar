/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  BoringBatchable,
  BoringBatchableInterface,
} from "../../../../../@boringcrypto/boring-solidity/contracts/BoringBatchable.sol/BoringBatchable";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "calls",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "revertOnFail",
        type: "bool",
      },
    ],
    name: "batch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610555806100206000396000f3fe6080604052600436106100295760003560e01c80637c516e941461002e578063d2423b5114610050575b600080fd5b34801561003a57600080fd5b5061004e61004936600461024e565b610063565b005b61004e61005e3660046102d7565b6100f5565b60405163d505accf60e01b81526001600160a01b0388811660048301528781166024830152604482018790526064820186905260ff8516608483015260a4820184905260c4820183905289169063d505accf9060e401600060405180830381600087803b1580156100d357600080fd5b505af11580156100e7573d6000803e3d6000fd5b505050505050505050505050565b60005b828110156101cb576000803086868581811061011657610116610362565b90506020028101906101289190610378565b6040516101369291906103c6565b600060405180830381855af49150503d8060008114610171576040519150601f19603f3d011682016040523d82523d6000602084013e610176565b606091505b5091509150811580156101865750835b156101b657610194816101d1565b60405162461bcd60e51b81526004016101ad9190610402565b60405180910390fd5b505080806101c390610435565b9150506100f8565b50505050565b606060448251101561021657505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b600482019150818060200190518101906102309190610472565b92915050565b6001600160a01b038116811461024b57600080fd5b50565b600080600080600080600080610100898b03121561026b57600080fd5b883561027681610236565b9750602089013561028681610236565b9650604089013561029681610236565b9550606089013594506080890135935060a089013560ff811681146102ba57600080fd5b979a969950949793969295929450505060c08201359160e0013590565b6000806000604084860312156102ec57600080fd5b833567ffffffffffffffff8082111561030457600080fd5b818601915086601f83011261031857600080fd5b81358181111561032757600080fd5b8760208260051b850101111561033c57600080fd5b60209283019550935050840135801515811461035757600080fd5b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261038f57600080fd5b83018035915067ffffffffffffffff8211156103aa57600080fd5b6020019150368190038213156103bf57600080fd5b9250929050565b8183823760009101908152919050565b60005b838110156103f15781810151838201526020016103d9565b838111156101cb5750506000910152565b60208152600082518060208401526104218160408501602087016103d6565b601f01601f19169190910160400192915050565b60006001820161045557634e487b7160e01b600052601160045260246000fd5b5060010190565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561048457600080fd5b815167ffffffffffffffff8082111561049c57600080fd5b818401915084601f8301126104b057600080fd5b8151818111156104c2576104c261045c565b604051601f8201601f19908116603f011681019083821181831017156104ea576104ea61045c565b8160405282815287602084870101111561050357600080fd5b6105148360208301602088016103d6565b97965050505050505056fea26469706673582212206161cc5b2dda6859d0efa323cb924468d9e3b0a2a305efc8753937d4021c2a6664736f6c634300080f0033";

type BoringBatchableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoringBatchableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoringBatchable__factory extends ContractFactory {
  constructor(...args: BoringBatchableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BoringBatchable> {
    return super.deploy(overrides || {}) as Promise<BoringBatchable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BoringBatchable {
    return super.attach(address) as BoringBatchable;
  }
  override connect(signer: Signer): BoringBatchable__factory {
    return super.connect(signer) as BoringBatchable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoringBatchableInterface {
    return new utils.Interface(_abi) as BoringBatchableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoringBatchable {
    return new Contract(address, _abi, signerOrProvider) as BoringBatchable;
  }
}
