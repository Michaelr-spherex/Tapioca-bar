/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MarketsHelper,
  MarketsHelperInterface,
} from "../../contracts/MarketsHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract IBigBang[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "bigBangMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MarketsHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "debtRate",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
            ],
            internalType: "struct IBigBang.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MarketsHelper.BigBangInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_withdrawData",
        type: "bytes",
      },
    ],
    name: "depositAddCollateralAndBorrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "depositAndAddAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "depositAndRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_depositAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
    ],
    name: "depositRepayAndRemoveCollateral",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fraction",
        type: "uint256",
      },
    ],
    name: "getAmountForAssetFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
    ],
    name: "getAmountForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "share",
        type: "uint256",
      },
    ],
    name: "getCollateralAmountForShare",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMarket",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "borrowPart",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidationMultiplierPrecision",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "exchangeRatePrecision",
        type: "uint256",
      },
    ],
    name: "getCollateralSharesForBorrowPart",
    outputs: [
      {
        internalType: "uint256",
        name: "collateralShares",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_collateralAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_borrowAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "deposit_",
        type: "bool",
      },
    ],
    name: "mintAndLend",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "contract IMarket",
        name: "bingBang",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_removeShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_repayAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_collateralShare",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdraw_",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "withdrawData_",
        type: "bytes",
      },
    ],
    name: "removeAssetAndRepay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "contract ISingularity[]",
        name: "markets",
        type: "address[]",
      },
    ],
    name: "singularityMarketInfo",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "collateral",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "collateralId",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "asset",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "assetId",
                type: "uint256",
              },
              {
                internalType: "contract IOracle",
                name: "oracle",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "oracleData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "totalCollateralShare",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "userCollateralShare",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "uint128",
                    name: "elastic",
                    type: "uint128",
                  },
                  {
                    internalType: "uint128",
                    name: "base",
                    type: "uint128",
                  },
                ],
                internalType: "struct Rebase",
                name: "totalBorrow",
                type: "tuple",
              },
              {
                internalType: "uint256",
                name: "userBorrowPart",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "currentExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "spotExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "oracleExchangeRate",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "totalBorrowCap",
                type: "uint256",
              },
            ],
            internalType: "struct MarketsHelper.MarketInfo",
            name: "market",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint128",
                name: "elastic",
                type: "uint128",
              },
              {
                internalType: "uint128",
                name: "base",
                type: "uint128",
              },
            ],
            internalType: "struct Rebase",
            name: "totalAsset",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "userAssetFraction",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint64",
                name: "interestPerSecond",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "lastAccrued",
                type: "uint64",
              },
              {
                internalType: "uint128",
                name: "feesEarnedFraction",
                type: "uint128",
              },
            ],
            internalType: "struct ISingularity.AccrueInfo",
            name: "accrueInfo",
            type: "tuple",
          },
        ],
        internalType: "struct MarketsHelper.SingularityInfo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100165761373c908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c9081630f20088d14611cdf5750806314ecf5a814611b5d57806326dd79a61461175d578063443c73a7146114ce5780634b96e5711461101d5780636dd55c0b14610d9f578063700ea12414610b19578063a306dfd514610a57578063b75a5a59146106e4578063e4e802e814610242578063e552cb411461020c5763ea881c18146100a557600080fd5b34610209576040366003190112610209576001600160a01b0390816100c86120d2565b16916040519263de40657760e01b84526020938481600481855afa9081156101ce57859085926101d9575b5060049192604051928380926377607a1760e11b82525afa9081156101ce5790859291859161019d575b50606490604051948593849263442c159960e01b845260048401526024356024840152876044840152165afa918215610191579161015f575b50604051908152f35b90508181813d831161018a575b61017681836121b2565b81010312610185575138610156565b600080fd5b503d61016c565b604051903d90823e3d90fd5b83819492503d83116101c7575b6101b481836121b2565b810103126101855760648592519061011d565b503d6101aa565b6040513d86823e3d90fd5b600492506101fc90823d8411610202575b6101f481836121b2565b81019061244a565b916100f3565b503d6101ea565b80fd5b50346102095760803660031901126102095761023f6102296120d2565b6102316120fe565b906044359060243590612550565b80f35b50346102095760403660031901126102095761025c6120d2565b6024359067ffffffffffffffff82116106e057366023830112156106e0578160040135610288816121d4565b9261029660405194856121b2565b8184526024602085019260051b820101903682116106dc57602401915b8183106106bc575050508151906102c9826121d4565b926102d760405194856121b2565b828452601f196102e6846121d4565b01855b818110610641575050600060206040516103028161217a565b828152015261030f61238f565b50845b8381106103f75784866040519182916020830160208452825180915260408401602060408360051b870101940192905b82821061035157505050500390f35b919360019193955060208091603f1989820301855287519060c06001600160801b036040610388855160e0865260e0860190612234565b946103af8782015188870190602090816001600160801b0391828151168552015116910152565b818101519060609182870152015167ffffffffffffffff815116608086015267ffffffffffffffff878201511660a08601520151169101529601920192018594939192610342565b6001600160a01b0361040982846123d3565b51169061041682856128cb565b61042082886123d3565b515260405163f9557ccb60e01b8152604081600481865afa80156105fc5788918991610607575b506001600160801b0390816040519361045f8561217a565b168352166020820152602061047483896123d3565b5101526040517f70a082310000000000000000000000000000000000000000000000000000000081526001600160a01b0385166004820152602081602481865afa9081156105fc5788916105c9575b5060049260609160406104d6858b6123d3565b51015260405193848092632c9f039d60e21b82525afa9182156105be5787908890899461054b575b506105469367ffffffffffffffff6001600160801b0392816040519561052387612196565b168552166020840152166040820152606061053e83896123d3565b5101526123ae565b610312565b935050506060823d6060116105b6575b81610568606093836121b2565b810103126105b257816001600160801b0361058561054694612435565b67ffffffffffffffff6105a6604061059f60208701612435565b95016123fd565b919391955050906104fe565b8680fd5b3d915061055b565b6040513d89823e3d90fd5b90506020813d6020116105f4575b816105e4602093836121b2565b81010312610185575160046104c3565b3d91506105d7565b6040513d8a823e3d90fd5b6001600160801b039250610633915060403d60401161063a575b61062b81836121b2565b810190612411565b9091610447565b503d610621565b60405190608082019180831067ffffffffffffffff8411176106a65760209260405261066b612300565b81526040516106798161217a565b600081526000848201528382015288604082015261069561238f565b6060820152828289010152016102e9565b634e487b7160e01b600052604160045260246000fd5b82356001600160a01b0381168103610185578152602092830192016102b3565b8580fd5b8280fd5b5034610209576060366003190112610209576106fe6120d2565b6024356044359182151583036101855783916001600160a01b038092166040519463226f120560e11b86526020958681600481865afa90811561098b578691610a26575b5060405163de40657760e01b81528781600481875afa80156105be5786918891610a09575b501694604051630cf35bdd60e41b81528260048201526080816024818a5afa9081156105fc5788916109d7575b5060405195638eb22cdd60e01b875283600488015280602488015288604488015289876064818b5afa9485156109cc578a978a96610996575b50610861575b505050506107e561081c939483613468565b604051630cb0f5b760e31b815230600482015233602482015260006044820152606481019190915293849283919082906084820190565b03925af180156108565761082e578280f35b813d831161084f575b61084181836121b2565b810103126101855738808280f35b503d610837565b6040513d85823e3d90fd5b90816108746108a8938399959699613606565b8960405195868095819463095ea7b360e01b83528d60048401602090939291936001600160a01b0360408201951681520152565b0393165af1801561098b5761094d575b5060408051634d4d7cbd60e11b81526004810194909452306024850181905260448501526000606485015260848401829052838060a481015b038188885af1801561094257869461081c946107e592610914575b8196956107d3565b6109359060403d60401161093b575b61092d81836121b2565b81019061253a565b5061090c565b503d610923565b6040513d87823e3d90fd5b928684813d8311610984575b61096381836121b2565b810103126106dc578160409161097b6108f19661252d565b509450506108b8565b503d610959565b6040513d88823e3d90fd5b9780929a50889196503d83116109c5575b6109b181836121b2565b8101031261018557899789965194386107cd565b503d6109a7565b6040513d8b823e3d90fd5b6109f8915060803d8111610a02575b6109f081836121b2565b8101906124ea565b5050905038610794565b503d6109e6565b610a209150893d8b11610202576101f481836121b2565b38610767565b809650878092503d8311610a50575b610a3f81836121b2565b810103126101855786945138610742565b503d610a35565b5034610209576040366003190112610209576001600160a01b036040610a7b6120d2565b600060208351610a8a8161217a565b8281520152600482518094819363020a17bd60e61b8352165afa908115610b0e579082610ae4926020949192610aec575b5060405191610ac98361217a565b6001600160801b03809216835216838201526024359061249c565b604051908152f35b9050610b07915060403d60401161063a5761062b81836121b2565b9038610abb565b6040513d84823e3d90fd5b50346102095760c036600319011261020957610b336120d2565b606435610b3e61210d565b610b4661211c565b906001600160a01b0391828516916040519063de40657760e01b82526020948583600481885afa80156109cc57610b8e938a91610d82575b5016966044359060243590612550565b8015610d7b5730905b866040516377607a1760e11b938482528682600481895afa918215610856578392610d49575b5060405191638eb22cdd60e01b8352600483015287602483015282604483015286826064818c5afa918215610856578392610d17575b50853b156106e05760405163cce19f8160e01b81523360048201526001600160a01b039190911660248201526044810191909152818160648183895af18015610b0e57610d03575b5050610c45578580f35b829060046040518094819382525afa918215610942578592610cd2575b5050604080516311a5cc7760e31b8152600481019290925230602483015233604483015260648201929092526000608482015291829060a490829086905af18015610b0e57610cb4575b808080808580f35b610ccc9060403d60401161093b5761092d81836121b2565b50610cac565b9080939250813d8311610cfc575b610cea81836121b2565b81010312610185579051826040610c62565b503d610ce0565b610d0c90612166565b6105b2578638610c3b565b925090508582813d8111610d42575b610d3081836121b2565b81010312610185578891519038610bf3565b503d610d26565b925090508582813d8111610d74575b610d6281836121b2565b81010312610185578891519038610bbd565b503d610d58565b3390610b97565b610d999150873d8911610202576101f481836121b2565b38610b7e565b503461020957604036600319011261020957610db96120d2565b60243567ffffffffffffffff92838211610209573660238301121561020957816004013592610de7846121d4565b92610df560405194856121b2565b84845260209460248686019160051b8301019136831161101957602401905b828210610ffa57505050825190610e2a826121d4565b93610e3860405195866121b2565b828552601f19610e47846121d4565b0186855b828110610fbc575060009150604051610e638161217a565b8281520152835b838110610ef4575050505060405192808401908085528351809252604085018160408460051b880101950193965b838810610ea55786860387f35b90919293948380600192603f198a82030186528851906040868480610ed286516060808852870190612234565b9501518281511682860152015116910152970193019701969093929193610e98565b8060406001600160a01b03610f0b600494866123d3565b5116610f1781876128cb565b610f21848b6123d3565b5152815193848092632c9f039d60e21b82525afa801561098b578987918890610f70575b610f6b94508160405193610f588561217a565b16835216898201528861053e838a6123d3565b610e6a565b505050906040813d604011610fb4575b81610f8d604093836121b2565b810103126106dc57908189610faf8a610fa8610f6b96612435565b9301612435565b610f45565b3d9150610f80565b604051610fc88161217a565b610fd0612300565b8152604051610fde8161217a565b600081526000848201528382015282828a010152018790610e4b565b81356001600160a01b03811681036106dc578152908601908601610e14565b8480fd5b50346102095760a0366003190112610209576110376120d2565b816110406120e8565b9161104961210d565b6040516377607a1760e11b81526001600160a01b0391828616906020968784600481865afa9384156105be57879461149c575b50846040519663de40657760e01b885216948887600481895afa9687156105fc57889761147d575b508060405197630cf35bdd60e41b89528660048a01521694608088602481895afa9788156109cc578998611459575b50604051638eb22cdd60e01b98898252826004830152604435938460248401528b60448401528c836064818c5afa96871561144e578d938d9861140f575b508995949392918d916112f4575b505050505061128b575b5050604080516314890dcb60e21b815233600482018190526024820152606480356044830181905294919350839182908a905af1801561098b5761126d575b5060405163226f120560e11b81528681600481875afa90811561098b57869161123c575b50604051948552600485015260248401528360448401528483606481845afa9081156101ce5785938592611203575b50906111cb839261081c94613468565b604051630cb0f5b760e31b81523360048201819052602482015260006044820152606481019190915293849283919082906084820190565b92945092905081813d8311611235575b61121d81836121b2565b810103126101855751849284929091906111cb6111bb565b503d611213565b809650878092503d8311611266575b61125581836121b2565b81010312610185578694513861118c565b503d61124b565b6112859060403d60401161093b5761092d81836121b2565b50611168565b61129491613468565b813b156106dc5760405163096f9e0960e21b8152306004820152336024820152600060448201526064810191909152858160848183865af190811561098b5786916112e0575b83611129565b6112e990612166565b6110195784386112da565b95829161133897611306888096613606565b60405180998196829563095ea7b360e01b845260048401602090939291936001600160a01b0360408201951681520152565b0393165af19283156114045785936113c1575b5060408051634d4d7cbd60e11b815260048101929092523060248301819052604483015260006064830152608482019390935291828060a481015b03818c8a5af19182156109cc5786926113a3575b8a818b8161111f565b6113bb9060403d60401161093b5761092d81836121b2565b5061139a565b92508a83813d83116113fd575b6113d881836121b2565b810103126113f957846040916113f06113869561252d565b5091509261134b565b8980fd5b503d6113ce565b6040513d8c823e3d90fd5b929c5096509093929184813d8111611447575b61142c81836121b2565b810103126101855792518c9a9095929391928c929089611111565b503d611422565b6040513d8e823e3d90fd5b61147291985060803d8111610a02576109f081836121b2565b5050905096386110d3565b611495919750893d8b11610202576101f481836121b2565b95386110a4565b965092508686813d81116114c7575b6114b581836121b2565b8101031261018557879551923861107c565b503d6114ab565b5034610209576080366003190112610209576114e86120d2565b90604051916114f68361217a565b6000835260006020809401526001600160a01b03809116906040519163020a17bd60e61b8352604083600481845afa9283156101ce5784908594611739575b50604051936115438561217a565b6001600160801b03809216855216858401526040519263de40657760e01b84528584600481855afa938415610942578594611716575b50611587906024359061249c565b604051916377607a1760e11b83528683600481845afa92831561098b5786936116e7575b50604051917f529898f20000000000000000000000000000000000000000000000000000000083528783600481855afa9283156105be5790889188946116b4575b506004936115f991612469565b9160405193848092633ba0b9a960e01b82525afa91821561098b579087949392918792611680575b506116326064939261164592612469565b61163f8435604435612469565b9061247c565b926040519586948593638eb22cdd60e01b855260048501526024840152876044840152165afa918215610191579161015f5750604051908152f35b809392508591953d83116116ad575b61169981836121b2565b810103126101855790518693611632611621565b503d61168f565b93509083813d81116116e0575b6116cb81836121b2565b810103126101855791519187906115f96115ec565b503d6116c1565b9092508681813d831161170f575b6116ff81836121b2565b81010312610185575191386115ab565b503d6116f5565b61158791945061173290873d8911610202576101f481836121b2565b9390611579565b905061175591935060403d60401161063a5761062b81836121b2565b929038611535565b50346102095760e0366003190112610209576117776120d2565b61177f6120e8565b608435906044358461178f61211c565b60c43567ffffffffffffffff81116106e0576117af903690600401612138565b9290966001600160a01b03809116946040519163de40657760e01b835260209283816004818b5afa80156109425782918691611b40575b50169716916040519163226f120560e11b83528183600481875afa928315610942578593611b0e575b506040519063442c159960e01b825283600483015280602483015285604483015282826064818d5afa91821561098b578692611adc575b506040517ff4d9375300000000000000000000000000000000000000000000000000000000815233600482015230602482015260448101919091528281606481898d5af1801561098b57611aae575b5060405163cd0211eb60e01b8152306004820152336024820152600060448201526064803590820152828160848189895af190811561098b578691611a7d575b5081811061196f575b50505050826000146119685730905b803b156106e05760405163cce19f8160e01b81523360048201526001600160a01b039290921660248301526044820188905282908290606490829084905af18015610b0e57611954575b5050611941578580f35b61194b943061325c565b38808080808580f35b61195d90612166565b6105b2578638611937565b33906118ed565b9080929394955003908111611a6957908a93929160405190638eb22cdd60e01b8252836004830152602482015284604482015281816064818c5afa918215610942578592611a38575b5050873b15611a3457604051917f0411b252000000000000000000000000000000000000000000000000000000008352306004840152336024840152604483015260648201528281608481838b5af1908115610856578391611a1c575b80806118de565b611a2590612166565b611a30578138611a15565b5080fd5b8380fd5b8195508092503d8311611a62575b611a5081836121b2565b810103126101855789925138806119b8565b503d611a46565b60248b634e487b7160e01b81526011600452fd5b809650838092503d8311611aa7575b611a9681836121b2565b81010312610185578b9451386118d5565b503d611a8c565b82809296503d8311611ad5575b611ac581836121b2565b81010312610185578a9338611895565b503d611abb565b955090508185813d8111611b07575b611af581836121b2565b810103126101855793518b9482611846565b503d611aeb565b945091508084813d8111611b39575b611b2781836121b2565b81010312610185578a9351913861180f565b503d611b1d565b611b579150853d8711610202576101f481836121b2565b386117e6565b5034610209576040366003190112610209576001600160a01b039081611b816120d2565b166040519263f9557ccb60e01b8452604084600481855afa9081156108565783948492611cbb575b506040519163de40657760e01b83526020958684600481885afa93841561098b5787908795611c99575b5060049394956040519485809263226f120560e11b82525afa92831561098b579087949392918793611c62575b5060649291611c2791611c1f6001600160801b03809216602435612469565b91169061247c565b92604051958694859363442c159960e01b855260048501526024840152876044840152165afa918215610191579161015f5750604051908152f35b858196929394503d8311611c92575b611c7b81836121b2565b810103126101855792518693909190611c27611c00565b503d611c71565b6004949550611cb490823d8411610202576101f481836121b2565b9493611bd3565b909450611cd7915060403d60401161063a5761062b81836121b2565b909338611ba9565b905060c0366003190112611a3057611cf56120d2565b90611cfe6120fe565b90611d0761210d565b9260a43567ffffffffffffffff81116106dc57611d28903690600401612138565b906001600160a01b038084169563de40657760e01b865260209586816004818b5afa80156114045783918b916120b5575b5016956040516377607a1760e11b815281816004818c5afa9081156120aa578b9161207d575b5060405193630cf35bdd60e41b85528160048601526080856024818c5afa94851561144e578c95612059575b5060648c848b60405193848092638eb22cdd60e01b825288600483015260243560248301528560448301525afa96871561204c578b928298612017575b5086611f03575b5050915050611dff915086613468565b15611efb578730915b873b15611a305760405163096f9e0960e21b81526001600160a01b0393909316600484015233602484015260006044840152606483015281608481838a5af180156105fc57611ee8575b508515611edf57309586955b604080516314890dcb60e21b81523360048201526001600160a01b03989098166024890152604480359089018190529791829060649082908d905af180156109cc57611ec1575b50611eae578680f35b611eb79561302f565b3880808080808680f35b611ed99060403d60401161093b5761092d81836121b2565b50611ea5565b33958695611e5e565b611ef490979197612166565b9538611e52565b873391611e08565b8592611f4b92611f1560243584613606565b60405195868095819463095ea7b360e01b83526024359060048401602090939291936001600160a01b0360408201951681520152565b0393165af192831561144e578593611fd3575b505060408051634d4d7cbd60e11b815260048101929092523060248301819052604483015260006064830152608482019290925290818060a481015b03818d8b5af1801561140457611fb5575b8080888c82611def565b611fcd9060403d60401161093b5761092d81836121b2565b50611fab565b90809350813d8311612010575b611fea81836121b2565b8101031261200c5783604091612002611f9a9461252d565b5091819350611f5e565b8a80fd5b503d611fe0565b8680929899508194503d8311612045575b61203281836121b2565b810103126102095786958b925197611de8565b503d612028565b50604051903d90823e3d90fd5b61207291955060803d8111610a02576109f081836121b2565b505090509338611dab565b90508181813d83116120a3575b61209481836121b2565b8101031261200c575138611d7f565b503d61208a565b6040513d8d823e3d90fd5b6120cc9150883d8a11610202576101f481836121b2565b38611d59565b600435906001600160a01b038216820361018557565b602435906001600160a01b038216820361018557565b60643590811515820361018557565b60843590811515820361018557565b60a43590811515820361018557565b3590811515820361018557565b9181601f840112156101855782359167ffffffffffffffff8311610185576020838186019501011161018557565b67ffffffffffffffff81116106a657604052565b6040810190811067ffffffffffffffff8211176106a657604052565b6060810190811067ffffffffffffffff8211176106a657604052565b90601f8019910116810190811067ffffffffffffffff8211176106a657604052565b67ffffffffffffffff81116106a65760051b60200190565b60005b8381106121ff5750506000910152565b81810151838201526020016121ef565b90602091612228815180928185528580860191016121ec565b601f01601f1916010190565b906001600160a01b03808351168252602083015160208301528060408401511660408301526060830151606083015260808301511660808201526101c061228a60a08401516101e08060a086015284019061220f565b9260c081015160c084015260e081015160e08401526122c86101008083015190850190602090816001600160801b0391828151168552015116910152565b610120810151610140908185015281015161016090818501528101516101809081850152810151906101a09182850152015191015290565b604051906101c0820182811067ffffffffffffffff8211176106a657604052816101a0600091828152826020820152826040820152826060820152826080820152606060a08201528260c08201528260e08201526040516123608161217a565b838152836020820152610100820152826101208201528261014082015282610160820152826101808201520152565b6040519061239c82612196565b60006040838281528260208201520152565b60001981146123bd5760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156123e75760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b51906001600160801b038216820361018557565b919082604091031261018557612432602061242b846123fd565b93016123fd565b90565b519067ffffffffffffffff8216820361018557565b9081602091031261018557516001600160a01b03811681036101855790565b818102929181159184041417156123bd57565b8115612486570490565b634e487b7160e01b600052601260045260246000fd5b60208101906001600160801b039081835116156000146124bc5750505090565b61243293826124cd92511690612469565b9151169061247c565b51906001600160a01b038216820361018557565b91908260809103126101855781516005811015610185579161250e602082016124d6565b9160408201516001600160a01b03811681036101855760609092015190565b5190811515820361018557565b9190826040910312610185576020825192015190565b919093926001600160a01b039182841660409283519563226f120560e11b875260209660049988828c81885afa91821561284557600092612816575b50865163de40657760e01b815289818d81895afa908115612779578c95949392918a916000916127f9575b5016988289519d8e630cf35bdd60e41b8152015260808d6024818d5afa9081156127ee57858c9d9e60009d9b9c9d936127ca575b50612696575b5050505061264c9761260291613468565b1561268e576000305b86519788958694859363cd0211eb60e01b8552339185016060919493929460808201956001600160a01b038092168352166020820152600060408201520152565b03925af19081156126845750612660575050565b813d831161267d575b61267381836121b2565b8101031261018557565b503d612669565b513d6000823e3d90fd5b60003361260b565b91818c60006126e5958e9f9a809d9f86999a9b9d9f97876126b691613606565b519788968795869363095ea7b360e01b85528401602090939291936001600160a01b0360408201951681520152565b0393165af180156127bf57908a9291612784575b508151634d4d7cbd60e11b815287810193845230602085018190526040850152606084019190915260006080840152918290819060a0015b03816000875af180156127795792899694926126029261264c9a99979561275d575b829a8294506125f1565b612773908a3d8c1161093b5761092d81836121b2565b50612753565b88513d6000823e3d90fd5b91508a82813d83116127b8575b61279b81836121b2565b8101031261018557612731926127b18b9361252d565b50926126f9565b503d612791565b8a513d6000823e3d90fd5b6127e391935060803d8111610a02576109f081836121b2565b5050905091386125eb565b89513d6000823e3d90fd5b61281091508c8d3d10610202576101f481836121b2565b386125b7565b90918982813d831161283e575b61282d81836121b2565b81010312610209575051903861258c565b503d612823565b87513d6000823e3d90fd5b67ffffffffffffffff81116106a657601f01601f191660200190565b6020818303126101855780519067ffffffffffffffff8211610185570181601f8201121561018557805161289f81612850565b926128ad60405194856121b2565b818452602082840101116101855761243291602080850191016121ec565b6128d3612300565b506040908151906128e38261217a565b6000808352806020809401526128f7612300565b946001600160a01b03809116908551937fd8dfeb4500000000000000000000000000000000000000000000000000000000855260049486818781875afa908115612e04579083918691612ff7575b5016885286517f38d52e0f00000000000000000000000000000000000000000000000000000000815286818781875afa908115612e04579083918691612fbf575b5016878901528651907f7dc0d1d0000000000000000000000000000000000000000000000000000000009182815287818881885afa908115612e67579084918791612fa2575b501660808a01528751907f74645ff3000000000000000000000000000000000000000000000000000000009182815286818981895afa908115612e8d578791612f88575b5060a08b015288517f473e3ce700000000000000000000000000000000000000000000000000000000815288818981895afa908115612e8d578791612f5b575b5060c08b0152838951917f1c9e379b000000000000000000000000000000000000000000000000000000008352169081888201528881602481895afa908115612e8d578791612f2e575b5060e08b0152885163020a17bd60e61b815289818981895afa908115612e8d5787908892612f0e575b508a5191612ad08361217a565b6001600160801b03809216835216898201526101008b01528851907f48e4163e000000000000000000000000000000000000000000000000000000008252878201528781602481885afa908115612e67578691612ee1575b506101208a01528751633ba0b9a960e01b815287818881885afa908115612e67578691612eb4575b506101408a0152875182815287818881885afa908115612e67578691612e97575b5088519082825286828981895afa918215612e8d57918a91612bd1938992612e71575b508a878b8551968795869485937feeb8a8d3000000000000000000000000000000000000000000000000000000008552840152602483019061220f565b0392165afa908115612e67578691612e2d575b506101808a0152875191825286828781875afa918215612e04578592612e0e575b50875190815284818781875afa908115612e045791612c629188938791612de2575b5089519485809481937fd39bbef0000000000000000000000000000000000000000000000000000000008352878c840152602483019061220f565b0392165afa908115612d7e578391612db5575b5061016087015284517f40626d8b00000000000000000000000000000000000000000000000000000000815284818581855afa908115612d7e578391612d88575b506101a0870152845163226f120560e11b815284818581855afa908115612d7e57908592918491612d4d575b5060608801528551938480926377607a1760e11b82525afa938415612d4357508093612d11575b505082015290565b909180935082813d8311612d3c575b612d2a81836121b2565b81010312610209575051903880612d09565b503d612d20565b51903d90823e3d90fd5b8381939492503d8311612d77575b612d6581836121b2565b810103126106e0579084915138612ce2565b503d612d5b565b86513d85823e3d90fd5b90508481813d8311612dae575b612d9f81836121b2565b810103126106e0575138612cb6565b503d612d95565b90508481813d8311612ddb575b612dcc81836121b2565b810103126106e0575138612c75565b503d612dc2565b612dfe91503d8089833e612df681836121b2565b81019061286c565b38612c27565b88513d87823e3d90fd5b612e26919250873d8911610202576101f481836121b2565b9038612c05565b90508881813d8311612e60575b612e4481836121b2565b810103126106dc5780612e57899261252d565b50015138612be4565b503d612e3a565b89513d88823e3d90fd5b612e869192503d808b833e612df681836121b2565b9038612b94565b8a513d89823e3d90fd5b612eae9150883d8a11610202576101f481836121b2565b38612b71565b90508781813d8311612eda575b612ecb81836121b2565b810103126106dc575138612b50565b503d612ec1565b90508781813d8311612f07575b612ef881836121b2565b810103126106dc575138612b28565b503d612eee565b9050612f2791508a3d8c1161063a5761062b81836121b2565b9038612ac3565b90508881813d8311612f54575b612f4581836121b2565b810103126105b2575138612a9a565b503d612f3b565b90508881813d8311612f81575b612f7281836121b2565b810103126105b2575138612a50565b503d612f68565b612f9c91503d8089833e612df681836121b2565b38612a10565b612fb99150893d8b11610202576101f481836121b2565b386129cc565b809250888092503d8311612ff0575b612fd881836121b2565b8101031261101957612fea83916124d6565b38612986565b503d612fce565b809250888092503d8311613028575b61301081836121b2565b810103126110195761302283916124d6565b38612945565b503d613006565b90929160009586956000968796606094806131ca575b5050156130d857506001600160a01b0380941694853b156130d45761ffff969492889694926130a992604051998a98899788976307e76fc160e21b89521660048801521660248601526044850152606484015260c0608484015260c483019061220f565b3360a4830152039134905af18015610b0e576130c3575050565b6130cd8291612166565b6102095750565b8780fd5b955095505050905060009060409384519163226f120560e11b83526020836004816001600160a01b038095165afa9081156131c05790848793928192613184575b8460a4949596505197889586946311a5cc7760e31b865260048601523060248601523360448601526064850152826084850152165af1908115613179575061315f575050565b8161317592903d1061093b5761092d81836121b2565b5050565b8351903d90823e3d90fd5b93505050916020813d82116131b8575b816131a1602093836121b2565b81010312611a345751859283929091908590613119565b3d9150613194565b86513d86823e3d90fd5b915080949750016080848203126130d4576131e48461212b565b9760208501359761ffff89168903611a305785013567ffffffffffffffff8111611a3057850182601f82011215611a305780359061322182612850565b9361322f60405195866121b2565b828552602083830101116106e0578160409493926020809301838601378301015293013595963880613045565b919394929094600093848097606097806133d5575b5050156133035750506001600160a01b0380911691823b15610185576132d360009561ffff97604051988997889687966307e76fc160e21b8852166004870152166024850152604484015286606484015260c0608484015260c483019061220f565b3360a4830152039134905af180156132f7576132ec5750565b6132f590612166565b565b6040513d6000823e3d90fd5b935093509350506040928351906377607a1760e11b82526020826004816001600160a01b038095165afa9182156133ca579085939291600092613391575b5090600060a492855196879586946311a5cc7760e31b865260048601523060248601523360448601528360648601526084850152165af180156133865761315f575050565b82513d6000823e3d90fd5b91909293506020823d82116133c2575b816133ae602093836121b2565b810103126102095750518492916000613341565b3d91506133a1565b85513d6000823e3d90fd5b91965080979850016080878203126106dc576133f08761212b565b9560208801359861ffff8a168a03611a305788013567ffffffffffffffff8111611a3057880182601f82011215611a305780359061342d82612850565b9361343b60405195866121b2565b828552602083830101116106e0578160409493926020809301838601378301015296013596943880613271565b604080517fe985e9c5000000000000000000000000000000000000000000000000000000008082523060048301526001600160a01b0393841660248301819052909594919360209392168385604481845afa80156135fb5760009586916135c6575b5015613548575b82519687523060048801526001600160a01b039091166024870152939493829085908180604481015b03915afa90811561353f575061350f57505050565b82813d8311613538575b61352381836121b2565b8101031261020957506135359061252d565b50565b503d613519565b513d84823e3d90fd5b803b15611019578251967fa22cb46500000000000000000000000000000000000000000000000000000000885282600489015260016024890152858860448183865af19788156135bc576134fa97986135a5575b509695506134d1565b956135b38694939297612166565b9590919261359c565b84513d88823e3d90fd5b90508481813d83116135f4575b6135dd81836121b2565b810103126106dc576135ee9061252d565b386134ca565b503d6135d3565b83513d6000823e3d90fd5b6040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810192909252602090829060649082906000906001600160a01b03165af19081156132f7576000916136cd575b501561366f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b906020823d82116136fe575b816136e6602093836121b2565b8101031261020957506136f89061252d565b38613667565b3d91506136d956fea26469706673582212206c767f9443c2eb0ad678dfab75902dbf713b7fe14499d7d2e1e6a1f3826f492b64736f6c63430008120033";

type MarketsHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarketsHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarketsHelper__factory extends ContractFactory {
  constructor(...args: MarketsHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarketsHelper> {
    return super.deploy(overrides || {}) as Promise<MarketsHelper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MarketsHelper {
    return super.attach(address) as MarketsHelper;
  }
  override connect(signer: Signer): MarketsHelper__factory {
    return super.connect(signer) as MarketsHelper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarketsHelperInterface {
    return new utils.Interface(_abi) as MarketsHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarketsHelper {
    return new Contract(address, _abi, signerOrProvider) as MarketsHelper;
  }
}
