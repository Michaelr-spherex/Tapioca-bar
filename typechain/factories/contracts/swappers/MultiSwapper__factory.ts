/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MultiSwapper,
  MultiSwapperInterface,
} from "../../../contracts/swappers/MultiSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "contract IPenrose",
        name: "_tapiocaBar",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_pairCodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "dexData",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "dexData",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokenOutId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareIn",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "dexData",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "shareOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e080604052346200016d5760608162001588803803809162000023828562000172565b8339810103126200016d578051906001600160a01b039081831683036200016d576020810151908282168092036200016d5760049160406020920151946080526040519283809263de40657760e01b82525afa908115620001615760009162000119575b501660a05260c0526040516113db9081620001ad823960805181818160c60152818161044701528181610505015281816106b1015281816106fb0152610b93015260a0518181816092015281816103ed015281816108b9015281816109640152610b39015260c05181818160e801528181610424015281816104d40152818161067f015281816106d90152610b710152f35b6020813d821162000158575b81620001346020938362000172565b810103126200015457519082821682036200015157503862000087565b80fd5b5080fd5b3d915062000125565b6040513d6000823e3d90fd5b600080fd5b601f909101601f19168101906001600160401b038211908210176200019657604052565b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8063532bb19214610af857806355a68e10146103425763c6fe95491461003d57600080fd5b3461032a5761005a61004e36610c35565b81949293940190610ca6565b6040519263442c159960e01b84526004840152602491828401526044906000828501526020926064926001600160a01b0385878681847f0000000000000000000000000000000000000000000000000000000000000000165afa96871561033657600097610302575b507f0000000000000000000000000000000000000000000000000000000000000000947f0000000000000000000000000000000000000000000000000000000000000000610115600287511015610d51565b61011f8651610d9c565b968751996000199a8b81019081116102ed5761013b908a610d3d565b5286518a810190811161021057805b61016157896101588a610d30565b51604051908152f35b8a81018181116102ed57610191848a8861018886826101808886610d3d565b511693610d3d565b51169086610fa6565b61019b848d610d3d565b51918215610284576101c283826101c79315158061027b575b6101bd90611227565b61133a565b6112b8565b91810390811161026657906101de6101e49261131b565b90611298565b90600182019182811161026657821061022557610201908b610d3d565b528015610210578a018061014a565b86634e487b7160e01b60005260116004526000fd5b858c7f64732d6d6174682d6164642d6f766572666c6f770000000000000000000000008a60148d6040519462461bcd60e51b86526004860152840152820152fd5b89634e487b7160e01b60005260116004526000fd5b508415156101b4565b505060848c7f55545055545f414d4f554e540000000000000000000000000000000000000000887f556e697377617056324c6962726172793a20494e53554646494349454e545f4f8c602c8f6040519662461bcd60e51b88526004880152860152840152820152fd5b87634e487b7160e01b60005260116004526000fd5b9096508581813d831161032f575b61031a8183610c6c565b8101031261032a575195386100c3565b600080fd5b503d610310565b6040513d6000823e3d90fd5b3461032a5760c036600319011261032a576064356001600160a01b038116810361032a5760a43567ffffffffffffffff811161032a57610389610391913690600401610c07565b810190610ca6565b604051907f8d2e63b8000000000000000000000000000000000000000000000000000000008252600435600483015230602483015230604483015260006064830152604435608483015260408260a48160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af191821561033657600092610ad6575b5061046b7f000000000000000000000000000000000000000000000000000000000000000082847f0000000000000000000000000000000000000000000000000000000000000000610ddd565b9283518060001981011161083357610487906000190185610d3d565b51926084358410610a92576001600160a01b036104a384610d30565b51166001600160a01b036104b685610d30565b511690845160011015610a7c576000928361057761058561052983967f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0360408d015116907f0000000000000000000000000000000000000000000000000000000000000000611169565b9360405192839160208301967fa9059cbb00000000000000000000000000000000000000000000000000000000885260248401602090939291936001600160a01b0360408201951681520152565b03601f198101835282610c6c565b51925af13d15610a75573d67ffffffffffffffff811161080557604051906105b7601f8201601f191660200183610c6c565b81523d6000602083013e5b81610a46575b5015610a025760005b8251600019810190811161083357811015610864576001600160a01b036105f88285610d3d565b511690600181018111610833576001600160a01b0361061a6001830186610d3d565b511691610627838261108c565b50926001600160a01b0361063e600185018a610d3d565b519416820361085c57600093915b8651806001198101116108335760011901841015610849576002840184116108335761071f6001600160a01b03916106d57f0000000000000000000000000000000000000000000000000000000000000000846106ac60028a018d610d3d565b5116867f0000000000000000000000000000000000000000000000000000000000000000611169565b935b7f0000000000000000000000000000000000000000000000000000000000000000917f0000000000000000000000000000000000000000000000000000000000000000611169565b16916040519182602081011067ffffffffffffffff602085011117610805576020830160405260008352833b1561032a576001600160a01b0390604096939296519687947f022c0d9f000000000000000000000000000000000000000000000000000000008652600486015260248501521660448301526080606483015280519081608484015260005b82811061081b5750509181600060a482868383819984010152601f801991011681010301925af18015610336576107ea575b6107e59150610dce565b6105d1565b67ffffffffffffffff8211610805576107e5916040526107db565b634e487b7160e01b600052604160045260246000fd5b602082820181015160a48984010152879450016107a9565b634e487b7160e01b600052601160045260246000fd5b61071f6001600160a01b039130936106d7565b60009161064c565b5092508051906000198201918211610833576001600160a01b039161088891610d3d565b516040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000166004820152602481018490529160209183916044918391600091165af18015610336576109d3575b506001600160a01b03604051927f9a9af97a00000000000000000000000000000000000000000000000000000000845260243560048501523060248501521660448301528060648301526000608483015260408260a48160006001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165af18015610336576040926000916109a4575b5082519182526020820152f35b6109c49150833d85116109cc575b6109bc8183610c6c565b810190611377565b905083610997565b503d6109b2565b6109f49060203d6020116109fb575b6109ec8183610c6c565b81019061138d565b5082610901565b503d6109e2565b606460405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b8051801592508215610a5b575b5050856105c8565b610a6e925060208091830101910161138d565b8580610a53565b60606105c2565b634e487b7160e01b600052603260045260246000fd5b606460405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f75740000000000000000006044820152fd5b610af091925060403d6040116109cc576109bc8183610c6c565b50908361041e565b3461032a57610b0961004e36610c35565b906040519263442c159960e01b845260048401526024830152600060448301526020826064816001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000165afa90811561033657600091610bd2575b610bb792507f0000000000000000000000000000000000000000000000000000000000000000917f0000000000000000000000000000000000000000000000000000000000000000610ddd565b80516000198101919082116108335760209161015891610d3d565b90506020823d8211610bff575b81610bec60209383610c6c565b8101031261032a57610bb7915190610b6a565b3d9150610bdf565b9181601f8401121561032a5782359167ffffffffffffffff831161032a576020838186019501011161032a57565b606060031982011261032a5760043591602435916044359067ffffffffffffffff821161032a57610c6891600401610c07565b9091565b90601f8019910116810190811067ffffffffffffffff82111761080557604052565b67ffffffffffffffff81116108055760051b60200190565b602090818184031261032a5780359067ffffffffffffffff821161032a57019180601f8401121561032a578235610cdc81610c8e565b93610cea6040519586610c6c565b818552838086019260051b82010192831161032a578301905b828210610d11575050505090565b81356001600160a01b038116810361032a578152908301908301610d03565b805115610a7c5760200190565b8051821015610a7c5760209160051b010190565b15610d5857565b606460405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f5041544800006044820152fd5b90610da682610c8e565b610db36040519182610c6c565b8281528092610dc4601f1991610c8e565b0190602036910137565b60001981146108335760010190565b9392919091610df0600283511015610d51565b610dfa8251610d9c565b92610e0484610d30565b5260005b8251600019810190811161083357811015610f84576001600160a01b039081610e318286610d3d565b5116600182019283831161083357610e58918591610e4f8689610d3d565b5116908a610fa6565b610e658388959395610d3d565b518015610f1a57610e94610e8d610e9a9287151580610f11575b610e8890611227565b61131b565b928361133a565b946112b8565b90810190818111610833578110610ecd57610ebb610ec291610ec895611298565b9187610d3d565b52610dce565b610e08565b606460405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f770000000000000000000000006044820152fd5b50841515610e7f565b608460405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201527f4e5055545f414d4f554e540000000000000000000000000000000000000000006064820152fd5b5050509150565b51906dffffffffffffffffffffffffffff8216820361032a57565b60608291610fcd60049596610fbb888661108c565b50976001600160a01b03958694611169565b16604051948580927f0902f1ac0000000000000000000000000000000000000000000000000000000082525afa928315610336576000908194611031575b5081906dffffffffffffffffffffffffffff80911694169416911614600014610c685791565b93506060843d8211611084575b8161104b60609383610c6c565b810103126110815761105c84610f8b565b90604061106b60208701610f8b565b95015163ffffffff81160361108157508161100b565b80fd5b3d915061103e565b90916001600160a01b03918284168382168181146110ff5710156110fa57925b918316156110b657565b606460405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f4144445245535300006044820152fd5b6110ac565b608460405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f4144445260448201527f45535345530000000000000000000000000000000000000000000000000000006064820152fd5b916111739161108c565b929060405160208101916bffffffffffffffffffffffff199586809260601b16845260601b16603482015260288152606081019267ffffffffffffffff95828510878611176108055760e09385604052835190209060808401967fff00000000000000000000000000000000000000000000000000000000000000885260601b166081840152609583015260b582015260558352019281841090841117610805576001600160a01b03926040525190201690565b1561122e57565b608460405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60448201527f49515549444954590000000000000000000000000000000000000000000000006064820152fd5b81156112a2570490565b634e487b7160e01b600052601260045260246000fd5b906103e89182810292818404811482151715610833578304036112d757565b606460405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6d756c2d6f766572666c6f770000000000000000000000006044820152fd5b906103e59182810292818404811482151715610833578304036112d757565b600092918015918215611351575b5050156112d757565b808202945091508115828504821417156108335761136f9084611298565b143880611348565b919082604091031261032a576020825192015190565b9081602091031261032a5751801515810361032a579056fea264697066735822122043eac5dc509ee7c7e9a778264cf92f84371d204347448d06ea79a185e274a7c864736f6c63430008120033";

type MultiSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSwapper__factory extends ContractFactory {
  constructor(...args: MultiSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _tapiocaBar: PromiseOrValue<string>,
    _pairCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiSwapper> {
    return super.deploy(
      _factory,
      _tapiocaBar,
      _pairCodeHash,
      overrides || {}
    ) as Promise<MultiSwapper>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _tapiocaBar: PromiseOrValue<string>,
    _pairCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _factory,
      _tapiocaBar,
      _pairCodeHash,
      overrides || {}
    );
  }
  override attach(address: string): MultiSwapper {
    return super.attach(address) as MultiSwapper;
  }
  override connect(signer: Signer): MultiSwapper__factory {
    return super.connect(signer) as MultiSwapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSwapperInterface {
    return new utils.Interface(_abi) as MultiSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiSwapper {
    return new Contract(address, _abi, signerOrProvider) as MultiSwapper;
  }
}
