/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  NonYieldBoxMultiSwapper,
  NonYieldBoxMultiSwapperInterface,
} from "../../../contracts/swappers/NonYieldBoxMultiSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_factory",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_pairCodeHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountMinOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0346100c257601f6111e638819003918201601f19168301916001600160401b038311848410176100c75780849260409485528339810103126100c2578051906001600160a01b03821682036100c257602001519060805260a05260405161110890816100de823960805181818161016f015281816102240152818161032b01528181610375015281816105f10152610847015260a05181818161014a015281816101f3015281816102f90152818161035301528181610613015261081d0152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c806324805ab91461080357806327a1bd21146105dd5763b40707081461003d57600080fd5b346104b95760c03660031901126104b9576004356001600160a01b03811681036104b957602435906001600160a01b03821682036104b9576001600160a01b0360643516606435036104b95760843567ffffffffffffffff81116104b9576100a9903690600401610886565b91604051907f23b872dd00000000000000000000000000000000000000000000000000000000602083015233602483015230604483015260a4356064830152606482528160a081011067ffffffffffffffff60a08401111761047f57816000929160a0849301604052826001600160a01b0360208451940192165af161012d610f99565b816105ae575b501561056a57610144913691610940565b906101937f00000000000000000000000000000000000000000000000000000000000000008360a4357f0000000000000000000000000000000000000000000000000000000000000000610a4b565b91825160001981019081116104be576101ac90846109ab565b516044358110610526576001600160a01b036101c78361099e565b51166001600160a01b036101da8461099e565b51168351600110156105105761024e9161024860a435927f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03604089015116907f0000000000000000000000000000000000000000000000000000000000000000610d97565b90610ff1565b60005b825160001981019081116104be578110156104ef576001600160a01b0361027882856109ab565b51169060018101918282116104be576001600160a01b0361029984876109ab565b51166001600160a01b036102b86102b08385610cba565b50958a6109ab565b51941682036104e757600093915b8651806001198101116104be57600119018410156104d4576002840184116104be576103996001600160a01b039161034f7f00000000000000000000000000000000000000000000000000000000000000008461032660028a018d6109ab565b5116867f0000000000000000000000000000000000000000000000000000000000000000610d97565b935b7f0000000000000000000000000000000000000000000000000000000000000000917f0000000000000000000000000000000000000000000000000000000000000000610d97565b16916040519182602081011067ffffffffffffffff60208501111761047f576020830160405260008352833b156104b9576001600160a01b0390604096939296519687947f022c0d9f000000000000000000000000000000000000000000000000000000008652600486015260248501521660448301526080606483015280519081608484015260005b8281106104a15750509181600060a482868383819984010152601f801991011681010301925af1801561049557610464575b61045f9150610a3c565b610251565b67ffffffffffffffff821161047f5761045f91604052610455565b634e487b7160e01b600052604160045260246000fd5b6040513d6000823e3d90fd5b602082820181015160a4898401015287945001610423565b600080fd5b634e487b7160e01b600052601160045260246000fd5b6103996001600160a01b03913093610351565b6000916102c6565b602082610508816064356001600160a01b038916610ff1565b604051908152f35b634e487b7160e01b600052603260045260246000fd5b606460405162461bcd60e51b815260206004820152601760248201527f696e73756666696369656e742d616d6f756e742d6f75740000000000000000006044820152fd5b606460405162461bcd60e51b815260206004820152602060248201527f426f72696e6745524332303a205472616e7366657246726f6d206661696c65646044820152fd5b80518015925082156105c3575b505038610133565b6105d69250602080918301019101610fd9565b38806105bb565b346104b9576105eb366108b7565b9061063a7f0000000000000000000000000000000000000000000000000000000000000000937f0000000000000000000000000000000000000000000000000000000000000000923691610940565b926106496002855110156109bf565b6106538451610a0a565b93845193600019948581019081116104be5761066f90876109ab565b5280518481019081116104be57805b61069657602061068d8761099e565b51604051908152f35b8481018181116104be576106cd856001600160a01b03806106b785886109ab565b5116906106c486886109ab565b51169087610bd0565b906106d8848a6109ab565b51908115610799576106ff828261070493151580610790575b6106fa90610e49565b610f5c565b610eda565b9082039182116104be5761071a61072092610f3d565b90610eba565b9060018201918281116104be57821061074c5761073d90886109ab565b5280156104be5784018061067e565b606460405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f770000000000000000000000006044820152fd5b508515156106f1565b608460405162461bcd60e51b815260206004820152602c60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4f60448201527f55545055545f414d4f554e5400000000000000000000000000000000000000006064820152fd5b346104b95761086b610844610817366108b7565b919290927f0000000000000000000000000000000000000000000000000000000000000000933691610940565b907f0000000000000000000000000000000000000000000000000000000000000000610a4b565b80516000198101919082116104be5760209161068d916109ab565b9181601f840112156104b95782359167ffffffffffffffff83116104b9576020808501948460051b0101116104b957565b60406003198201126104b9576004359067ffffffffffffffff82116104b9576108e291600401610886565b909160243590565b6080810190811067ffffffffffffffff82111761047f57604052565b90601f8019910116810190811067ffffffffffffffff82111761047f57604052565b67ffffffffffffffff811161047f5760051b60200190565b929161094b82610928565b916109596040519384610906565b829481845260208094019160051b81019283116104b957905b82821061097f5750505050565b81356001600160a01b03811681036104b9578152908301908301610972565b8051156105105760200190565b80518210156105105760209160051b010190565b156109c657565b606460405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a20494e56414c49445f5041544800006044820152fd5b90610a1482610928565b610a216040519182610906565b8281528092610a32601f1991610928565b0190602036910137565b60001981146104be5760010190565b9392919091610a5e6002835110156109bf565b610a688251610a0a565b92610a728461099e565b5260005b825160001981019081116104be57811015610bae576001600160a01b039081610a9f82866109ab565b511660018201928383116104be57610ac6918591610abd86896109ab565b5116908a610bd0565b610ad383889593956109ab565b518015610b4457610b02610afb610b089287151580610b3b575b610af690610e49565b610f3d565b9283610f5c565b94610eda565b908101908181116104be57811061074c57610b29610b3091610b3695610eba565b91876109ab565b52610a3c565b610a76565b50841515610aed565b608460405162461bcd60e51b815260206004820152602b60248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4960448201527f4e5055545f414d4f554e540000000000000000000000000000000000000000006064820152fd5b5050509150565b51906dffffffffffffffffffffffffffff821682036104b957565b60608291610bf760049596610be58886610cba565b50976001600160a01b03958694610d97565b16604051948580927f0902f1ac0000000000000000000000000000000000000000000000000000000082525afa928315610495576000908194610c5f575b5081906dffffffffffffffffffffffffffff80911694169416911614600014610c5b5791565b9091565b93506060843d8211610cb2575b81610c7960609383610906565b81010312610caf57610c8a84610bb5565b906040610c9960208701610bb5565b95015163ffffffff811603610caf575081610c35565b80fd5b3d9150610c6c565b90916001600160a01b0391828416838216818114610d2d571015610d2857925b91831615610ce457565b606460405162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f4144445245535300006044820152fd5b610cda565b608460405162461bcd60e51b815260206004820152602560248201527f556e697377617056324c6962726172793a204944454e544943414c5f4144445260448201527f45535345530000000000000000000000000000000000000000000000000000006064820152fd5b91610da191610cba565b926040519160208301906bffffffffffffffffffffffff199586809260601b16835260601b16603484015260288352606083019280841067ffffffffffffffff85111761047f576001600160a01b039560b59285604052825190209060808301967fff00000000000000000000000000000000000000000000000000000000000000885260601b1660818301526095820152015260558152610e42816108ea565b5190201690565b15610e5057565b608460405162461bcd60e51b815260206004820152602860248201527f556e697377617056324c6962726172793a20494e53554646494349454e545f4c60448201527f49515549444954590000000000000000000000000000000000000000000000006064820152fd5b8115610ec4570490565b634e487b7160e01b600052601260045260246000fd5b906103e891828102928184048114821517156104be57830403610ef957565b606460405162461bcd60e51b815260206004820152601460248201527f64732d6d6174682d6d756c2d6f766572666c6f770000000000000000000000006044820152fd5b906103e591828102928184048114821517156104be57830403610ef957565b600092918015918215610f73575b505015610ef957565b808202945091508115828504821417156104be57610f919084610eba565b143880610f6a565b3d15610fd4573d9067ffffffffffffffff821161047f5760405191610fc8601f8201601f191660200184610906565b82523d6000602084013e565b606090565b908160209103126104b9575180151581036104b95790565b60009283809360405160208101937fa9059cbb0000000000000000000000000000000000000000000000000000000085526001600160a01b038093166024830152604482015260448152611044816108ea565b5193165af1611051610f99565b816110a3575b501561105f57565b606460405162461bcd60e51b815260206004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b80518015925082156110b8575b505038611057565b6110cb9250602080918301019101610fd9565b38806110b056fea26469706673582212201e411719db4bbb312ee2cb39c09467e49fa0d4e6a5abed581d244c359cb019a964736f6c63430008120033";

type NonYieldBoxMultiSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonYieldBoxMultiSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonYieldBoxMultiSwapper__factory extends ContractFactory {
  constructor(...args: NonYieldBoxMultiSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _factory: PromiseOrValue<string>,
    _pairCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NonYieldBoxMultiSwapper> {
    return super.deploy(
      _factory,
      _pairCodeHash,
      overrides || {}
    ) as Promise<NonYieldBoxMultiSwapper>;
  }
  override getDeployTransaction(
    _factory: PromiseOrValue<string>,
    _pairCodeHash: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _pairCodeHash, overrides || {});
  }
  override attach(address: string): NonYieldBoxMultiSwapper {
    return super.attach(address) as NonYieldBoxMultiSwapper;
  }
  override connect(signer: Signer): NonYieldBoxMultiSwapper__factory {
    return super.connect(signer) as NonYieldBoxMultiSwapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonYieldBoxMultiSwapperInterface {
    return new utils.Interface(_abi) as NonYieldBoxMultiSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonYieldBoxMultiSwapper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NonYieldBoxMultiSwapper;
  }
}
