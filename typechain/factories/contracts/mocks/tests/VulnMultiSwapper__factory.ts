/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  VulnMultiSwapper,
  VulnMultiSwapperInterface,
} from "../../../../contracts/mocks/tests/VulnMultiSwapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Penrose",
        name: "penrose",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "counterfeitSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610306908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c6347feaff91461002c57600080fd5b3461024a57606036600319011261024a57813573ffffffffffffffffffffffffffffffffffffffff92838216809203610246576024359086604435958087168097036101db5787947fde406577000000000000000000000000000000000000000000000000000000009081885260209788818781855afa92831561023c578991869461021d575b508689518094819382525afa9081156101e6578391899186916101f0575b5060448b8a5194859384927f54317d160000000000000000000000000000000000000000000000000000000084528b8401528b6024840152165afa9081156101e65784916101ac575b508660a4969798505198899788967f8d2e63b800000000000000000000000000000000000000000000000000000000885287015260248601523360448601526064850152826084850152165af180156101a057610175578280f35b813d8311610199575b610188818361024e565b810103126101965738808280f35b80fd5b503d61017e565b505051903d90823e3d90fd5b959650509584813d83116101df575b6101c5818361024e565b810103126101db57879560a4945187969561011a565b5080fd5b503d6101bb565b87513d86823e3d90fd5b6102109150823d8411610216575b610208818361024e565b81019061029f565b386100d1565b503d6101fe565b610235919450823d841161021657610208818361024e565b92386100b3565b88513d87823e3d90fd5b8580fd5b8380fd5b90601f8019910116810190811067ffffffffffffffff82111761027057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b908160209103126102cb575173ffffffffffffffffffffffffffffffffffffffff811681036102cb5790565b600080fdfea26469706673582212206d2c3822c71208a692ca39276c440a1c546158fdbebb495ba983060a5905595564736f6c63430008120033";

type VulnMultiSwapperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VulnMultiSwapperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VulnMultiSwapper__factory extends ContractFactory {
  constructor(...args: VulnMultiSwapperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VulnMultiSwapper> {
    return super.deploy(overrides || {}) as Promise<VulnMultiSwapper>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VulnMultiSwapper {
    return super.attach(address) as VulnMultiSwapper;
  }
  override connect(signer: Signer): VulnMultiSwapper__factory {
    return super.connect(signer) as VulnMultiSwapper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VulnMultiSwapperInterface {
    return new utils.Interface(_abi) as VulnMultiSwapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VulnMultiSwapper {
    return new Contract(address, _abi, signerOrProvider) as VulnMultiSwapper;
  }
}
