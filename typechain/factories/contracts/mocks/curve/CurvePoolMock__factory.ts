/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  CurvePoolMock,
  CurvePoolMockInterface,
} from "../../../../contracts/mocks/curve/CurvePoolMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "coins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "divider",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "j",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "exchange",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "dx",
        type: "uint256",
      },
    ],
    name: "get_dy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "div",
        type: "uint256",
      },
    ],
    name: "setDivider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100de57601f61054638819003918201601f19168301916001600160401b038311848410176100e35780849260409485528339810103126100de57610052602061004b836100f9565b92016100f9565b600060208190527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb580546001600160a01b03199081166001600160a01b03958616179091556001918290527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d8054909116939092169290921790558055604051610438908161010e8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100de5756fe608080604052600436101561001357600080fd5b600090813560e01c908163378efa371461011f575080633df02124146100ed5780635e0d443f146100b4578063893fe0be146100995763c66106571461005857600080fd5b346100965760203660031901126100965773ffffffffffffffffffffffffffffffffffffffff60406020926004358152808452205416604051908152f35b80fd5b50346100965760203660031901126100965760043560015580f35b5034610096576060366003190112610096576100ce61013f565b506100d7610154565b5060206100e5604435610184565b604051908152f35b50346100965760803660031901126100965761010761013f565b5061011c610113610154565b604435906101d8565b80f35b90503461013b578160031936011261013b576020906001548152f35b5080fd5b6004359081600f0b820361014f57565b600080fd5b6024359081600f0b820361014f57565b811561016e570490565b634e487b7160e01b600052601260045260246000fd5b60015480156101995761019691610164565b90565b5050600090565b90601f8019910116810190811067ffffffffffffffff8211176101c257604052565b634e487b7160e01b600052604160045260246000fd5b6001549060009082156103fc576fffffffffffffffffffffffffffffffff16815260209281845261022560409373ffffffffffffffffffffffffffffffffffffffff858520541692610164565b91813b156100965783517f40c10f1900000000000000000000000000000000000000000000000000000000815230600482015260248101849052818160448183875af180156103f2576103c7575b5083517fa9059cbb00000000000000000000000000000000000000000000000000000000868201908152336024830152604480830195909552938152601f199391928392839283906102c66064826101a0565b51925af1913d156103bf573d67ffffffffffffffff81116103ab576102f486865193601f84011601836101a0565b81523d828683013e5b8261036b575b50501561030e575050565b6064925051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152601c60248201527f426f72696e6745524332303a205472616e73666572206661696c6564000000006044820152fd5b8051925082159190858315610387575b50505090503880610303565b91938180945001031261013b5783015190811515820361009657508038808561037b565b602483634e487b7160e01b81526041600452fd5b5060606102fd565b67ffffffffffffffff81116103de57845238610273565b602482634e487b7160e01b81526041600452fd5b85513d84823e3d90fd5b5050505056fea2646970667358221220777a0a660097111f76d3080162d3f4bdc9aabd13ba7af20b3be897b54074608264736f6c63430008120033";

type CurvePoolMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CurvePoolMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CurvePoolMock__factory extends ContractFactory {
  constructor(...args: CurvePoolMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    token0: PromiseOrValue<string>,
    token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CurvePoolMock> {
    return super.deploy(
      token0,
      token1,
      overrides || {}
    ) as Promise<CurvePoolMock>;
  }
  override getDeployTransaction(
    token0: PromiseOrValue<string>,
    token1: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token0, token1, overrides || {});
  }
  override attach(address: string): CurvePoolMock {
    return super.attach(address) as CurvePoolMock;
  }
  override connect(signer: Signer): CurvePoolMock__factory {
    return super.connect(signer) as CurvePoolMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CurvePoolMockInterface {
    return new utils.Interface(_abi) as CurvePoolMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CurvePoolMock {
    return new Contract(address, _abi, signerOrProvider) as CurvePoolMock;
  }
}
