/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ContractThatReverts,
  ContractThatRevertsInterface,
} from "../../../../contracts/utils/mocks/ContractThatReverts";

const _abi = [
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "revertStr",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "shouldNotRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "shouldRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100c157600180548181811c911680156100b7575b60208210146100a157601f8111610072575b50806043602160f81b92558060005260206000207f54686973206d6574686f642072657665727465642e20536f20617765736f6d658155015561028990816100c78239f35b816000526002601f6020600020920160051c820191015b818110610096575061002d565b600081558201610089565b634e487b7160e01b600052602260045260246000fd5b90607f169061001b565b600080fdfe6080604090808252600436101561001557600080fd5b600091823560e01c91826306661abd146101635750816316b2da8214610110578163d58f64341461006c575063fa2880ca1461005057600080fd5b3461006957602036600319011261006957600435815580f35b80fd5b90503461010c578160031936011261010c578051601f199081601f826100918161017d565b03011681019381851067ffffffffffffffff8611176100f85791849192828552602090818452845191828186015281955b8387106100e05750508394508582601f949501015201168101030190f35b868101820151898801890152958101958895506100c2565b80634e487b7160e01b602492526041600452fd5b5080fd5b8234610069576020366003190112610069576004359055517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201528061015f6024820161017d565b0390fd5b83903461010c578160031936011261010c57602091548152f35b60018054600093928183169282811c928415610249575b60209485851081146102335784845290811561021657506001146101b9575b50505050565b80939495506000929192527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf692846000945b8386106102025750505050010190388080806101b3565b8054858701830152940193859082016101eb565b60ff191685840152505090151560051b01019150388080806101b3565b634e487b7160e01b600052602260045260246000fd5b92607f169261019456fea264697066735822122059c46894f08fc5e5e14ae5b93f075b8ac4c26d6e003e5dec42d681a4fa65fd2a64736f6c63430008120033";

type ContractThatRevertsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ContractThatRevertsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ContractThatReverts__factory extends ContractFactory {
  constructor(...args: ContractThatRevertsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractThatReverts> {
    return super.deploy(overrides || {}) as Promise<ContractThatReverts>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ContractThatReverts {
    return super.attach(address) as ContractThatReverts;
  }
  override connect(signer: Signer): ContractThatReverts__factory {
    return super.connect(signer) as ContractThatReverts__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractThatRevertsInterface {
    return new utils.Interface(_abi) as ContractThatRevertsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractThatReverts {
    return new Contract(address, _abi, signerOrProvider) as ContractThatReverts;
  }
}
