/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IFee, IFeeInterface } from "../../../contracts/interfaces/IFee";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minAssetAmount",
            type: "uint256",
          },
        ],
        internalType: "struct IPenrose.SwapData",
        name: "",
        type: "tuple",
      },
    ],
    name: "depositFeesToYieldBox",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IFee__factory {
  static readonly abi = _abi;
  static createInterface(): IFeeInterface {
    return new utils.Interface(_abi) as IFeeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IFee {
    return new Contract(address, _abi, signerOrProvider) as IFee;
  }
}
