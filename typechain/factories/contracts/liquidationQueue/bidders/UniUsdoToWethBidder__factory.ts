/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  UniUsdoToWethBidder,
  UniUsdoToWethBidderInterface,
} from "../../../../contracts/liquidationQueue/bidders/UniUsdoToWethBidder";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "uniV2Swapper_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_wethAssetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_old",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_new",
        type: "address",
      },
    ],
    name: "UniV2SwapperUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "claimOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getInputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getOutputAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISwapper",
        name: "_swapper",
        type: "address",
      },
    ],
    name: "setUniswapSwapper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISingularity",
        name: "singularity",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
      {
        internalType: "bool",
        name: "direct",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "renounce",
        type: "bool",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "univ2Swapper",
    outputs: [
      {
        internalType: "contract ISwapper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100ab57601f6115bb38819003918201601f19168301916001600160401b038311848410176100b05780849260409485528339810103126100ab5780516001600160a01b03811691908290036100ab576020015160008054336001600160a01b03199182168117835560405194927f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08180a360025416176002556003556114f490816100c78239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b600090813560e01c90816306fdde031461115b57508063078dfbe7146110325780634e71e0c814610f7a5780635dd82b3614610b9b57806385267a0114610b745780638da5cb5b14610b4e578063b691d78c146104af578063b6aebf361461042c578063e30c3978146104055763fef744fa1461008f57600080fd5b346104025761009d36611222565b5050604051636c3d8b8f60e01b8152602094936001600160a01b039391908416908681600481855afa908115610353578591889188916103c7575b506004604051809481936386c8e21d60e01b8352165afa908115610353579087918791610396575b509161010f600493851461133a565b6040519283809263de40657760e01b82525afa90811561038b57908491869161035e575b5016926003549160405193638eb22cdd60e01b855283600486015260248501528560448501528684606481885afa938415610353578694610324575b5060405194630cf35bdd60e41b9182875260048701526080918287602481855afa9687156103195788976102f4575b50829060246040518094819382528860048301525afa9182156102e957610260969389969361021c969361022a938b926102b8575b5050604051956101e2876112d2565b600287526040368a890137826101f7886113dd565b911690528161020587611400565b911690526002541693604051958691888301611410565b03601f198101865285611304565b604051958694859384937fc6fe954900000000000000000000000000000000000000000000000000000000855260048501611454565b03915afa9182156102ac579161027a575b50604051908152f35b90508181813d83116102a5575b6102918183611304565b810103126102a0575138610271565b600080fd5b503d610287565b604051903d90823e3d90fd5b6102d79250803d106102e2575b6102cf8183611304565b8101906113a4565b5050905038806101d3565b503d6102c5565b6040513d89823e3d90fd5b8391975061030e90823d84116102e2576102cf8183611304565b50509050969061019e565b6040513d8a823e3d90fd5b9093508681813d831161034c575b61033c8183611304565b810103126102a05751923861016f565b503d610332565b6040513d88823e3d90fd5b61037e9150873d8911610384575b6103768183611304565b810190611385565b38610133565b503d61036c565b6040513d87823e3d90fd5b82819392503d83116103c0575b6103ad8183611304565b810103126102a05751869061010f610100565b503d6103a3565b92505081813d83116103fb575b6103de8183611304565b810103126103f757866103f18692611326565b386100d8565b8580fd5b503d6103d4565b80fd5b503461040257806003193601126104025760206001600160a01b0360015416604051908152f35b5034610402576020366003190112610402576004356001600160a01b038082168092036104ab578061047873ffffffffffffffffffffffffffffffffffffffff19928554163314611287565b826002549182167f1226a5d51aea8884fdf5761c8e63e98532d3eedcc0a3d56ebe98e3080fcf96dd8680a3161760025580f35b8280fd5b5034610402576001600160a01b036104c636611222565b939490919294169260405194636c3d8b8f60e01b95868152602081600481895afa908115610319578891610b09575b5060206001600160a01b0391600460405180948193631192124760e11b8352165afa908115610319578891610ac3575b506001600160a01b0361053a91161515611473565b6040519263de40657760e01b8452602084600481895afa938415610319578894610aa2575b50604051967fc23ea21f0000000000000000000000000000000000000000000000000000000088526020886004818a5afa978815610997578998610a80575b5060209060046040518099819382525afa958615610319578896610a3b575b5060206001600160a01b03966004604051809981936386c8e21d60e01b8352165afa958615610319578896610a03575b506105f986831461133a565b6001600160a01b03871633036109bf578792806109a2575b50506001600160a01b03600254169060405190638eb22cdd60e01b82528060048301528560248301528860448301526020826064816001600160a01b0389165afa918215610997578992610963575b506001600160a01b0385163b1561095f57604051927f0411b2520000000000000000000000000000000000000000000000000000000084523060048501526024840152604483015260648201528681608481836001600160a01b0388165af180156102e95761092f575b50856003549160405193630cf35bdd60e41b908186528760048701526080866024816001600160a01b0385165afa9586156108ff57849661090a575b506040519182528460048301526080826024816001600160a01b0385165afa9182156108ff576001600160a01b039760209360649287916108dc575b50604051986107508a6112d2565b60028a52604036878c01378a6107658b6113dd565b91169052896107738a611400565b911690526040519889938492638eb22cdd60e01b84528c60048501526024840152876044840152165afa9485156108985782956108a3575b50946108416107d46040976107e26001600160a01b0360025416978a5193849160208301611410565b03601f198101845283611304565b6001600160a01b0389519a8b998a9889977f55a68e10000000000000000000000000000000000000000000000000000000008952600489015260248801526044870152166064850152608484015260c060a484015260c48301906111e2565b03925af190811561089857829161085e575b602082604051908152f35b90506040813d604011610890575b8161087960409383611304565b8101031261088c57602091505138610853565b5080fd5b3d915061086c565b6040513d84823e3d90fd5b915093506020813d6020116108d4575b816108c060209383611304565b810103126102a057519286906108416107ab565b3d91506108b3565b6108f5915060803d6080116102e2576102cf8183611304565b5050905038610742565b6040513d86823e3d90fd5b61092491965060803d6080116102e2576102cf8183611304565b505090509438610706565b67ffffffffffffffff819792971161094b5760405294386106ca565b602482634e487b7160e01b81526041600452fd5b8880fd5b9091506020813d60201161098f575b8161097f60209383611304565b8101031261095f57519038610660565b3d9150610972565b6040513d8b823e3d90fd5b8192935090602091810103126109bb5735903880610611565b8680fd5b606460405162461bcd60e51b815260206004820152600760248201527f6f6e6c79204c51000000000000000000000000000000000000000000000000006044820152fd5b9095506020813d602011610a33575b81610a1f60209383611304565b81010312610a2f575194386105ed565b8780fd5b3d9150610a12565b95506020863d602011610a78575b81610a5660209383611304565b81010312610a2f576020610a716001600160a01b0397611326565b96506105bd565b3d9150610a49565b6020919850610a9b90823d8411610384576103768183611304565b979061059e565b610abc91945060203d602011610384576103768183611304565b923861055f565b90506020813d602011610b01575b81610ade60209383611304565b81010312610a2f576001600160a01b03610afa61053a92611326565b9150610525565b3d9150610ad1565b90506020813d602011610b46575b81610b2460209383611304565b81010312610a2f576020610b3f6001600160a01b0392611326565b91506104f5565b3d9150610b17565b50346104025780600319360112610402576001600160a01b036020915416604051908152f35b503461040257806003193601126104025760206001600160a01b0360025416604051908152f35b503461040257610baa36611222565b50509092916001600160a01b038091169360405194636c3d8b8f60e01b8087526020968781600481865afa9081156102e957859189918991610f43575b50600460405180948193631192124760e11b8352165afa80156102e95785908890610f0b575b610c1a9250161515611473565b6040519081528681600481855afa9081156103535784929188918891610ed2575b506004604051809581936386c8e21d60e01b8352165afa918215610353579087918793610e9f575b50610c7283600494951461133a565b6040519283809263de40657760e01b82525afa90811561038b579083918691610e82575b5016916003549360405194630cf35bdd60e41b80875284600488015260809182886024818a5afa978815610997578998610e5f575b5060405191825260048201528181602481895afa9182156103195790899392918992610e3e575b505060405196610d01886112d2565b60028852604036858a013784610d16896113dd565b9116905283610d2488611400565b91169052606460405180968193638eb22cdd60e01b835287600484015260248301528960448301525afa92831561038b5790869392918693610e04575b5091610db89491610d8261021c946002541693604051958691888301611410565b604051958694859384937f532bb19200000000000000000000000000000000000000000000000000000000855260048501611454565b03915afa9182156102ac578092610dd4575b5050604051908152f35b9091508282813d8311610dfd575b610dec8183611304565b810103126104025750513880610dca565b503d610de2565b809293508491943d8311610e37575b610e1d8183611304565b81010312610e3357518592909190610db8610d61565b8480fd5b503d610e13565b610e549250803d106102e2576102cf8183611304565b505090503880610cf2565b610e77919850833d85116102e2576102cf8183611304565b505090509638610ccb565b610e999150873d8911610384576103768183611304565b38610c96565b8281939294503d8311610ecb575b610eb78183611304565b810103126103f75751908690610c72610c63565b503d610ead565b9293505081813d8311610f04575b610eea8183611304565b810103126103f7579086610efe8593611326565b38610c3b565b503d610ee0565b50508781813d8311610f3c575b610f228183611304565b810103126109bb5784610f37610c1a92611326565b610c0d565b503d610f18565b92505081813d8311610f73575b610f5a8183611304565b810103126109bb5787610f6d8692611326565b38610be7565b503d610f50565b50346104025780600319360112610402576001546001600160a01b0390818116803303610fee578084549384167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08680a373ffffffffffffffffffffffffffffffffffffffff198093161783551660015580f35b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c657220213d2070656e64696e67206f776e65726044820152fd5b5034610402576060366003190112610402576004356001600160a01b03908181168091036104ab57602435801515810361115757604435908115158203610e3357611081848654163314611287565b156111335781159081159161112b575b50156110e7578083549283167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08580a373ffffffffffffffffffffffffffffffffffffffff198092161782556001541660015580f35b606460405162461bcd60e51b815260206004820152601560248201527f4f776e61626c653a207a65726f206164647265737300000000000000000000006044820152fd5b905038611091565b50905073ffffffffffffffffffffffffffffffffffffffff19600154161760015580f35b8380fd5b90503461088c578160031936011261088c576040810181811067ffffffffffffffff8211176111ce576111ca9250604052601981527f5553444f202d3e20574554482028556e6973776170205632290000000000000060208201526040519182916020835260208301906111e2565b0390f35b602483634e487b7160e01b81526041600452fd5b919082519283825260005b84811061120e575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016111ed565b60806003198201126102a0576004356001600160a01b03811681036102a05791602435916044359160643567ffffffffffffffff928382116102a057806023830112156102a05781600401359384116102a057602484830101116102a0576024019190565b1561128e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6060810190811067ffffffffffffffff8211176112ee57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff8211176112ee57604052565b51906001600160a01b03821682036102a057565b1561134157565b606460405162461bcd60e51b815260206004820152600f60248201527f746f6b656e206e6f742076616c696400000000000000000000000000000000006044820152fd5b908160209103126102a057516001600160a01b03811681036102a05790565b91908260809103126102a057815160058110156102a057916113c860208201611326565b9160606113d760408401611326565b92015190565b8051156113ea5760200190565b634e487b7160e01b600052603260045260246000fd5b8051600110156113ea5760400190565b6020908160408183019282815285518094520193019160005b828110611437575050505090565b83516001600160a01b031685529381019392810192600101611429565b61147093926060928252602082015281604082015201906111e2565b90565b1561147a57565b606460405162461bcd60e51b815260206004820152600c60248201527f5553444f206e6f742073657400000000000000000000000000000000000000006044820152fdfea26469706673582212207dcdf0239d96e6f0e695c17ee6bb1b5bffaf23dd87c4cbc00e61f897e492c00564736f6c63430008120033";

type UniUsdoToWethBidderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniUsdoToWethBidderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniUsdoToWethBidder__factory extends ContractFactory {
  constructor(...args: UniUsdoToWethBidderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uniV2Swapper_: PromiseOrValue<string>,
    _wethAssetId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniUsdoToWethBidder> {
    return super.deploy(
      uniV2Swapper_,
      _wethAssetId,
      overrides || {}
    ) as Promise<UniUsdoToWethBidder>;
  }
  override getDeployTransaction(
    uniV2Swapper_: PromiseOrValue<string>,
    _wethAssetId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      uniV2Swapper_,
      _wethAssetId,
      overrides || {}
    );
  }
  override attach(address: string): UniUsdoToWethBidder {
    return super.attach(address) as UniUsdoToWethBidder;
  }
  override connect(signer: Signer): UniUsdoToWethBidder__factory {
    return super.connect(signer) as UniUsdoToWethBidder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniUsdoToWethBidderInterface {
    return new utils.Interface(_abi) as UniUsdoToWethBidderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniUsdoToWethBidder {
    return new Contract(address, _abi, signerOrProvider) as UniUsdoToWethBidder;
  }
}
