/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  FlashBorrowerMock,
  FlashBorrowerMockInterface,
} from "../../../../../contracts/usd0/mocks/FlashBorrowerMock.sol/FlashBorrowerMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC3156FlashLender",
        name: "_lender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approveRepayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "flashBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461007457601f61059238819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161050290816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040818152600436101561001457600080fd5b600091823560e01c90816323e30c8b1461013857508063736ddf3b1461010e5763b53e48851461004357600080fd5b3461010a578060031936011261010a5761005b610262565b9060206024359261006c84826102f0565b60a46001600160a01b03918683815416865197889586947f5cffe9de0000000000000000000000000000000000000000000000000000000086523060048701521660248501526044840152608060648401528160848401525af190811561010157506100d6575080f35b6100f69060203d81116100fa575b6100ee818361027d565b8101906102b5565b5080f35b503d6100e4565b513d84823e3d90fd5b5080fd5b503461010a5736600319011261013557610132610129610262565b602435906102f0565b80f35b80fd5b905082346101355760a036600319011261013557610154610262565b916001600160a01b0391602435838116036101355760843567ffffffffffffffff80821161025e573660238301121561025e57816004013590811161025e573691016024011161013557548216330361021c5750309116036101d957602090517f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd98152f35b6064905162461bcd60e51b815260206004820152602060248201527f466c617368426f72726f7765723a206e6f742074686520696e69746961746f726044820152fd5b8062461bcd60e51b6064925260206004820152601860248201527f466c617368426f72726f7765723a20756e7472757374656400000000000000006044820152fd5b8280fd5b600435906001600160a01b038216820361027857565b600080fd5b90601f8019910116810190811067ffffffffffffffff82111761029f57604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610278575180151581036102785790565b919082018092116102da57565b634e487b7160e01b600052601160045260246000fd5b91906001600160a01b038084169060009081541660409283517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201528260248201526020958682604481865afa91821561048d578592610497575b5085517fd9d98ce40000000000000000000000000000000000000000000000000000000081526001600160a01b039990991660048a015260248901819052969795968787604481875afa96871561048d57908894939291869861044b575b50906103c1610413986103c7936102cd565b906102cd565b918486518098819582947f095ea7b300000000000000000000000000000000000000000000000000000000845260048401602090939291936001600160a01b0360408201951681520152565b03925af1918215610441575050610428575050565b8161043e92903d106100fa576100ee818361027d565b50565b51903d90823e3d90fd5b80929496979850859193953d8311610486575b610468818361027d565b8101031261048257519594938793909290916103c16103af565b8580fd5b503d61045e565b86513d87823e3d90fd5b9891508689813d83116104c5575b6104af818361027d565b810103126104c1579751909786610351565b8480fd5b503d6104a556fea26469706673582212201bff00f06a2e53deed535b1388d497c4661272a93ab2c006777953aa48fe788c64736f6c63430008120033";

type FlashBorrowerMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlashBorrowerMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlashBorrowerMock__factory extends ContractFactory {
  constructor(...args: FlashBorrowerMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _lender: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlashBorrowerMock> {
    return super.deploy(_lender, overrides || {}) as Promise<FlashBorrowerMock>;
  }
  override getDeployTransaction(
    _lender: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_lender, overrides || {});
  }
  override attach(address: string): FlashBorrowerMock {
    return super.attach(address) as FlashBorrowerMock;
  }
  override connect(signer: Signer): FlashBorrowerMock__factory {
    return super.connect(signer) as FlashBorrowerMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlashBorrowerMockInterface {
    return new utils.Interface(_abi) as FlashBorrowerMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlashBorrowerMock {
    return new Contract(address, _abi, signerOrProvider) as FlashBorrowerMock;
  }
}
