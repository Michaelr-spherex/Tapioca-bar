/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  LZEndpointMock,
  LZEndpointMockInterface,
} from "../../../../contracts/usd0/mocks/LZEndpointMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainId",
        type: "uint16",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "srcChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
    ],
    name: "PayloadCleared",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "srcChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "reason",
        type: "bytes",
      },
    ],
    name: "PayloadStored",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "chainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "srcAddress",
        type: "bytes",
      },
    ],
    name: "UaForceResumeReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "ValueTransferFailed",
    type: "event",
  },
  {
    inputs: [],
    name: "blockNextMsg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultAdapterParams",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_dstChainId",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_userApplication",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "_payInZRO",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "estimateFees",
    outputs: [
      {
        internalType: "uint256",
        name: "nativeFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "zroFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "forceResumeReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getConfig",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "getInboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_srcAddress",
        type: "bytes",
      },
    ],
    name: "getLengthOfQueue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainID",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "_srcAddress",
        type: "address",
      },
    ],
    name: "getOutboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReceiveLibraryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getReceiveVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getSendLibraryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getSendVersion",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
    ],
    name: "hasStoredPayload",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "inboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isReceivingPayload",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isSendingPayload",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lzEndpointLookup",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mockChainId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "msgsToDeliver",
    outputs: [
      {
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "payload",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextMsgBlocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "outboundNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "zroFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nativeBP",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "_dstAddress",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_nonce",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "_gasLimit",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "receivePayload",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "relayerFeeConfig",
    outputs: [
      {
        internalType: "uint128",
        name: "dstPriceRatio",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "dstGasPriceInWei",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "dstNativeAmtCap",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "baseGas",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "gasPerByte",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_srcChainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
    ],
    name: "retryPayload",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_chainId",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "_path",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_payload",
        type: "bytes",
      },
      {
        internalType: "address payable",
        name: "_refundAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zroPaymentAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "setConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_adapterParams",
        type: "bytes",
      },
    ],
    name: "setDefaultAdapterParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "lzEndpointAddr",
        type: "address",
      },
    ],
    name: "setDestLzEndpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_oracleFee",
        type: "uint256",
      },
    ],
    name: "setOracleFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_zroFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_nativeBP",
        type: "uint256",
      },
    ],
    name: "setProtocolFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "setReceiveVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "_dstPriceRatio",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_dstGasPriceInWei",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "_dstNativeAmtCap",
        type: "uint128",
      },
      {
        internalType: "uint64",
        name: "_baseGas",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "_gasPerByte",
        type: "uint64",
      },
    ],
    name: "setRelayerPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    name: "setSendVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "storedPayload",
    outputs: [
      {
        internalType: "uint64",
        name: "payloadLength",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "dstAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "payloadHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620002b557601f1962002bab38819003601f810183168401936001600160401b03929091828610848711176200029f5780839260409788528339602092839181010312620002b557519061ffff8216809203620002b55761ffff199161010183600c541617600c55600192835416178255845160a08101818110858211176200029f5786526402540be40080825282820152678ac7230489e8000086820152606460608201526080018290527402540be400000000000000000000000002540be4006002557801000000000000006400000000000000008ac7230489e80000600355845180860190848211818310176200029f5782918752670de0b6b3a7640000908181526103e89283910152600455600555662386f26fc100006006558451600160f01b8282015262030d4060228201526022815260608101818110858211176200029f57865280519384116200029f576007548381811c9116801562000294575b838210146200027e57601f81116200022f575b5081601f8511600114620001c4575083945090839291600094620001b8575b50501b916000199060031b1c1916176007555b516128f09081620002bb8239f35b01519250388062000197565b929484908116600760005284600020946000905b88838310620002145750505010620001fa575b505050811b01600755620001aa565b015160001960f88460031b161c19169055388080620001eb565b858701518855909601959485019487935090810190620001d8565b600760005282600020601f860160051c81019184871062000273575b601f0160051c019084905b8281106200026657505062000178565b6000815501849062000256565b90915081906200024b565b634e487b7160e01b600052602260045260246000fd5b90607f169062000165565b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806307d3277f1461024e57806307e0db1714610244578063096568f6146101d15780630eaf6ea61461024957806310ddb1371461024457806312a9ee6b1461023f578063240de2771461023a578063272bd384146102355780632c365e25146102305780633408e470146101cc5780633e0dd83e1461022b57806340a7bb101461022657806342d65a8d1461022157806371ba2fd61461020857806376a386dc1461021c5780637a145748146101fe5780637f6df8e614610217578063907c5e7e146102125780639924d33b1461020d5780639c729da114610208578063aaff5f1614610203578063b2086499146101fe578063b6d9ef60146101f9578063c08f15a1146101f4578063c2fa4813146101ef578063c5803100146101ea578063c81b383a146101e5578063ca066b35146101e0578063cbed8b9c146101db578063d23104f1146101d6578063da1a7c9a146101d1578063db14f305146101cc578063e97a448a146101c7578063f5ecbdbc146101c2578063f9cd3ceb146101bd578063fbba623b146101b85763fdc07c70146101b357600080fd5b611a96565b611983565b611965565b611910565b6118ec565b61097d565b6102de565b6118c8565b611885565b61185e565b61181e565b6114a4565b610fc0565b610f55565b610f3c565b610c3a565b610d8a565b610b67565b610d36565b610cdf565b610ca0565b610bc8565b610a4a565b6109c5565b61099f565b61086d565b6107f9565b6107c4565b610713565b6102b2565b610372565b610263565b600091031261025e57565b600080fd5b3461025e57600036600319011261025e5760045460055460408051928352602083019190915290f35b0390f35b6004359061ffff8216820361025e57565b6024359061ffff8216820361025e57565b3461025e57602036600319011261025e576102cb610290565b005b6001600160a01b0381160361025e57565b3461025e57602036600319011261025e576102fa6004356102cd565b602060405160018152f35b9181601f8401121561025e5782359167ffffffffffffffff831161025e576020838186019501011161025e57565b90604060031983011261025e5760043561ffff8116810361025e57916024359067ffffffffffffffff821161025e5761036e91600401610305565b9091565b3461025e576020600161ffff8261038836610333565b93909116600052600a8252604060002083604051948593843782019081520301902001541515604051908152f35b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff81116103e057604052565b6103b6565b6020810190811067ffffffffffffffff8211176103e057604052565b90601f8019910116810190811067ffffffffffffffff8211176103e057604052565b604051906060820182811067ffffffffffffffff8211176103e057604052565b67ffffffffffffffff81116103e057601f01601f191660200190565b92919261046b82610443565b916104796040519384610401565b82948184528183011161025e578281602093846000960137010152565b9080601f8301121561025e578160206104b19335910161045f565b90565b60005b8381106104c75750506000910152565b81810151838201526020016104b7565b634e487b7160e01b600052603260045260246000fd5b80541561050257600052602060002090600090565b6104d7565b80548210156105025760005260206000209060011b0190600090565b90600182811c92168015610553575b602083101461053d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610532565b604051906000826007549161057183610523565b808352926001908181169081156105f9575060011461059a575b5061059892500383610401565b565b6007600090815291507fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b8483106105de575061059893505081016020013861058b565b81935090816020925483858a010152019101909185926105c5565b90506020925061059894915060ff191682840152151560051b8201013861058b565b906040519182600082549261062f84610523565b90818452600194858116908160001461069c5750600114610659575b505061059892500383610401565b9093915060005260209081600020936000915b8183106106845750506105989350820101388061064b565b8554888401850152948501948794509183019161066c565b91505061059894506020925060ff191682840152151560051b820101388061064b565b906020916106d8815180928185528580860191016104b4565b601f01601f1916010190565b67ffffffffffffffff6104b194936001600160a01b0360609416835216602082015281604082015201906106bf565b3461025e57606036600319011261025e5761072c610290565b67ffffffffffffffff60243581811161025e576020610752610779923690600401610496565b61ffff6044359516600052600b8252604060002082604051948386809551938492016104b4565b82019081520301902091825481101561025e576107a161028c916001600160a01b0394610507565b506107b060018254920161061b565b906040519485948260a01c169116846106e4565b3461025e57604036600319011261025e57600480359055602435600555005b634e487b7160e01b600052600060045260246000fd5b3461025e57600036600319011261025e5761028c61081561055d565b6040519182916020835260208301906106bf565b604435906001600160801b038216820361025e57565b6064359067ffffffffffffffff8216820361025e57565b6084359067ffffffffffffffff8216820361025e57565b3461025e5760a036600319011261025e576004356001600160801b0380821680920361025e5760243590808216820361025e576102cb927fffffffffffffffff0000000000000000000000000000000000000000000000006108cd610829565b926108d661083f565b927fffffffffffffffffffffffffffffffff00000000000000000000000000000000610900610856565b9660801b161760025577ffffffffffffffff000000000000000000000000000000006003549360801b1693169116171760035577ffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffffffff0000000000000000000000000000000000000000000000006003549260c01b16911617600355565b3461025e57600036600319011261025e57602061ffff60015416604051908152f35b3461025e57600036600319011261025e57602060ff60015460101c166040519015158152f35b3461025e5760a036600319011261025e576109de610290565b506109ea6024356102cd565b67ffffffffffffffff60443581811161025e57610a0b903690600401610496565b606435801515810361025e5760843592831161025e57610a32610a38933690600401610496565b9161225f565b60408051928352602083019190915290f35b3461025e57610a5836610333565b9061ffff8316600052600a6020526040600020602060405180928585833785820190815203019020926001840193610a9285541515612398565b6001600160a01b03815460401c163303610b2357805467ffffffffffffffff191681556102cb94600091610ae9905b7fffffffff0000000000000000000000000000000000000000ffffffffffffffff8154169055565b557f23d2684f396e92a6e2ff2d16f98e6fea00d50cb27a64b531bc0748f730211f9860405180610b1b8686868461246f565b0390a16125be565b606460405162461bcd60e51b815260206004820152601d60248201527f4c617965725a65726f4d6f636b3a20696e76616c69642063616c6c65720000006044820152fd5b3461025e57602036600319011261025e57610b836004356102cd565b6020604051308152f35b90604060031983011261025e5760043561ffff8116810361025e57916024359067ffffffffffffffff821161025e576104b191600401610496565b3461025e576060610c01602061ffff610be036610b8d565b9116600052600a8252604060002082604051948386809551938492016104b4565b820190815203019020600181549101546001600160a01b036040519267ffffffffffffffff8116845260401c1660208301526040820152f35b3461025e57604036600319011261025e57602067ffffffffffffffff610c96610c61610290565b61ffff60243591610c71836102cd565b16600052600984526040600020906001600160a01b0316600052602052604060002090565b5416604051908152f35b3461025e57602061ffff81610cb436610333565b93909116600052600b8252604060002083604051948593843782019081520301902054604051908152f35b3461025e57600036600319011261025e5760a0600254600354604051916001600160801b0390818116845260801c60208401528116604083015267ffffffffffffffff8160801c16606083015260c01c6080820152f35b3461025e57602067ffffffffffffffff610d778261ffff610d5636610b8d565b911660005260088252604060002082604051948386809551938492016104b4565b8201908152030190205416604051908152f35b3461025e57606036600319011261025e57610da3610290565b67ffffffffffffffff9060243582811161025e57610dc5903690600401610305565b9160443584811161025e57610dde903690600401610305565b610e03610dfc8496939661ffff16600052600a602052604060002090565b8386611d70565b90610e516001600160a01b036001840198610e388a54610e24811515612398565b865492831686149081610f21575b506123e3565b845467ffffffffffffffff1916855560401c1692610ac1565b600080975586610e8a610e7c610e758761ffff166000526008602052604060002090565b8689611d70565b5467ffffffffffffffff1690565b91833b15610f1d57610eb4976040519889928392621d356760e01b845286898c8c60048801611df5565b038183865af1928315610f18577f612434f39581c8e7d99746c9c20c6eb0ce8c0eb99f007c5719d620841370957d96610ef994610eff575b506040519586958661242e565b0390a180f35b80610f0c610f12926103cc565b80610253565b38610eec565b611d64565b5080fd5b9050610f2e36878d61045f565b602081519101201438610e32565b3461025e57602036600319011261025e57600435600655005b3461025e57604036600319011261025e576102cb600435610f75816102cd565b6001600160a01b0360243591610f8a836102cd565b1660005260006020526040600020906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b3461025e5760c036600319011261025e57610fd9610290565b67ffffffffffffffff60243581811161025e57610ffa903690600401610305565b9190926044359261100a846102cd565b61101261083f565b9460a43584811161025e5761102b903690600401610305565b929093600c54956001968760ff8260081c160361143b576102009061ff00191617600c558661107261106b8461ffff16600052600a602052604060002090565b8587611d70565b6110dd836110986110918761ffff166000526008602052604060002090565b888a611d70565b6110d36110b56110b0835467ffffffffffffffff1690565b611c48565b825467ffffffffffffffff191667ffffffffffffffff821617909255565b16848d1614611d89565b0154156111e4575061114394939261113c9261110a6111109361ffff16600052600b602052604060002090565b91611d70565b9661112b61111c610423565b6001600160a01b039098168852565b67ffffffffffffffff166020870152565b369161045f565b60408301528254156111d5576111598284612091565b6000815b61118a575b5050611170611176926104ed565b90611f49565b6102cb61010061ff0019600c541617600c55565b6111948454611c66565b8110156111d057806111c56111ac6111ca9387610507565b506111bf6111b9846120c8565b88610507565b906121d1565b6120b9565b8161115d565b611162565b506111df91612091565b611176565b90956111fb909892959397985460ff9060101c1690565b1561132857907f0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db976112ff6113149695949361123836878761045f565b6020815191012061125d61124a610423565b928816839067ffffffffffffffff169052565b6001600160a01b0384166020830152604082015261129361128c8a61ffff16600052600a602052604060002090565b888c611d70565b81518154602084015167ffffffffffffffff9092167fffffffff0000000000000000000000000000000000000000000000000000000090911617604091821b7bffffffffffffffffffffffffffffffffffffffff00000000000000001617825590910151600190910155565b611307611c82565b9460405198899889611e36565b0390a16111df62ff00001960015416600155565b9291906001600160a01b038816803b1561025e5760008683928a838b6113658a8a604051998a9889978896621d356760e01b885260048801611df5565b0392608435f19081611428575b5061141b577f0f9e4d95b62f08222d612b5ab92039cd8fbbbea550a95e8df9f927436bbdf5db976113149561140f6113a8611c95565b966113b436888861045f565b602081519101206113d96113c6610423565b928916839067ffffffffffffffff169052565b6001600160a01b038516602083015260408201526112936114088b61ffff16600052600a602052604060002090565b848d611d70565b60405198899889611e36565b5050505050505050611176565b80610f0c611435926103cc565b38611372565b608460405162461bcd60e51b8152602060048201526024808201527f4c617965725a65726f4d6f636b3a206e6f2072656365697665207265656e747260448201527f616e6379000000000000000000000000000000000000000000000000000000006064820152fd5b60c036600319011261025e576114b8610290565b67ffffffffffffffff60243581811161025e576114d9903690600401610496565b60443582811161025e576114f1903690600401610305565b60649491943593611501856102cd565b6084359061150e826102cd565b60a43590811161025e57611526903690600401610496565b93600c54600160ff8216036117b4578791849160ff1916600217600c55805160281461155190611adf565b60140151956001600160a01b0380988192826115808b6001600160a01b03166000526000602052604060002090565b546001600160a01b031616986115978a1515611b50565b815115156000146116276116176110b09f6116ae9b6116599a61164b976115d8936116459761179f576115d3919c8d945b16151592369161045f565b61225f565b50936115e685341015611bc1565b6115ff339161ffff166000526009602052604060002090565b906001600160a01b0316600052602052604060002090565b9e8f5467ffffffffffffffff1690565b8e5467ffffffffffffffff191667ffffffffffffffff821617909e55565b34611c75565b8061177a575b505050612800565b9080935098919861172f575b5050506040519261113c846116a0883360208401906028926bffffffffffffffffffffffff19809260601b16835260601b1660148201520190565b03601f198101865285610401565b60015461ffff16833b1561025e576116fb600096928793604051998a98899788967fc2fa481300000000000000000000000000000000000000000000000000000000885260048801611d10565b03925af18015610f185761171c575b6102cb600160ff19600c541617600c55565b80610f0c611729926103cc565b3861170a565b16600080808085855af1611741611c95565b501561174e575b80611665565b7f2c7a964ca3de5ec1d42d9822f9bbd0eb142a59cc9f855e9d93813b773192c7a3600080a33880611748565b600080809392611797958294165af1611791611c95565b50611cc5565b873880611651565b6115d391506117ac61055d565b9c8d946115c8565b608460405162461bcd60e51b815260206004820152602160248201527f4c617965725a65726f4d6f636b3a206e6f2073656e64207265656e7472616e6360448201527f79000000000000000000000000000000000000000000000000000000000000006064820152fd5b3461025e57602036600319011261025e57602060043561183d816102cd565b6001600160a01b038091166000526000825260406000205416604051908152f35b3461025e57600036600319011261025e576020600260ff600c5460081c1614604051908152f35b3461025e57608036600319011261025e5761189e610290565b506118a76102a1565b5060643567ffffffffffffffff811161025e576102cb903690600401610496565b3461025e57600036600319011261025e576001805462ff0000191662010000179055005b3461025e57600036600319011261025e576020600260ff600c541614604051908152f35b3461025e57608036600319011261025e57611929610290565b506119326102a1565b5061193e6044356102cd565b61028c60405161194d816103e5565b600081526040519182916020835260208301906106bf565b3461025e57600036600319011261025e576020600654604051908152f35b3461025e5760208060031936011261025e5767ffffffffffffffff60043581811161025e576119b6903690600401610496565b9182519182116103e0576119d4826119cf600754610523565b611eae565b80601f8311600114611a0f57508192600092611a04575b5050600019600383901b1c191660019190911b17600755005b0151905038806119eb565b90601f19831693611a4260076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68890565b926000905b868210611a7e5750508360019510611a65575b505050811b01600755005b015160001960f88460031b161c19169055388080611a5a565b80600185968294968601518155019501930190611a47565b3461025e57602067ffffffffffffffff61ffff82611ab336610333565b939091166000526008825260406000208360405194859384378201908152030190205416604051908152f35b15611ae657565b608460405162461bcd60e51b815260206004820152602c60248201527f4c617965725a65726f4d6f636b3a20696e636f72726563742072656d6f74652060448201527f616464726573732073697a6500000000000000000000000000000000000000006064820152fd5b15611b5757565b608460405162461bcd60e51b815260206004820152603760248201527f4c617965725a65726f4d6f636b3a2064657374696e6174696f6e204c6179657260448201527f5a65726f20456e64706f696e74206e6f7420666f756e640000000000000000006064820152fd5b15611bc857565b608460405162461bcd60e51b815260206004820152602960248201527f4c617965725a65726f4d6f636b3a206e6f7420656e6f756768206e617469766560448201527f20666f72206665657300000000000000000000000000000000000000000000006064820152fd5b634e487b7160e01b600052601160045260246000fd5b67ffffffffffffffff809116908114611c615760010190565b611c32565b600019810191908211611c6157565b91908203918211611c6157565b60405190611c8f826103e5565b60008252565b3d15611cc0573d90611ca682610443565b91611cb46040519384610401565b82523d6000602084013e565b606090565b15611ccc57565b606460405162461bcd60e51b815260206004820152601f60248201527f4c617965725a65726f4d6f636b3a206661696c656420746f20726566756e64006044820152fd5b929491936001600160a01b03611d456104b1989661ffff67ffffffffffffffff9516875260c0602088015260c08701906106bf565b96166040850152166060830152608082015260a08184039101526106bf565b6040513d6000823e3d90fd5b6020919283604051948593843782019081520301902090565b15611d9057565b606460405162461bcd60e51b815260206004820152601a60248201527f4c617965725a65726f4d6f636b3a2077726f6e67206e6f6e63650000000000006044820152fd5b908060209392818452848401376000828201840152601f01601f1916010190565b91611e22906104b19795969461ffff67ffffffffffffffff94168552608060208601526080850191611dd4565b941660408201526060818503910152611dd4565b9692946001600160a01b03611e6f6104b19a9894611e899861ffff67ffffffffffffffff96168c5260c060208d015260c08c0191611dd4565b951660408901521660608701528583036080870152611dd4565b9160a08184039101526106bf565b818110611ea2575050565b60008155600101611e97565b90601f8211611ebb575050565b6105989160076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688906020601f840160051c83019310611f05575b601f0160051c0190611e97565b9091508190611ef8565b9190601f8111611f1e57505050565b610598926000526020600020906020601f840160051c83019310611f0557601f0160051c0190611e97565b9061208c578151815473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b039190911617815560208281015182547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1660a09190911b67ffffffffffffffff60a01b1617825567ffffffffffffffff906040600180940194015180519283116103e057611fe983611fe38754610523565b87611f0f565b81601f84116001146120225750928293918392600094612017575b50501b916000199060031b1c1916179055565b015192503880612004565b919083601f19811661203988600052602060002090565b946000905b888383106120725750505010612059575b505050811b019055565b015160001960f88460031b161c1916905538808061204f565b85870151885590960195948501948793509081019061203e565b6107e3565b90815491680100000000000000008310156103e0578261117091600161059895018155610507565b6000198114611c615760010190565b9060018201809211611c6157565b91908201809211611c6157565b9190918281146121cc576120f78354610523565b67ffffffffffffffff81116103e05761211a816121148454610523565b84611f0f565b600093601f821160011461215657938192939460009261214b575b50508160011b916000199060031b1c1916179055565b015490503880612135565b61216a601f19831691600052602060002090565b9461217a84600052602060002090565b91815b8181106121b45750958360019596971061219b57505050811b019055565b015460001960f88460031b161c1916905538808061204f565b8783015484556001938401939092019160200161217d565b509050565b9061208c578181036121e1575050565b6001808361221f6001600160a01b0361059896541685906001600160a01b031673ffffffffffffffffffffffffffffffffffffffff19825416179055565b805484547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff1667ffffffffffffffff60a01b9091161784550191016120e3565b8251919260009283929190156123865761227c90915b5191612800565b50600261ffff600095949395931614612367575b50600254908160801c90600354948560801c67ffffffffffffffff16906122b6916120d6565b6122c09083612515565b6122c9916120d6565b916001600160801b031691826122de91612515565b6402540be40090049360c01c6122f39161274c565b906122fd9161274c565b6402540be4006001600160801b03909116046001600160801b031661232191612515565b61232a916120d6565b926006549161233a8386846126ae565b91156123585750612355929361235091946120d6565b6120d6565b91565b936123559350612350916120d6565b9050612380816001600160801b036003541610156126db565b38612290565b5061227c61239261055d565b91612275565b1561239f57565b606460405162461bcd60e51b815260206004820152602060248201527f4c617965725a65726f4d6f636b3a206e6f2073746f726564207061796c6f61646044820152fd5b156123ea57565b606460405162461bcd60e51b815260206004820152601e60248201527f4c617965725a65726f4d6f636b3a20696e76616c6964207061796c6f616400006044820152fd5b939594906124626001600160a01b039360609561ffff67ffffffffffffffff94168852608060208901526080880191611dd4565b9616604085015216910152565b60409061ffff6104b195931681528160208201520191611dd4565b906040516060810167ffffffffffffffff93828210858311176103e05760016124d1916040938452849681546001600160a01b038116875260a01c1660208601520161061b565b910152565b91612501906104b1969461ffff67ffffffffffffffff94168552608060208601526080850191611dd4565b9316604082015260608184039101526106bf565b81810292918115918404141715611c6157565b805480156125a857600019019061253f8282610507565b61208c5780600060019255016125558154610523565b908161256057505055565b601f821160011461257357600091505555565b6125956125a592826000526001601f6020600020920160051c82019101611e97565b6000908082528160208120915555565b55565b634e487b7160e01b600052603160045260246000fd5b92916125e26125db8561ffff16600052600b602052604060002090565b8284611d70565b925b835480156126a6576126016125fb61260792611c66565b86610507565b5061248a565b61262a61261e61261e83516001600160a01b031690565b6001600160a01b031690565b90612640602082015167ffffffffffffffff1690565b9160408092015190803b1561025e576126759389889451809681958294621d356760e01b84528b6000998a96600487016124d6565b03925af18015610f1857612693575b5061268e84612528565b6125e4565b80610f0c6126a0926103cc565b38612684565b509350505050565b909190156126be57505060045490565b8101809111611c61576126d76127109160055490612515565b0490565b156126e257565b608460405162461bcd60e51b815260206004820152602660248201527f4c617965725a65726f4d6f636b3a206473744e6174697665416d7420746f6f2060448201527f6c617267652000000000000000000000000000000000000000000000000000006064820152fd5b9190916001600160801b0380809416911602918216918203611c6157565b1561277157565b606460405162461bcd60e51b815260206004820152601260248201527f556e737570706f727465642074785479706500000000000000000000000000006044820152fd5b156127bc57565b606460405162461bcd60e51b815260206004820152600b60248201527f47617320746f6f206c6f770000000000000000000000000000000000000000006044820152fd5b6000808251602281149081156128af575b501561286b57600283015193602284015193600261ffff8716600181148015612862575b61283e9061276a565b6128498715156127b5565b146128515750565b925090506056604283015192015190565b50808214612835565b606460405162461bcd60e51b815260206004820152601560248201527f496e76616c69642061646170746572506172616d7300000000000000000000006044820152fd5b60429150113861281156fea26469706673582212202779211d8a096df2fff009bd4c25ca7cac46b8de9105b127dcece15a4f8acad064736f6c63430008120033";

type LZEndpointMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LZEndpointMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LZEndpointMock__factory extends ContractFactory {
  constructor(...args: LZEndpointMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LZEndpointMock> {
    return super.deploy(_chainId, overrides || {}) as Promise<LZEndpointMock>;
  }
  override getDeployTransaction(
    _chainId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_chainId, overrides || {});
  }
  override attach(address: string): LZEndpointMock {
    return super.attach(address) as LZEndpointMock;
  }
  override connect(signer: Signer): LZEndpointMock__factory {
    return super.connect(signer) as LZEndpointMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LZEndpointMockInterface {
    return new utils.Interface(_abi) as LZEndpointMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LZEndpointMock {
    return new Contract(address, _abi, signerOrProvider) as LZEndpointMock;
  }
}
