/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC20WithSupply,
  ERC20WithSupplyInterface,
} from "../../../../../@boringcrypto/boring-solidity/contracts/ERC20.sol/ERC20WithSupply";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c034610095574660a052602081017f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218815246604083015230606083015260608252608082019180831060018060401b0384111761007f57826040525190206080526109b1908161009b8239608051816108e8015260a051816108c10152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c918263095ea7b3146107545750816318160ddd1461073557816323b872dd146105615781633644e5151461053d57816370a08231146105075781637ecebe00146104d0578163a9059cbb146103f6578163d505accf146100d3575063dd62ed3e1461008857600080fd5b346100cf57806003193601126100cf57806020926100a46107c5565b6100ac6107e0565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b919050346103f25760e03660031901126103f2576100ef6107c5565b6100f76107e0565b9160443590606435946084359360ff85168095036103ee576001600160a01b038091169586156103ab57874210156103685786895260209560028752848a20988954996000198b146103555760018b01905585519084898301947f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c986528b89850152169a8b606084015288608084015260a083015260c082015260c0815260e081019067ffffffffffffffff9381831085841117610342578288528151902061012082018381108682111761032f57908a9392918952600283528d610100927f1901000000000000000000000000000000000000000000000000000000000000848201526102036108bc565b938b5196879651935b848110610318575050505083018b81019290925288820152038087018252607f01601f191681019283118184101761030557828b926080928a95895285815191012082528482015260a4358782015260c435606082015282805260015afa156102fb578590885116036102ba5750907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259291848752600183528087208688528352818188205551908152a380f35b83606492519162461bcd60e51b8352820152601860248201527f45524332303a20496e76616c6964205369676e617475726500000000000000006044820152fd5b82513d89823e3d90fd5b60248b604187634e487b7160e01b835252fd5b8381018301518982018301528897508f910161020c565b60248e60418a634e487b7160e01b835252fd5b60248d604189634e487b7160e01b835252fd5b60248c601188634e487b7160e01b835252fd5b606483602086519162461bcd60e51b8352820152600e60248201527f45524332303a20457870697265640000000000000000000000000000000000006044820152fd5b606483602086519162461bcd60e51b8352820152601860248201527f45524332303a204f776e65722063616e6e6f74206265203000000000000000006044820152fd5b8780fd5b8280fd5b5050346100cf57806003193601126100cf576020916001600160a01b0361041b6107c5565b836024359384158015906104c5575b610462575b505192835216907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef843392a35160018152f35b33815280875281812054610478868210156107f6565b848416908682330361048d575b50505061042f565b6104a19161049c841515610841565b61088c565b338352828952838320558152206104b98482546108af565b90558338808086610485565b50838316331461042a565b5050346100cf5760203660031901126100cf57806020926001600160a01b036104f76107c5565b1681526002845220549051908152f35b5050346100cf5760203660031901126100cf57806020926001600160a01b0361052e6107c5565b16815280845220549051908152f35b5050346100cf57816003193601126100cf5760209061055a6108bc565b9051908152f35b8284346107325760603660031901126107325761057c6107c5565b906105856107e0565b60443591826105d2575b5060208095507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9185519384526001600160a01b03809116941692a35160018152f35b6001600160a01b03958685169687835260209083825287842054906105f9878310156107f6565b851692838a0361060d575b5050505061058f565b89855260018352888520338652835288852054906000198203610689575b50509282602099828a946106688a8e9961049c7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9c9a1515610841565b928252528383205581522061067e8582546108af565b905591878080610604565b8782106106f0575092602099858a946106688a8e99966106cb827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9d9b61088c565b868652600185528986203387528552898620559650505094509550998194965061062b565b606490848b519162461bcd60e51b8352820152601860248201527f45524332303a20616c6c6f77616e636520746f6f206c6f7700000000000000006044820152fd5b80fd5b5050346100cf57816003193601126100cf576020906003549051908152f35b915050346103f257816003193601126103f25791602092826107746107c5565b92602435918291338152600188526001600160a01b038282209616958682528852205581527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b600435906001600160a01b03821682036107db57565b600080fd5b602435906001600160a01b03821682036107db57565b156107fd57565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a2062616c616e636520746f6f206c6f77000000000000000000006044820152fd5b1561084857565b606460405162461bcd60e51b815260206004820152601660248201527f45524332303a206e6f207a65726f2061646472657373000000000000000000006044820152fd5b9190820391821161089957565b634e487b7160e01b600052601160045260246000fd5b9190820180921161089957565b6000467f00000000000000000000000000000000000000000000000000000000000000000361090a57507f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101917f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a79469218835246604083015230606083015260608252608082019082821067ffffffffffffffff831117610967575060405251902090565b80634e487b7160e01b602492526041600452fdfea26469706673582212205a23decb2a1571e1f1fc526db9c4e79e699ce0199a410a36e2438da28e06387b64736f6c63430008120033";

type ERC20WithSupplyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20WithSupplyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20WithSupply__factory extends ContractFactory {
  constructor(...args: ERC20WithSupplyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20WithSupply> {
    return super.deploy(overrides || {}) as Promise<ERC20WithSupply>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20WithSupply {
    return super.attach(address) as ERC20WithSupply;
  }
  override connect(signer: Signer): ERC20WithSupply__factory {
    return super.connect(signer) as ERC20WithSupply__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20WithSupplyInterface {
    return new utils.Interface(_abi) as ERC20WithSupplyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20WithSupply {
    return new Contract(address, _abi, signerOrProvider) as ERC20WithSupply;
  }
}
