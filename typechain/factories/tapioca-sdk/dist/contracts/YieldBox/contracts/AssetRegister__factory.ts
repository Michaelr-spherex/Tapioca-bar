/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  AssetRegister,
  AssetRegisterInterface,
} from "../../../../../../tapioca-sdk/dist/contracts/YieldBox/contracts/AssetRegister";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAsset",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    name: "AssetRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "assetCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "assets",
    outputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ids",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "isApprovedForAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TokenType",
        name: "tokenType",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "contract IStrategy",
        name: "strategy",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "registerAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "assetId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803461013057608081016001600160401b0381118282101761011a57604052600481526020810190600091828152604082018381526060830191848352600554680100000000000000008110156101065760018101806005558110156100f2576005865260036020872091020193519060058210156100de5784549051610100600160a81b0360089190911b1660ff929092166001600160a81b031990911617178355516001830180546001600160a01b039092166001600160a01b031990921691909117905551600290910155506040516114d590816101368239f35b634e487b7160e01b86526021600452602486fd5b634e487b7160e01b86526032600452602486fd5b634e487b7160e01b86526041600452602486fd5b634e487b7160e01b600052604160045260246000fd5b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162fdd58e146110785750806301ffc9a714610fbf5780630e89341c14610f2b5780632d4e1d5214610ee35780632eb2c2d614610c7d5780634e1273f414610b22578063a22cb46514610a94578063a75fcb1e14610a3b578063b061db9414610482578063b8489fb514610393578063bd85b0391461036c578063cf35bdd0146102eb578063e985e9c51461029e578063eafe7a741461027b5763f242432a146100c757600080fd5b346102775760a0366003190112610277576100e06110b5565b6100e86110d0565b60443560643560843567ffffffffffffffff81116102735761010d9036908701611188565b949092610119826113c8565b886001600160a01b0380871693610131851515611363565b16808252602096600188528a832084845288528a83206101528782546113ae565b9055848352600188528a832084845288528a83206101718782546113bb565b905584828c7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628151918883528a8d8401523392a43b6101ae575080f35b61020687968b51998a97889687957ff23a6e61000000000000000000000000000000000000000000000000000000009e8f8852339088015260248701526044860152606485015260a0608485015260a48401916112f7565b03925af193841561026a5750926001600160e01b03199161023194869261023d575b50501614611318565b38808080808080808880f35b61025c9250803d10610263575b6102548183611207565b8101906112d7565b3880610228565b503d61024a565b513d86823e3d90fd5b8780fd5b8280fd5b50503461029a578160031936011261029a576020906005549051908152f35b5080fd5b50503461029a578060031936011261029a5760ff816020936102be6110b5565b6102c66110d0565b6001600160a01b03918216835282875283832091168252855220549151911615158152f35b5091903461029a57602036600319011261029a57823560055481101561027757610314906111b6565b5080549160ff8316926001600160a01b0390600282600186015416940154948351966005821015610359575060809750865260081c1660208501528301526060820152f35b8060218a634e487b7160e01b6024945252fd5b50346102775760203660031901126102775760209282913581526002845220549051908152f35b5034610277576060366003190112610277576103ad6110b5565b91602435916044358015159182820361047e5760055485101561043b57509061042b7f6aceb1b079beeabdd8c2f30cd221ca27ec52e9d0aef6bb229cc175cf15dd778b939233885260036020526001600160a01b038489209716968789526020528388208689526020528388209060ff801983541691151516179055565b815193845260208401523392a380f35b606490602085519162461bcd60e51b8352820152601d60248201527f41737365744d616e616765723a206173736574206e6f742076616c69640000006044820152fd5b8680fd5b5091903461029a57610493366110e6565b9190949260059586821015948561035957600183149788159889610a2d575b878115610a0a575b50156109c7576104c984611128565b996001600160a01b03978887169687855260209c8d52898b86209616958686528d528a85208986528d528a8520549b8c15610508575b8d8d8d51908152f35b909192939495969798809a9c5015908382156109b9575b505015610977578161077c578615918280156107d1575b1561078f5761077c5781610773575b8115610768575b5015610726578154988851926080840184811067ffffffffffffffff82111761071357908b9392918b528785528c85018981528b8601938885526801000000000000000060608801968d88521015610700576105ad8e6001810185556111b6565b9790976106ee5751928310156106db57509460028d957f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b958e9994958a967f30605d4cd099421ed12ca1ba642a1ea2659f679b5cdd0ccd032586640eeaff439c9a7fffffffffffffffffffffff00000000000000000000000000000000000000000074ffffffffffffffffffffffffffffffffffffffff0060ff89549416928360ff198616178a555160081b16921617178555600185019151167fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790555191015561069b88611128565b8982528d528181208582528d528181208a82528d5283828220558151908d82528d820152a281519081528789820152a438808080808080808080806104ff565b876021602492634e487b7160e01b835252fd5b6024898084634e487b7160e01b825252fd5b876041602492634e487b7160e01b835252fd5b602486604186634e487b7160e01b835252fd5b6064908a89519162461bcd60e51b8352820152601560248201527f5969656c64426f783a204e6f74206120746f6b656e00000000000000000000006044820152fd5b90503b15153861054c565b87159150610545565b602485602185634e487b7160e01b835252fd5b6064848e8d519162461bcd60e51b8352820152601b60248201527f5969656c64426f783a205374726174656779206d69736d6174636800000000006044820152fd5b505089517f30fa738c0000000000000000000000000000000000000000000000000000000081528c8185818a5afa90811561096d578691610934575b50848110156109215785908814806108a0575b801561053657508a517f17d70f7c0000000000000000000000000000000000000000000000000000000081528d8186818b5afa908115610896578791610869575b508a14610536565b90508d81813d831161088f575b6108808183611207565b8101031261047e575138610861565b503d610876565b8c513d89823e3d90fd5b508a517ff6b4dfb40000000000000000000000000000000000000000000000000000000081528d8186818b5afa90811561089657908d9188916108e7575b50168914610820565b8f8193508092503d831161091a575b6109008183611207565b8101031261047e57518c8116810361047e578c90386108de565b503d6108f6565b602486602186634e487b7160e01b835252fd5b90508c81813d8311610966575b61094b8183611207565b81010312610962575184811015610962573861080d565b8580fd5b503d610941565b8b513d88823e3d90fd5b6064838d8c519162461bcd60e51b8352820152601e60248201527f5969656c64426f783a204e6f20746f6b656e496420666f7220455243323000006044820152fd5b90915061092157388361051f565b60648a60208a519162461bcd60e51b8352820152601f60248201527f41737365744d616e616765723a2063616e6e6f7420616464204e6174697665006044820152fd5b9050610a1a5760038414876104ba565b60248260218c634e487b7160e01b835252fd5b5095508095600284146104b2565b50503461029a57606036600319011261029a5760ff81602093610a5c6110b5565b610a646110d0565b6001600160a01b039182168352600387528383209116825285528181206044358252855220549151911615158152f35b50503461029a578060031936011261029a57610aae6110b5565b906024359081151591828103610b1e57610af190338652856020526001600160a01b038387209516948587526020528286209060ff801983541691151516179055565b519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8480fd5b5082903461029a578260031936011261029a5767ffffffffffffffff91813583811161029a57610b559036908401611157565b91909360249081359081116102775791848692610b76899536908401611157565b949092610b8486891461123f565b610b8d8861128a565b93610b9a88519586611207565b888552610ba68961128a565b602099868b019891601f1901368a37875b818110610c00575050505050505083519485948186019282875251809352850193925b828110610be957505050500390f35b835185528695509381019392810192600101610bda565b610c118183889e9b9a9c9d9e6112c7565b356001600160a01b038116809103610c79578852600189528b8820610c378285876112c7565b35895289528b8820548a51821015610c675790610c5c918a8260051b8d0101526112a2565b9a999896979a610bb7565b8789603288634e487b7160e01b835252fd5b8880fd5b50346102775760031960a036820112610edf57610c986110b5565b610ca06110d0565b9067ffffffffffffffff9060443582811161027357610cc29036908701611157565b929094606435828111610edb57610cdc9036908901611157565b92608435908111610ed75790610cf88897949236908b01611188565b929094610d0682891461123f565b610d0f876113c8565b6001600160a01b038d8d8284169b8c93610d2a851515611363565b839b169a8b935b8d808310610e6957610d7092507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb939150845194808652850191611462565b91808303602082015280610d863394898b611462565b0390a43b610d92578b80f35b8a5198899788977fbc197c81000000000000000000000000000000000000000000000000000000009c8d8a5233908a015260248901526044880160a0905260a4880190610dde92611462565b9084878303016064880152610df292611462565b91848303016084850152610e05926112f7565b0381875a94602095f1928315610e605750610e33926001600160e01b0319918591610e42575b501614611318565b38808080808080808080808b80f35b610e5a915060203d8111610263576102548183611207565b38610e2b565b513d85823e3d90fd5b95610e7f83610ecb98610ec496989795986112c7565b3590610e8c878b8d6112c7565b3595835260016020918183528585208486528352858520610eae8982546113ae565b90558452815283832091835252209182546113bb565b90556112a2565b878d8f8c938e91610d31565b8a80fd5b8980fd5b8380fd5b50503461029a5780602092610f02610efa366110e6565b939092611128565b6001600160a01b0380921685528752848420911683528552828220908252845220549051908152f35b50346102775760209283600319360112610fbc578251918483019083821067ffffffffffffffff831117610fa9575083949291945283815282519382859384528251928382860152825b848110610f9357505050828201840152601f01601f19168101030190f35b8181018301518882018801528795508201610f75565b826041602492634e487b7160e01b835252fd5b80fd5b50346102775760203660031901126102775735906001600160e01b0319821680920361027757602092507f01ffc9a700000000000000000000000000000000000000000000000000000000821491821561104e575b8215611024575b50519015158152f35b7f0e89341c000000000000000000000000000000000000000000000000000000001491503861101b565b7fd9b67a260000000000000000000000000000000000000000000000000000000081149250611014565b849084346102775780600319360112610277576020926001600160a01b0361109e6110b5565b168152600184528181206024358252845220548152f35b600435906001600160a01b03821682036110cb57565b600080fd5b602435906001600160a01b03821682036110cb57565b60809060031901126110cb5760043560058110156110cb57906001600160a01b039060243582811681036110cb579160443590811681036110cb579060643590565b6005811015611141576000526004602052604060002090565b634e487b7160e01b600052602160045260246000fd5b9181601f840112156110cb5782359167ffffffffffffffff83116110cb576020808501948460051b0101116110cb57565b9181601f840112156110cb5782359167ffffffffffffffff83116110cb57602083818601950101116110cb57565b6005548110156111f1576003906005600052027f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190600090565b634e487b7160e01b600052603260045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761122957604052565b634e487b7160e01b600052604160045260246000fd5b1561124657565b606460405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d6174636800000000000000006044820152fd5b67ffffffffffffffff81116112295760051b60200190565b60001981146112b15760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156111f15760051b0190565b908160209103126110cb57516001600160e01b0319811681036110cb5790565b908060209392818452848401376000828201840152601f01601f1916010190565b1561131f57565b606460405162461bcd60e51b815260206004820152601260248201527f57726f6e672072657475726e2076616c756500000000000000000000000000006044820152fd5b1561136a57565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f2030206164647265737300000000000000000000000000000000000000006044820152fd5b919082039182116112b157565b919082018092116112b157565b6001600160a01b0316338114908115611459575b811561142f575b50156113eb57565b606460405162461bcd60e51b815260206004820152601460248201527f5472616e73666572206e6f7420616c6c6f7765640000000000000000000000006044820152fd5b90506000526000602052604060002033600052602052600160ff60406000205416151514386113e3565b600091506113dc565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116110cb5760209260051b80928483013701019056fea26469706673582212205b62f7d8d79b1efdae5d358af84409ff5d6e757e85892c723478b2dab36b182864736f6c63430008120033";

type AssetRegisterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AssetRegisterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AssetRegister__factory extends ContractFactory {
  constructor(...args: AssetRegisterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AssetRegister> {
    return super.deploy(overrides || {}) as Promise<AssetRegister>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AssetRegister {
    return super.attach(address) as AssetRegister;
  }
  override connect(signer: Signer): AssetRegister__factory {
    return super.connect(signer) as AssetRegister__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetRegisterInterface {
    return new utils.Interface(_abi) as AssetRegisterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetRegister {
    return new Contract(address, _abi, signerOrProvider) as AssetRegister;
  }
}
