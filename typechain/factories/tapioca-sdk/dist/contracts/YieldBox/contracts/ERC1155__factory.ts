/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../../tapioca-sdk/dist/contracts/YieldBox/contracts/ERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "_approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "_value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610bf1908161001c8239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c908162fdd58e146108405750806301ffc9a7146107875780630e89341c146106f35780632eb2c2d6146104915780634e1273f414610336578063a22cb465146102b1578063bd85b0391461028a578063e985e9c5146102395763f242432a1461008557600080fd5b346102355760a03660031901126102355761009e61087d565b6100a6610898565b60443560643560843567ffffffffffffffff8111610231576100cb90369087016108df565b9490926100d782610ae4565b886001600160a01b03808716936100ef851515610a7f565b16808252602096600188528a832084845288528a8320610110878254610aca565b9055848352600188528a832084845288528a832061012f878254610ad7565b905584828c7fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628151918883528a8d8401523392a43b61016c575080f35b6101c487968b51998a97889687957ff23a6e61000000000000000000000000000000000000000000000000000000009e8f8852339088015260248701526044860152606485015260a0608485015260a4840191610a13565b03925af19384156102285750926001600160e01b0319916101ef9486926101fb575b50501614610a34565b38808080808080808880f35b61021a9250803d10610221575b6102128183610958565b8101906109f3565b38806101e6565b503d610208565b513d86823e3d90fd5b8780fd5b8280fd5b50503461028657806003193601126102865760ff8160209361025961087d565b610261610898565b6001600160a01b03918216835282875283832091168252855220549151911615158152f35b5080fd5b50346102355760203660031901126102355760209282913581526002845220549051908152f35b5050346102865780600319360112610286576102cb61087d565b906024359081151580920361033257338452836020526001600160a01b0381852093169283855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b8380fd5b5082903461028657826003193601126102865767ffffffffffffffff9181358381116102865761036990369084016108ae565b9190936024908135908111610235579184869261038a8995369084016108ae565b94909261039886891461090d565b6103a188610990565b936103ae88519586610958565b8885526103ba89610990565b602099868b019891601f1901368a37875b818110610414575050505050505083519485948186019282875251809352850193925b8281106103fd57505050500390f35b8351855286955093810193928101926001016103ee565b6104258183889e9b9a9c9d9e6109cd565b356001600160a01b03811680910361048d578852600189528b882061044b8285876109cd565b35895289528b8820548a5182101561047b5790610470918a8260051b8d0101526109a8565b9a999896979a6103cb565b8789603288634e487b7160e01b835252fd5b8880fd5b50346102355760031960a036820112610332576104ac61087d565b6104b4610898565b9067ffffffffffffffff90604435828111610231576104d690369087016108ae565b9290946064358281116106ef576104f090369089016108ae565b926084359081116106eb579061050c8897949236908b016108df565b92909461051a82891461090d565b61052387610ae4565b6001600160a01b038d8d8284169b8c9361053e851515610a7f565b839b169a8b935b8d80831061067d5761058492507f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb939150845194808652850191610b7e565b9180830360208201528061059a3394898b610b7e565b0390a43b6105a6578b80f35b8a5198899788977fbc197c81000000000000000000000000000000000000000000000000000000009c8d8a5233908a015260248901526044880160a0905260a48801906105f292610b7e565b908487830301606488015261060692610b7e565b9184830301608485015261061992610a13565b0381875a94602095f19283156106745750610647926001600160e01b0319918591610656575b501614610a34565b38808080808080808080808b80f35b61066e915060203d8111610221576102128183610958565b3861063f565b513d85823e3d90fd5b95610693836106df986106d896989795986109cd565b35906106a0878b8d6109cd565b35958352600160209181835285852084865283528585206106c2898254610aca565b9055845281528383209183525220918254610ad7565b90556109a8565b878d8f8c938e91610545565b8a80fd5b8980fd5b50346102355760209283600319360112610784578251918483019083821067ffffffffffffffff831117610771575083949291945283815282519382859384528251928382860152825b84811061075b57505050828201840152601f01601f19168101030190f35b818101830151888201880152879550820161073d565b826041602492634e487b7160e01b835252fd5b80fd5b50346102355760203660031901126102355735906001600160e01b0319821680920361023557602092507f01ffc9a7000000000000000000000000000000000000000000000000000000008214918215610816575b82156107ec575b50519015158152f35b7f0e89341c00000000000000000000000000000000000000000000000000000000149150386107e3565b7fd9b67a2600000000000000000000000000000000000000000000000000000000811492506107dc565b849084346102355780600319360112610235576020926001600160a01b0361086661087d565b168152600184528181206024358252845220548152f35b600435906001600160a01b038216820361089357565b600080fd5b602435906001600160a01b038216820361089357565b9181601f840112156108935782359167ffffffffffffffff8311610893576020808501948460051b01011161089357565b9181601f840112156108935782359167ffffffffffffffff8311610893576020838186019501011161089357565b1561091457565b606460405162461bcd60e51b815260206004820152601860248201527f455243313135353a204c656e677468206d69736d6174636800000000000000006044820152fd5b90601f8019910116810190811067ffffffffffffffff82111761097a57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161097a5760051b60200190565b60001981146109b75760010190565b634e487b7160e01b600052601160045260246000fd5b91908110156109dd5760051b0190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261089357516001600160e01b0319811681036108935790565b908060209392818452848401376000828201840152601f01601f1916010190565b15610a3b57565b606460405162461bcd60e51b815260206004820152601260248201527f57726f6e672072657475726e2076616c756500000000000000000000000000006044820152fd5b15610a8657565b606460405162461bcd60e51b815260206004820152600c60248201527f4e6f2030206164647265737300000000000000000000000000000000000000006044820152fd5b919082039182116109b757565b919082018092116109b757565b6001600160a01b0316338114908115610b75575b8115610b4b575b5015610b0757565b606460405162461bcd60e51b815260206004820152601460248201527f5472616e73666572206e6f7420616c6c6f7765640000000000000000000000006044820152fd5b90506000526000602052604060002033600052602052600160ff6040600020541615151438610aff565b60009150610af8565b90918281527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83116108935760209260051b80928483013701019056fea2646970667358221220ee5168a526d25ea9381c31fa29447835f8335df4f2139599e70a0b0cdb25d40364736f6c63430008120033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
