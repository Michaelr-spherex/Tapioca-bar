/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  YieldBoxURIBuilder,
  YieldBoxURIBuilderInterface,
} from "../../../../../../tapioca-sdk/dist/contracts/YieldBox/contracts/YieldBoxURIBuilder";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "nativeDecimals",
        type: "uint8",
      },
    ],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "nativeName",
        type: "string",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "nativeSymbol",
        type: "string",
      },
    ],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum TokenType",
            name: "tokenType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "contractAddress",
            type: "address",
          },
          {
            internalType: "contract IStrategy",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
        ],
        internalType: "struct Asset",
        name: "asset",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "decimals",
            type: "uint8",
          },
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
        ],
        internalType: "struct NativeToken",
        name: "nativeToken",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60808060405234610016576116d6908161001c8239f35b600080fdfe604060808152600436101561001357600080fd5b6000803560e01c9182635c6d84351461005c57505080636d7cd0371461005757806384b1017d146100525763aa1163b91461004d57600080fd5b610748565b610722565b610693565b346106005760e03660031901126106005761007636610604565b9160843567ffffffffffffffff81116106005761009790369060040161061a565b9260c4356100a481610628565b6100ac61135f565b9460036100b88461078f565b6100c18161076f565b0361053457506100cf611444565b855261013761016e6100fd6100f86100ec6100ec60208801610762565b6001600160a01b031690565b611088565b61016061010d6060870135610e7a565b6101318951958694610131602087016008906722a92198989a9a9d60c11b81520190565b906108aa565b7f2f00000000000000000000000000000000000000000000000000000000000000815260010190565b03601f1981018352826107d3565b602086015261017b611444565b848601525b6101898261078f565b6101928161076f565b1561049257506101ec6101f96101b36100f86100ec6100ec60208701610762565b6101608651938492610131602085016011907f2c22746f6b656e41646472657373223a2200000000000000000000000000000081520190565b601160f91b815260010190565b6020850151928486015195600361020f8561078f565b6102188161076f565b0361048457610225610ba1565b935b60036102328261078f565b61023b8161076f565b0361047157610248610ba1565b905b60036102636100f86100ec6100ec6100ec8d8701610762565b93519461026f8361078f565b906102798261076f565b5003610462576102c66102926060610160930135610e7a565b89517f2c22746f6b656e4964223a0000000000000000000000000000000000000000006020820152928391602b8301610131565b945b87517f7b226e616d65223a220000000000000000000000000000000000000000000000602082015298899760298901610300916108aa565b7f222c2273796d626f6c223a2200000000000000000000000000000000000000008152600c0161032f916108aa565b601160f91b8152600101610342916108aa565b61034b916108aa565b7f2c2270726f70657274696573223a7b227374726174656779223a2200000000008152601b0161037a916108aa565b7f222c22746f6b656e54797065223a2200000000000000000000000000000000008152600f016103a9916108aa565b601160f91b81526001016103bc916108aa565b6103c5916108aa565b7f7d7d00000000000000000000000000000000000000000000000000000000000081526002010391601f1992838101825261040090826107d3565b61040990611582565b81517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015292908390603d8201610442916108aa565b03908101835261045290836107d3565b5161045e81928261065c565b0390f35b5061046b610ba1565b946102c8565b61047e6060830151610e7a565b9061024a565b61048c6114d9565b93610227565b61051f6104f6916001600160a01b036104ac60a435610e7a565b9116610524576101606104bd6114a0565b610131885195869461013160208701600f907f2c22746f74616c537570706c79223a000000000000000000000000000000000081520190565b7f2c226669786564537570706c79223a00000000000000000000000000000000008152600f0190565b6101f9565b61016061052f611467565b6104bd565b60016105428497939761078f565b61054b8161076f565b036105a85750506105616100ec60208301610762565b60ff61056c82610c2e565b9161057f61057982611234565b916112d7565b906105886107f5565b9361059161140b565b855260208501528684015216606082015293610180565b6105f0856105f6926105bb989498611395565b89526105d16105ca82806113ce565b36916108c1565b60208a01526105e66105ca60208301836113ce565b828a015201611401565b60ff1690565b6060860152610180565b5080fd5b608090600319011261061557600490565b600080fd5b908160809103126106155790565b6001600160a01b0381160361061557565b60005b83811061064c5750506000910152565b818101518382015260200161063c565b6040916020825261067c8151809281602086015260208686019101610639565b601f01601f1916010190565b60ff81160361061557565b346106155760a03660031901126106155760206106c46106b236610604565b608435906106bf82610688565b611278565b60ff60405191168152f35b600319810160a08112610615576080136106155760049160843567ffffffffffffffff92838211610615578060238301121561061557818501359384116106155760248483010111610615576024019190565b346106155761045e61073c610736366106cf565b9161111a565b6040519182918261065c565b346106155761045e61073c61075c366106cf565b916108f8565b3561076c81610628565b90565b6005111561077957565b634e487b7160e01b600052602160045260246000fd5b3560058110156106155790565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176107ce57604052565b61079c565b90601f8019910116810190811067ffffffffffffffff8211176107ce57604052565b604051906080820182811067ffffffffffffffff8211176107ce57604052565b67ffffffffffffffff81116107ce57601f01601f191660200190565b6020818303126106155780519067ffffffffffffffff8211610615570181601f8201121561061557805161086481610815565b9261087260405194856107d3565b818452602082840101116106155761076c9160208085019101610639565b6040513d6000823e3d90fd5b908092918237016000815290565b906108bd60209282815194859201610639565b0190565b9291926108cd82610815565b916108db60405193846107d3565b829481845281830111610615578281602093846000960137010152565b91604092838101906001600160a01b0361091183610762565b1661092457505061076c925036916108c1565b9160016109338495939561078f565b61093c8161076f565b03610a2d57505090600061096c6100ec6109666109616100ec60206004999801610762565b610c2e565b93610762565b8351948580926306fdde0360e01b82525afa918215610a28576109d861076c93610160926109af96600092610a01575b50610131905196879560208701906108aa565b7f2028000000000000000000000000000000000000000000000000000000000000815260020190565b7f2900000000000000000000000000000000000000000000000000000000000000815260010190565b610a219061013192933d8091833e610a1981836107d3565b810190610831565b919061099c565b610890565b6003610a388461078f565b610a418161076f565b03610b28575050906101376000610aba6100ec85610aa1610a7d6060610a756100f86100ec6100ec602060049f9e01610762565b930135610e7a565b6101318951978894610131602087016008906722a92198989a9a9d60c11b81520190565b0394610ab5601f19968781018752866107d3565b610762565b8451958680926306fdde0360e01b82525afa928315610a28576109d861076c94610afd926109af97600092610b09575b50610131905197889560208701906108aa565b039081018352826107d3565b610b219061013192933d8091833e610a1981836107d3565b9190610aea565b9150926000610b3b6100ec600495610762565b8251948580926306fdde0360e01b82525afa928315610a285761076c93610160926109d892600092610b7e575b506109af6101319151978896602088019161089c565b610b996109af9161013193943d8091833e610a1981836107d3565b929150610b68565b604051906020820182811067ffffffffffffffff8211176107ce5760405260008252565b3d15610bf0573d90610bd682610815565b91610be460405193846107d3565b82523d6000602084013e565b606090565b60405190610c02826107b2565b600382527f3f3f3f00000000000000000000000000000000000000000000000000000000006020830152565b600080916040516001600160a01b0360208201916306fdde0360e01b835260048152610c59816107b2565b5192165afa610c66610bc5565b9015610c755761076c90610d35565b5061076c610bf5565b634e487b7160e01b600052603260045260246000fd5b908151811015610ca5570160200190565b610c7e565b634e487b7160e01b600052601160045260246000fd5b60ff1660ff8114610cd15760010190565b610caa565b604051906060820182811067ffffffffffffffff8211176107ce57604052602a8252604082602036910137565b90610d0d82610815565b610d1a60405191826107d3565b8281528092610d2b601f1991610815565b0190602036910137565b805160408110610d5357508060208061076c93518301019101610831565b602092908303610e6f576000805b60ff81168581109081610e36575b5015610d8357610d7e90610cc0565b610d61565b92610d9160ff809516610d03565b92825b85811687811080610dff575b15610df4579081610de9610de0610dba610def9588610c94565b517fff000000000000000000000000000000000000000000000000000000000000001690565b871a9188610c94565b53610cc0565b610d94565b505094505050905090565b507fff00000000000000000000000000000000000000000000000000000000000000610e2e610dba8387610c94565b161515610da0565b7fff000000000000000000000000000000000000000000000000000000000000009150610dba610e669187610c94565b16151538610d6f565b91505061076c610bf5565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015610fbc575b506d04ee2d6d415b85acef810000000080831015610fad575b50662386f26fc1000080831015610f9e575b506305f5e10080831015610f8f575b5061271080831015610f80575b506064821015610f70575b600a80921015610f66575b600190816021610f11828701610d03565b95860101905b610f23575b5050505090565b600019019083907f30313233343536373839616263646566000000000000000000000000000000008282061a835304918215610f6157919082610f17565b610f1c565b9160010191610f00565b9190606460029104910191610ef5565b60049193920491019138610eea565b60089193920491019138610edd565b60109193920491019138610ece565b60209193920491019138610ebc565b604093508104915038610ea3565b908160021b917f3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811603610cd157565b9060028201809211610cd157565b9060208201809211610cd157565b8015610cd1576000190190565b1561102a57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b611090610cd6565b90815115610ca557603060208301538151600190811015610ca55790607860218401536029915b8083116110ca575061076c915015611023565b90600f8116906010821015610ca5577f3031323334353637383961626364656600000000000000000000000000000000611113921a6111098587610c94565b5360041c92611016565b91906110b7565b91604092838101906001600160a01b0361113383610762565b1661114657505061076c925036916108c1565b9160016111558495939561078f565b61115e8161076f565b0361118857505090600061096c6100ec6109666111836100ec60206004999801610762565b611234565b909161119560039161078f565b61119e8161076f565b0361122257505060006111b56100ec600493610762565b8351928380926306fdde0360e01b82525afa8015610a28576109d89261076c92600092611203575b5051664552433131353560c81b60208201529283916101609190610131602785016109af565b61121b9061016092933d8091833e610a1981836107d3565b91906111dd565b90926000610b3b6100ec600495610762565b600080916040516001600160a01b0360208201917f95d89b4100000000000000000000000000000000000000000000000000000000835260048152610c59816107b2565b906112828261078f565b600581101561077957600303611299575050600090565b60016112a48361078f565b6112ad8161076f565b036112d257506001600160a01b03602061076c9201356112cc81610628565b166112d7565b905090565b600080916040516001600160a01b0360208201917f313ce5670000000000000000000000000000000000000000000000000000000083526004815261131b816107b2565b5192165afa611328610bc5565b9080611354575b1561134e57602081805181010312610615576020015161076c81610688565b50601290565b50602081511461132f565b604051906080820182811067ffffffffffffffff8211176107ce5760405260006060838181528160208201528160408201520152565b604051906113a2826107b2565b600682527f4e617469766500000000000000000000000000000000000000000000000000006020830152565b903590601e1981360301821215610615570180359067ffffffffffffffff82116106155760200191813603831361061557565b3561076c81610688565b60405190611418826107b2565b600582527f45524332300000000000000000000000000000000000000000000000000000006020830152565b60405190611451826107b2565b60078252664552433131353560c81b6020830152565b60405190611474826107b2565b600582527f66616c73650000000000000000000000000000000000000000000000000000006020830152565b604051906114ad826107b2565b600482527f74727565000000000000000000000000000000000000000000000000000000006020830152565b604051906114e6826107b2565b600c82527f2c22646563696d616c73223a00000000000000000000000000000000000000006020830152565b604051906060820182811067ffffffffffffffff8211176107ce57604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b80511561169757611591611512565b6115ad6115a86115a18451610ffa565b6003900490565b610fca565b916115bf6115ba84611008565b610d03565b92835280815182019060208501935b8282106116455750505060039051068060011461161a576002146115f0575090565b7f3d0000000000000000000000000000000000000000000000000000000000000090600019015290565b507f3d3d00000000000000000000000000000000000000000000000000000000000090600119015290565b9091936004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c16880101516002860153168501015190820153019391906115ce565b5061076c610ba156fea26469706673582212208a5c1a5b90ec2344f4e85b5e6e68a5774a1fdc93174a67cc6bd8f7513f09a07164736f6c63430008120033";

type YieldBoxURIBuilderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: YieldBoxURIBuilderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class YieldBoxURIBuilder__factory extends ContractFactory {
  constructor(...args: YieldBoxURIBuilderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<YieldBoxURIBuilder> {
    return super.deploy(overrides || {}) as Promise<YieldBoxURIBuilder>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): YieldBoxURIBuilder {
    return super.attach(address) as YieldBoxURIBuilder;
  }
  override connect(signer: Signer): YieldBoxURIBuilder__factory {
    return super.connect(signer) as YieldBoxURIBuilder__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): YieldBoxURIBuilderInterface {
    return new utils.Interface(_abi) as YieldBoxURIBuilderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): YieldBoxURIBuilder {
    return new Contract(address, _abi, signerOrProvider) as YieldBoxURIBuilder;
  }
}
