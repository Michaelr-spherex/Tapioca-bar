// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.18;

//interfaces
import "tapioca-periph/contracts/interfaces/ITapiocaOFT.sol";

import "./BaseLeverageExecutor.sol";

contract USDOsDaiLeverageExecutor is BaseLeverageExecutor {
    constructor(
        YieldBox _yb,
        ISwapper _swapper,
        ICluster _cluster
    ) BaseLeverageExecutor(_yb, _swapper, _cluster) {}

    // ********************* //
    // *** PUBLIC MEHODS *** //
    // ********************* //
    function getCollateral(
        uint256 assetId,
        uint256 collateralId,
        uint256 assetShareIn,
        address from,
        bytes calldata data
    ) external override returns (uint256 collateralAmountOut) {
        _assureSwapperValidity();

        (uint256 minAmountOut, bytes memory dexData) = abi.decode(
            data,
            (uint256, bytes)
        );

        uint256 daiAmount = _swapTokens(assetId, collateralId, assetShareIn, address(this), minAmountOut, dexData);

        //USDO > DAI > sDAi > wrap to tsDai
    }

    function getAsset(
        uint256 assetId,
        uint256 collateralId,
        uint256 collateralShareIn,
        address from,
        bytes calldata data
    ) external override returns (uint256 assetAmountOut) {
        //unwrap tsDai > withdraw sDai > Dai > USDO
    }
}
