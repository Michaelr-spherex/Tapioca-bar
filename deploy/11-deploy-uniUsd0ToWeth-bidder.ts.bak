import { HardhatRuntimeEnvironment } from 'hardhat/types';
import { DeployFunction } from 'hardhat-deploy/types';
import { verify, updateDeployments, constants } from './utils';
import _ from 'lodash';
import { TContract } from 'tapioca-sdk/dist/shared';

const func: DeployFunction = async function (hre: HardhatRuntimeEnvironment) {
    const { deployments, getNamedAccounts } = hre;
    const { deploy } = deployments;
    const { deployer } = await getNamedAccounts();
    const chainId = await hre.getChainId();
    const contracts: TContract[] = [];

    console.log(`\nDeploying UniswapUsd0ToWethBidder`);
    const multiSwapper = await deployments.get('MultiSwapper');

    const collateralId=;
    
    const args = [multiSwapper.address];
    await deploy('UniUsdoToWethBidder', {
        from: deployer,
        log: true,
        args,
    });
    await verify(hre, 'UniUsdoToWethBidder', args);
    const deployed = await deployments.get('UniUsdoToWethBidder');
    contracts.push({
        name: 'UniUsdoToWethBidder',
        address: deployed.address,
        meta: { constructorArguments: args },
    });
    console.log(
        `Done. Deployed UniUsdoToWethBidder on ${deployed.address} with args ${args}`,
    );

    await updateDeployments(contracts, chainId);
};

export default func;
func.tags = ['UniswapUsd0ToWethBidder'];
