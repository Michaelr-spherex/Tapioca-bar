{
  "address": "0x41dC15C448aB9141254EEd98F562a407E915d3b1",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "get",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDataParameter",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peek",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "peekSpot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rate_",
          "type": "uint256"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "val",
          "type": "bool"
        }
      ],
      "name": "setSuccess",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "success",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x652da376fc2e1f51e1f99ccd8fdfda1e34eab890f0bdb76062a7390fa6859280",
  "receipt": {
    "to": null,
    "from": "0x40282d3Cf4890D9806BC1853e97a59C93D813653",
    "contractAddress": "0x41dC15C448aB9141254EEd98F562a407E915d3b1",
    "transactionIndex": 0,
    "gasUsed": "282046",
    "logsBloom": "0x
    "blockHash": "0x0000392700000718d44f09c52644fbfaf92fcf0c17050c9c7ee580db8a0035de",
    "transactionHash": "0x652da376fc2e1f51e1f99ccd8fdfda1e34eab890f0bdb76062a7390fa6859280",
    "logs": [],
    "blockNumber": 11393803,
    "cumulativeGasUsed": "282046",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "b3258eb62c4af0711b9da84af2de4b8b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"get\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDataParameter\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peek\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"peekSpot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate_\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"val\",\"type\":\"bool\"}],\"name\":\"setSuccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"success\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mixologist/legacy/mocks/OracleMock.sol\":\"OracleMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":999},\"remappings\":[]},\"sources\":{\"contracts/mixologist/interfaces/IOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IOracle {\\r\\n    /// @notice Get the latest exchange rate.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function get(bytes calldata data)\\r\\n        external\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the last exchange rate without any state changes.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return success if no valid (recent) rate is available, return false else true.\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peek(bytes calldata data)\\r\\n        external\\r\\n        view\\r\\n        returns (bool success, uint256 rate);\\r\\n\\r\\n    /// @notice Check the current spot exchange rate without any state changes. For oracles like TWAP this will be different from peek().\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return rate The rate of the requested asset / pair / pool.\\r\\n    function peekSpot(bytes calldata data) external view returns (uint256 rate);\\r\\n\\r\\n    /// @notice Returns a human readable (short) name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable symbol name about this oracle.\\r\\n    function symbol(bytes calldata data) external view returns (string memory);\\r\\n\\r\\n    /// @notice Returns a human readable name about this oracle.\\r\\n    /// @param data Usually abi encoded, implementation specific data that contains information and arguments to & about the oracle.\\r\\n    /// For example:\\r\\n    /// (string memory collateralSymbol, string memory assetSymbol, uint256 division) = abi.decode(data, (string, string, uint256));\\r\\n    /// @return (string) A human readable name about this oracle.\\r\\n    function name(bytes calldata data) external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0xf2fa35d3a39c5e99a46fc5ffe6ec42922060beb4cba101aaa37f2ff7f621409d\",\"license\":\"MIT\"},\"contracts/mixologist/legacy/mocks/OracleMock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\nimport '../../interfaces/IOracle.sol';\\r\\n\\r\\ncontract OracleMock is IOracle {\\r\\n    uint256 public rate;\\r\\n    bool public success;\\r\\n\\r\\n    constructor() {\\r\\n        success = true;\\r\\n    }\\r\\n\\r\\n    function set(uint256 rate_) public {\\r\\n        // The rate can be updated.\\r\\n        rate = rate_;\\r\\n    }\\r\\n\\r\\n    function setSuccess(bool val) public {\\r\\n        success = val;\\r\\n    }\\r\\n\\r\\n    function getDataParameter() public pure returns (bytes memory) {\\r\\n        return abi.encode('0x0');\\r\\n    }\\r\\n\\r\\n    // Get the latest exchange rate\\r\\n    function get(bytes calldata) public view override returns (bool, uint256) {\\r\\n        return (success, rate);\\r\\n    }\\r\\n\\r\\n    // Check the last exchange rate without any state changes\\r\\n    function peek(bytes calldata) public view override returns (bool, uint256) {\\r\\n        return (success, rate);\\r\\n    }\\r\\n\\r\\n    function peekSpot(bytes calldata) public view override returns (uint256) {\\r\\n        return rate;\\r\\n    }\\r\\n\\r\\n    function name(bytes calldata) public pure override returns (string memory) {\\r\\n        return 'Test';\\r\\n    }\\r\\n\\r\\n    function symbol(bytes calldata)\\r\\n        public\\r\\n        pure\\r\\n        override\\r\\n        returns (string memory)\\r\\n    {\\r\\n        return 'TEST';\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4513c470e85095d550648a45acefa7bf0a282f382654b0c3aa7cde84dde3007c\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506001805460ff1916811790556103c18061002c6000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063c699c4d611610076578063d568866c1161005b578063d568866c146101a4578063d6d7d525146101eb578063eeb8a8d3146101eb57600080fd5b8063c699c4d614610147578063d39bbef01461018e57600080fd5b80632c4e722e116100a75780632c4e722e146100fa57806360fe47b1146101115780637bcc7f811461012657600080fd5b80630b93381b146100c35780632b39febd146100e5575b600080fd5b6001546100d09060ff1681565b60405190151581526020015b60405180910390f35b6100ed610220565b6040516100dc91906102c4565b61010360005481565b6040519081526020016100dc565b61012461011f3660046102de565b600055565b005b6101246101343660046102f7565b6001805460ff1916911515919091179055565b6100ed610155366004610319565b505060408051808201909152600481527f5445535400000000000000000000000000000000000000000000000000000000602082015290565b61010361019c366004610319565b505060005490565b6100ed6101b2366004610319565b505060408051808201909152600481527f5465737400000000000000000000000000000000000000000000000000000000602082015290565b6102096101f9366004610319565b505060015460005460ff90911691565b6040805192151583526020830191909152016100dc565b60606040516020016102639060208082526003908201527f3078300000000000000000000000000000000000000000000000000000000000604082015260600190565b604051602081830303815290604052905090565b6000815180845260005b8181101561029d57602081850181015186830182015201610281565b818111156102af576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102d76020830184610277565b9392505050565b6000602082840312156102f057600080fd5b5035919050565b60006020828403121561030957600080fd5b813580151581146102d757600080fd5b6000806020838503121561032c57600080fd5b823567ffffffffffffffff8082111561034457600080fd5b818501915085601f83011261035857600080fd5b81358181111561036757600080fd5b86602082850101111561037957600080fd5b6020929092019691955090935050505056fea2646970667358221220b9c564e6946fb4ca523f1cb1309877638eff5326e5b19124d0cf71ee7067596364736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063c699c4d611610076578063d568866c1161005b578063d568866c146101a4578063d6d7d525146101eb578063eeb8a8d3146101eb57600080fd5b8063c699c4d614610147578063d39bbef01461018e57600080fd5b80632c4e722e116100a75780632c4e722e146100fa57806360fe47b1146101115780637bcc7f811461012657600080fd5b80630b93381b146100c35780632b39febd146100e5575b600080fd5b6001546100d09060ff1681565b60405190151581526020015b60405180910390f35b6100ed610220565b6040516100dc91906102c4565b61010360005481565b6040519081526020016100dc565b61012461011f3660046102de565b600055565b005b6101246101343660046102f7565b6001805460ff1916911515919091179055565b6100ed610155366004610319565b505060408051808201909152600481527f5445535400000000000000000000000000000000000000000000000000000000602082015290565b61010361019c366004610319565b505060005490565b6100ed6101b2366004610319565b505060408051808201909152600481527f5465737400000000000000000000000000000000000000000000000000000000602082015290565b6102096101f9366004610319565b505060015460005460ff90911691565b6040805192151583526020830191909152016100dc565b60606040516020016102639060208082526003908201527f3078300000000000000000000000000000000000000000000000000000000000604082015260600190565b604051602081830303815290604052905090565b6000815180845260005b8181101561029d57602081850181015186830182015201610281565b818111156102af576000602083870101525b50601f01601f19169290920160200192915050565b6020815260006102d76020830184610277565b9392505050565b6000602082840312156102f057600080fd5b5035919050565b60006020828403121561030957600080fd5b813580151581146102d757600080fd5b6000806020838503121561032c57600080fd5b823567ffffffffffffffff8082111561034457600080fd5b818501915085601f83011261035857600080fd5b81358181111561036757600080fd5b86602082850101111561037957600080fd5b6020929092019691955090935050505056fea2646970667358221220b9c564e6946fb4ca523f1cb1309877638eff5326e5b19124d0cf71ee7067596364736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4411,
        "contract": "contracts/mixologist/legacy/mocks/OracleMock.sol:OracleMock",
        "label": "rate",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 4413,
        "contract": "contracts/mixologist/legacy/mocks/OracleMock.sol:OracleMock",
        "label": "success",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}