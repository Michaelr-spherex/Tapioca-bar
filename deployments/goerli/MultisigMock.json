{
  "address": "0x22c965B13293544729459154eed390c29e2E8e77",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_numConfirmationsRequired",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "confirmTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "executeTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwners",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_txIndex",
          "type": "uint256"
        }
      ],
      "name": "getTransaction",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numConfirmations",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransactionCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isConfirmed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numConfirmationsRequired",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "submitTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "transactions",
      "outputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "numConfirmations",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xd08865836b0200956868689ad2ff8891cbeba9c6bbbace8962e96bd20e4b296d",
  "receipt": {
    "to": null,
    "from": "0x40282d3Cf4890D9806BC1853e97a59C93D813653",
    "contractAddress": "0x22c965B13293544729459154eed390c29e2E8e77",
    "transactionIndex": 116,
    "gasUsed": "918838",
    "logsBloom": "0x
    "blockHash": "0xeb9f71c1654fffa2610af7ba7095a9a9573aad40306dfdc5d63080c2d48010be",
    "transactionHash": "0xd08865836b0200956868689ad2ff8891cbeba9c6bbbace8962e96bd20e4b296d",
    "logs": [],
    "blockNumber": 8725644,
    "cumulativeGasUsed": "9182930",
    "status": 1,
    "byzantium": true
  },
  "args": [
    1
  ],
  "numDeployments": 1,
  "solcInputHash": "22b4d58650cbd35bc1905c801c8da347",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_numConfirmationsRequired\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"getTransaction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransactionCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numConfirmationsRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/MultisigMock.sol\":\"MultisigMock\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/mocks/MultisigMock.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.18;\\n\\ncontract MultisigMock {\\n    address[] public owners;\\n    mapping(address => bool) public isOwner;\\n    uint256 public numConfirmationsRequired;\\n\\n    struct Transaction {\\n        address to;\\n        uint256 value;\\n        bytes data;\\n        bool executed;\\n        uint256 numConfirmations;\\n    }\\n\\n    mapping(uint256 => mapping(address => bool)) public isConfirmed;\\n\\n    Transaction[] public transactions;\\n\\n    modifier onlyOwner() {\\n        require(isOwner[msg.sender], \\\"not owner\\\");\\n        _;\\n    }\\n    modifier txExists(uint256 _txIndex) {\\n        require(_txIndex < transactions.length, \\\"tx does not exist\\\");\\n        _;\\n    }\\n\\n    modifier notExecuted(uint256 _txIndex) {\\n        require(!transactions[_txIndex].executed, \\\"tx already executed\\\");\\n        _;\\n    }\\n\\n    modifier notConfirmed(uint256 _txIndex) {\\n        require(!isConfirmed[_txIndex][msg.sender], \\\"tx already confirmed\\\");\\n        _;\\n    }\\n\\n    constructor(uint256 _numConfirmationsRequired) {\\n        isOwner[msg.sender] = true;\\n        owners.push(msg.sender);\\n\\n        numConfirmationsRequired = _numConfirmationsRequired;\\n    }\\n\\n    function addOwner(address _owner) external {\\n        isOwner[_owner] = true;\\n        owners.push(_owner);\\n    }\\n\\n    function getTransactionCount() public view returns (uint256) {\\n        return transactions.length;\\n    }\\n\\n    function getOwners() public view returns (address[] memory) {\\n        return owners;\\n    }\\n\\n    function submitTransaction(\\n        address _to,\\n        uint256 _value,\\n        bytes memory _data\\n    ) public onlyOwner {\\n        transactions.push(\\n            Transaction({\\n                to: _to,\\n                value: _value,\\n                data: _data,\\n                executed: false,\\n                numConfirmations: 0\\n            })\\n        );\\n    }\\n\\n    function confirmTransaction(\\n        uint256 _txIndex\\n    )\\n        public\\n        onlyOwner\\n        txExists(_txIndex)\\n        notExecuted(_txIndex)\\n        notConfirmed(_txIndex)\\n    {\\n        Transaction storage transaction = transactions[_txIndex];\\n        transaction.numConfirmations += 1;\\n        isConfirmed[_txIndex][msg.sender] = true;\\n    }\\n\\n    function executeTransaction(\\n        uint256 _txIndex\\n    ) public onlyOwner txExists(_txIndex) notExecuted(_txIndex) {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        require(\\n            transaction.numConfirmations >= numConfirmationsRequired,\\n            \\\"cannot execute tx\\\"\\n        );\\n\\n        transaction.executed = true;\\n\\n        (bool success, bytes memory returnData) = transaction.to.call{\\n            value: transaction.value\\n        }(transaction.data);\\n        if (!success) {\\n            _getRevertMsg(returnData);\\n        }\\n    }\\n\\n    function _getRevertMsg(bytes memory _returnData) private pure {\\n        // If the _res length is less than 68, then\\n        // the transaction failed with custom error or silently (without a revert message)\\n        if (_returnData.length < 68) revert(\\\"Reason unknown\\\");\\n\\n        assembly {\\n            // Slice the sighash.\\n            _returnData := add(_returnData, 0x04)\\n        }\\n        revert(abi.decode(_returnData, (string))); // All that remains is the revert string\\n    }\\n\\n    function getTransaction(\\n        uint256 _txIndex\\n    )\\n        public\\n        view\\n        returns (\\n            address to,\\n            uint256 value,\\n            bytes memory data,\\n            bool executed,\\n            uint256 numConfirmations\\n        )\\n    {\\n        Transaction storage transaction = transactions[_txIndex];\\n\\n        return (\\n            transaction.to,\\n            transaction.value,\\n            transaction.data,\\n            transaction.executed,\\n            transaction.numConfirmations\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x3f6a7f376cf4836d8d19a78ff6d8788215b649e1b9cf149dcf1a934c115720f9\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x6080346100cc57601f610eea38819003918201601f19168301916001600160401b038311848410176100d1578084926020946040528339810103126100cc57516000338152600160205260408120600160ff19825416179055805490680100000000000000008210156100b857600182018082558210156100a457808052602090200180546001600160a01b03191633179055600255604051610e0290816100e88239f35b634e487b7160e01b81526032600452602490fd5b634e487b7160e01b81526041600452602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8063025e7c27146100d75780632e7700f0146100d25780632f54bf6e146100cd57806333ea3dc8146100c85780637065cb48146100c357806380f59a65146100be5780639ace38c2146100b9578063a0e67e2b146100b4578063c01a8c84146100af578063c6427474146100aa578063d0549b85146100a55763ee22610b146100a057600080fd5b61082d565b61080f565b61078c565b610641565b610579565b610516565b610348565b61029f565b610245565b610184565b610150565b6100f2565b634e487b7160e01b600052603260045260246000fd5b3461014b57602036600319011261014b5760043560005481101561014b576001600160a01b03602091600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015416604051908152f35b600080fd5b3461014b57600036600319011261014b576020600454604051908152f35b600435906001600160a01b038216820361014b57565b3461014b57602036600319011261014b576001600160a01b036101a561016e565b166000526001602052602060ff604060002054166040519015158152f35b60005b8381106101d65750506000910152565b81810151838201526020016101c6565b906020916101ff815180928185528580860191016101c3565b601f01601f1916010190565b91926080936001600160a01b036102399398979698168452602084015260a0604084015260a08301906101e6565b94151560608201520152565b3461014b57602036600319011261014b576102616004356103a7565b506001600160a01b0381541661029b60018301549260ff60038201541661028f600260048401549301610470565b6040519586958661020b565b0390f35b3461014b57602036600319011261014b576001600160a01b036102c061016e565b16600090808252600160205260408220600160ff19825416179055815468010000000000000000811015610343576001810180845581101561033e577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019073ffffffffffffffffffffffffffffffffffffffff1982541617905580f35b6100dc565b61041c565b3461014b57604036600319011261014b576024356001600160a01b038116810361014b5760ff61039b602092600435600052600384526040600020906001600160a01b0316600052602052604060002090565b54166040519015158152f35b60045481101561033e576005906004600052027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b90600182811c92168015610412575b60208310146103fc57565b634e487b7160e01b600052602260045260246000fd5b91607f16916103f1565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761034357604052565b90601f8019910116810190811067ffffffffffffffff82111761034357604052565b9060405191826000825492610484846103e2565b9081845260019485811690816000146104f357506001146104b0575b50506104ae9250038361044e565b565b9093915060005260209081600020936000915b8183106104db5750506104ae935082010138806104a0565b855488840185015294850194879450918301916104c3565b9150506104ae94506020925060ff191682840152151560051b82010138806104a0565b3461014b57602036600319011261014b5760043560045481101561014b5761053d906103a7565b506001600160a01b0381541661029b60018301549261055e60028201610470565b90600460ff600383015416910154916040519586958661020b565b3461014b5760008060031936011261063e576040518091805490818352602080930180928280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390835b81811061062157505050846105da91038561044e565b60405193838594850191818652518092526040850193925b82811061060157505050500390f35b83516001600160a01b0316855286955093810193928101926001016105f2565b82546001600160a01b0316845292860192600192830192016105c4565b80fd5b3461014b57602036600319011261014b57600435600090338252600160205261067060ff60408420541661092f565b61067d6004548210610b8e565b61069760ff600361068d846103a7565b5001541615610bd9565b808252600360205260ff6106c13360408520906001600160a01b0316600052602052604060002090565b541661072c5760046106d2826103a7565b50018054906001820180921161071857558152600360205261070a3360408320906001600160a01b0316600052602052604060002090565b805460ff1916600117905580f35b602484634e487b7160e01b81526011600452fd5b606460405162461bcd60e51b815260206004820152601460248201527f747820616c726561647920636f6e6669726d65640000000000000000000000006044820152fd5b67ffffffffffffffff811161034357601f01601f191660200190565b3461014b57606036600319011261014b576107a561016e565b6044359067ffffffffffffffff821161014b573660238301121561014b578160040135906107d282610770565b916107e0604051938461044e565b808352366024828601011161014b57602081600092602461080d970183870137840101526024359061097a565b005b3461014b57600036600319011261014b576020600254604051908152f35b3461014b57602036600319011261014b57600435610881600091338352600160205261085f60ff60408520541661092f565b61086c6004548210610b8e565b61087c60ff600361068d846103a7565b6103a7565b506004810154600254116108eb5781816108a66003839401600160ff19825416179055565b60026108b982546001600160a01b031690565b916001810154906108d06040518094819301610c24565b03925af16108dc610ca7565b90156108e6575080f35b610ceb565b606460405162461bcd60e51b815260206004820152601160248201527f63616e6e6f7420657865637574652074780000000000000000000000000000006044820152fd5b1561093657565b606460405162461bcd60e51b815260206004820152600960248201527f6e6f74206f776e657200000000000000000000000000000000000000000000006044820152fd5b600091338352600193602085815261099860ff60408720541661092f565b604051956109a587610432565b6001600160a01b0380951687528187019384526040870192835260608701938685526080880195878752600454680100000000000000008110156103435780846109f292016004556103a7565b999099610b2757511673ffffffffffffffffffffffffffffffffffffffff1989541617885551818801556002870192519182519267ffffffffffffffff841161034357610a4984610a4387546103e2565b87610b3a565b81601f8511600114610aab57509280610a8595938193610a9a989660049b94610aa0575b50501b916000199060031b1c19161790555b51151590565b600385019060ff801983541691151516179055565b51910155565b015192503880610a6d565b601f98939596979819851690610ac688600052602060002090565b94905b828210610b1057505092610a859592859260049a9996610a9a999610610af7575b505050811b019055610a7f565b015160001960f88460031b161c19169055388080610aea565b808886978294978701518155019601940190610ac9565b602489634e487b7160e01b815280600452fd5b90601f8111610b4857505050565b600091825260208220906020601f850160051c83019410610b84575b601f0160051c01915b828110610b7957505050565b818155600101610b6d565b9092508290610b64565b15610b9557565b606460405162461bcd60e51b815260206004820152601160248201527f747820646f6573206e6f742065786973740000000000000000000000000000006044820152fd5b15610be057565b606460405162461bcd60e51b815260206004820152601360248201527f747820616c7265616479206578656375746564000000000000000000000000006044820152fd5b600092918154610c33816103e2565b92600191808316908115610c8c5750600114610c50575b50505050565b90919293945060005260209081600020906000915b858310610c7b5750505050019038808080610c4a565b805485840152918301918101610c65565b60ff1916845250505081151590910201915038808080610c4a565b3d15610cd2573d90610cb882610770565b91610cc6604051938461044e565b82523d6000602084013e565b606090565b906020610ce89281815201906101e6565b90565b6044815110610d885760048101518101906020816024840193031261014b5760248101519067ffffffffffffffff821161014b5701908060438301121561014b57602482015191610d3b83610770565b91610d49604051938461044e565b8383526044848301011161014b57610d8492610d6c9160446020850191016101c3565b60405191829162461bcd60e51b835260048301610cd7565b0390fd5b606460405162461bcd60e51b815260206004820152600e60248201527f526561736f6e20756e6b6e6f776e0000000000000000000000000000000000006044820152fdfea2646970667358221220601e3373ecb2638f1b5d7dcff53436f11d3360fad179a6e247ece14fc5229fbc64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436101561001257600080fd5b60003560e01c8063025e7c27146100d75780632e7700f0146100d25780632f54bf6e146100cd57806333ea3dc8146100c85780637065cb48146100c357806380f59a65146100be5780639ace38c2146100b9578063a0e67e2b146100b4578063c01a8c84146100af578063c6427474146100aa578063d0549b85146100a55763ee22610b146100a057600080fd5b61082d565b61080f565b61078c565b610641565b610579565b610516565b610348565b61029f565b610245565b610184565b610150565b6100f2565b634e487b7160e01b600052603260045260246000fd5b3461014b57602036600319011261014b5760043560005481101561014b576001600160a01b03602091600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015416604051908152f35b600080fd5b3461014b57600036600319011261014b576020600454604051908152f35b600435906001600160a01b038216820361014b57565b3461014b57602036600319011261014b576001600160a01b036101a561016e565b166000526001602052602060ff604060002054166040519015158152f35b60005b8381106101d65750506000910152565b81810151838201526020016101c6565b906020916101ff815180928185528580860191016101c3565b601f01601f1916010190565b91926080936001600160a01b036102399398979698168452602084015260a0604084015260a08301906101e6565b94151560608201520152565b3461014b57602036600319011261014b576102616004356103a7565b506001600160a01b0381541661029b60018301549260ff60038201541661028f600260048401549301610470565b6040519586958661020b565b0390f35b3461014b57602036600319011261014b576001600160a01b036102c061016e565b16600090808252600160205260408220600160ff19825416179055815468010000000000000000811015610343576001810180845581101561033e577f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563019073ffffffffffffffffffffffffffffffffffffffff1982541617905580f35b6100dc565b61041c565b3461014b57604036600319011261014b576024356001600160a01b038116810361014b5760ff61039b602092600435600052600384526040600020906001600160a01b0316600052602052604060002090565b54166040519015158152f35b60045481101561033e576005906004600052027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b90600182811c92168015610412575b60208310146103fc57565b634e487b7160e01b600052602260045260246000fd5b91607f16916103f1565b634e487b7160e01b600052604160045260246000fd5b60a0810190811067ffffffffffffffff82111761034357604052565b90601f8019910116810190811067ffffffffffffffff82111761034357604052565b9060405191826000825492610484846103e2565b9081845260019485811690816000146104f357506001146104b0575b50506104ae9250038361044e565b565b9093915060005260209081600020936000915b8183106104db5750506104ae935082010138806104a0565b855488840185015294850194879450918301916104c3565b9150506104ae94506020925060ff191682840152151560051b82010138806104a0565b3461014b57602036600319011261014b5760043560045481101561014b5761053d906103a7565b506001600160a01b0381541661029b60018301549261055e60028201610470565b90600460ff600383015416910154916040519586958661020b565b3461014b5760008060031936011261063e576040518091805490818352602080930180928280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390835b81811061062157505050846105da91038561044e565b60405193838594850191818652518092526040850193925b82811061060157505050500390f35b83516001600160a01b0316855286955093810193928101926001016105f2565b82546001600160a01b0316845292860192600192830192016105c4565b80fd5b3461014b57602036600319011261014b57600435600090338252600160205261067060ff60408420541661092f565b61067d6004548210610b8e565b61069760ff600361068d846103a7565b5001541615610bd9565b808252600360205260ff6106c13360408520906001600160a01b0316600052602052604060002090565b541661072c5760046106d2826103a7565b50018054906001820180921161071857558152600360205261070a3360408320906001600160a01b0316600052602052604060002090565b805460ff1916600117905580f35b602484634e487b7160e01b81526011600452fd5b606460405162461bcd60e51b815260206004820152601460248201527f747820616c726561647920636f6e6669726d65640000000000000000000000006044820152fd5b67ffffffffffffffff811161034357601f01601f191660200190565b3461014b57606036600319011261014b576107a561016e565b6044359067ffffffffffffffff821161014b573660238301121561014b578160040135906107d282610770565b916107e0604051938461044e565b808352366024828601011161014b57602081600092602461080d970183870137840101526024359061097a565b005b3461014b57600036600319011261014b576020600254604051908152f35b3461014b57602036600319011261014b57600435610881600091338352600160205261085f60ff60408520541661092f565b61086c6004548210610b8e565b61087c60ff600361068d846103a7565b6103a7565b506004810154600254116108eb5781816108a66003839401600160ff19825416179055565b60026108b982546001600160a01b031690565b916001810154906108d06040518094819301610c24565b03925af16108dc610ca7565b90156108e6575080f35b610ceb565b606460405162461bcd60e51b815260206004820152601160248201527f63616e6e6f7420657865637574652074780000000000000000000000000000006044820152fd5b1561093657565b606460405162461bcd60e51b815260206004820152600960248201527f6e6f74206f776e657200000000000000000000000000000000000000000000006044820152fd5b600091338352600193602085815261099860ff60408720541661092f565b604051956109a587610432565b6001600160a01b0380951687528187019384526040870192835260608701938685526080880195878752600454680100000000000000008110156103435780846109f292016004556103a7565b999099610b2757511673ffffffffffffffffffffffffffffffffffffffff1989541617885551818801556002870192519182519267ffffffffffffffff841161034357610a4984610a4387546103e2565b87610b3a565b81601f8511600114610aab57509280610a8595938193610a9a989660049b94610aa0575b50501b916000199060031b1c19161790555b51151590565b600385019060ff801983541691151516179055565b51910155565b015192503880610a6d565b601f98939596979819851690610ac688600052602060002090565b94905b828210610b1057505092610a859592859260049a9996610a9a999610610af7575b505050811b019055610a7f565b015160001960f88460031b161c19169055388080610aea565b808886978294978701518155019601940190610ac9565b602489634e487b7160e01b815280600452fd5b90601f8111610b4857505050565b600091825260208220906020601f850160051c83019410610b84575b601f0160051c01915b828110610b7957505050565b818155600101610b6d565b9092508290610b64565b15610b9557565b606460405162461bcd60e51b815260206004820152601160248201527f747820646f6573206e6f742065786973740000000000000000000000000000006044820152fd5b15610be057565b606460405162461bcd60e51b815260206004820152601360248201527f747820616c7265616479206578656375746564000000000000000000000000006044820152fd5b600092918154610c33816103e2565b92600191808316908115610c8c5750600114610c50575b50505050565b90919293945060005260209081600020906000915b858310610c7b5750505050019038808080610c4a565b805485840152918301918101610c65565b60ff1916845250505081151590910201915038808080610c4a565b3d15610cd2573d90610cb882610770565b91610cc6604051938461044e565b82523d6000602084013e565b606090565b906020610ce89281815201906101e6565b90565b6044815110610d885760048101518101906020816024840193031261014b5760248101519067ffffffffffffffff821161014b5701908060438301121561014b57602482015191610d3b83610770565b91610d49604051938461044e565b8383526044848301011161014b57610d8492610d6c9160446020850191016101c3565b60405191829162461bcd60e51b835260048301610cd7565b0390fd5b606460405162461bcd60e51b815260206004820152600e60248201527f526561736f6e20756e6b6e6f776e0000000000000000000000000000000000006044820152fdfea2646970667358221220601e3373ecb2638f1b5d7dcff53436f11d3360fad179a6e247ece14fc5229fbc64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4,
        "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
        "label": "owners",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 8,
        "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
        "label": "isOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 10,
        "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
        "label": "numConfirmationsRequired",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
        "label": "isConfirmed",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 31,
        "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
        "label": "transactions",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_struct(Transaction)21_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Transaction)21_storage)dyn_storage": {
        "base": "t_struct(Transaction)21_storage",
        "encoding": "dynamic_array",
        "label": "struct MultisigMock.Transaction[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_struct(Transaction)21_storage": {
        "encoding": "inplace",
        "label": "struct MultisigMock.Transaction",
        "members": [
          {
            "astId": 12,
            "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
            "label": "to",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 14,
            "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
            "label": "value",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 16,
            "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
            "label": "data",
            "offset": 0,
            "slot": "2",
            "type": "t_bytes_storage"
          },
          {
            "astId": 18,
            "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
            "label": "executed",
            "offset": 0,
            "slot": "3",
            "type": "t_bool"
          },
          {
            "astId": 20,
            "contract": "contracts/mocks/MultisigMock.sol:MultisigMock",
            "label": "numConfirmations",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}